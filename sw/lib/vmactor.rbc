!RBIX
4472690874163217065
18
M
1
n
n
x
10
__script__
i
47
5
7
0
64
47
49
1
1
15
5
7
2
64
47
49
1
1
15
99
7
3
1
65
49
4
3
13
99
12
7
5
12
7
6
12
65
12
49
7
4
15
49
5
0
15
2
11
I
6
I
0
I
0
I
0
I
0
n
p
8
s
6
thread
x
7
require
s
5
actor
x
7
VMActor
x
10
open_class
x
14
__class_init__
M
1
n
n
x
7
VMActor
i
144
5
66
5
7
0
44
43
1
78
49
2
1
49
3
2
15
5
7
4
45
5
6
13
71
7
47
9
40
47
49
8
0
13
47
49
9
0
15
8
43
49
7
0
49
3
2
15
5
99
43
10
12
49
11
1
13
99
12
7
12
12
7
13
12
65
12
49
14
4
15
54
50
12
0
15
99
7
9
7
15
65
67
49
16
0
49
17
4
15
99
7
18
7
19
65
67
49
16
0
49
17
4
15
5
7
20
7
18
47
49
21
2
15
5
48
22
15
99
7
23
1
65
49
24
3
13
99
12
7
25
12
7
26
12
65
12
49
14
4
15
49
25
0
11
I
6
I
0
I
0
I
0
I
0
n
p
27
x
8
@@actors
x
4
Hash
x
16
new_from_literal
x
18
class_variable_set
x
13
@@actors_lock
x
5
Mutex
n
x
3
new
x
8
allocate
x
10
initialize
x
4
Type
x
22
object_singleton_class
x
18
__metaclass_init__
M
1
n
n
x
18
__metaclass_init__
i
90
5
66
99
7
0
7
1
65
67
49
2
0
49
3
4
15
99
7
4
7
5
65
67
49
2
0
49
3
4
15
99
7
6
7
7
65
67
49
2
0
49
3
4
15
99
7
8
7
9
65
67
49
2
0
49
3
4
15
5
48
10
15
99
7
11
7
12
65
67
49
2
0
49
3
4
15
99
7
13
7
14
65
67
49
2
0
49
3
4
11
I
5
I
0
I
0
I
0
I
0
n
p
15
x
8
register
M
1
n
n
x
8
register
i
12
65
7
0
49
1
1
56
2
50
3
0
11
I
3
I
1
I
1
I
0
I
1
n
p
4
x
13
@@actors_lock
x
18
class_variable_get
M
1
p
2
x
9
for_block
t
n
x
8
register
i
23
65
7
0
49
1
1
21
1
0
49
2
0
21
1
0
13
18
3
49
3
2
15
11
I
5
I
0
I
0
I
0
I
0
I
-2
p
4
x
8
@@actors
x
18
class_variable_get
x
9
object_id
x
3
[]=
p
3
I
0
I
11
I
17
x
14
lib/vmactor.rb
p
0
x
11
synchronize
p
5
I
-1
I
10
I
0
I
11
I
c
x
14
lib/vmactor.rb
p
1
x
5
actor
x
17
method_visibility
x
15
add_defn_method
x
8
dispatch
M
1
n
n
x
8
dispatch
i
47
20
0
13
7
0
12
49
1
1
9
23
15
5
20
1
36
1
47
51
0
0
8
46
13
7
2
12
49
1
1
9
44
15
5
20
1
36
1
47
51
3
0
8
46
15
1
11
I
5
I
2
I
1
I
0
I
1
I
1
p
4
x
5
spawn
x
3
===
x
7
message
x
15
process_message
p
13
I
-1
I
15
I
0
I
16
I
2
I
17
I
17
I
18
I
2d
I
16
I
2e
I
0
I
2f
x
14
lib/vmactor.rb
p
2
x
7
command
x
8
operands
x
17
serialize_message
M
1
n
n
x
17
serialize_message
i
103
20
0
13
45
0
1
12
49
2
1
9
22
15
20
0
56
3
50
4
0
8
102
13
45
5
6
43
7
12
49
2
1
9
57
15
45
5
8
43
7
5
20
0
49
9
0
47
49
10
1
36
1
51
11
0
8
102
13
45
12
13
12
49
2
1
9
99
15
45
14
15
20
0
49
16
1
15
45
5
17
43
7
7
14
45
5
18
43
19
20
0
49
20
0
49
11
3
8
102
15
20
0
11
I
5
I
1
I
1
I
0
I
1
n
p
21
x
5
Array
n
x
3
===
M
1
p
2
x
9
for_block
t
n
x
17
serialize_message
i
12
57
19
0
15
5
20
0
47
49
0
1
11
I
4
I
1
I
1
I
0
I
1
n
p
1
x
17
serialize_message
p
3
I
0
I
30
I
c
x
14
lib/vmactor.rb
p
1
x
5
child
x
3
map
x
8
Rubinius
n
x
5
Tuple
n
x
4
to_a
x
17
serialize_message
x
2
[]
x
5
Actor
n
x
7
VMActor
n
x
8
register
n
n
x
5
VM_ID
x
9
object_id
p
19
I
-1
I
2e
I
0
I
2f
I
2
I
30
I
16
I
31
I
39
I
32
I
44
I
33
I
4d
I
34
I
64
I
35
I
66
I
0
I
67
x
14
lib/vmactor.rb
p
1
x
5
value
x
19
unserialize_message
M
1
n
n
x
19
unserialize_message
i
101
20
0
13
45
0
1
43
2
12
49
3
1
9
97
15
20
0
49
4
0
7
5
83
6
9
78
20
0
97
37
19
1
15
37
19
2
15
37
19
3
15
15
2
15
45
5
7
13
71
8
47
9
69
47
49
9
0
13
20
2
20
3
47
49
10
2
15
8
76
20
2
20
3
49
8
2
8
95
45
0
11
43
2
20
0
56
12
50
13
0
36
1
51
14
0
8
100
15
20
0
11
I
8
I
4
I
1
I
0
I
1
n
p
15
x
8
Rubinius
n
x
5
Tuple
x
3
===
x
5
first
x
7
VMActor
x
2
==
n
x
3
new
x
8
allocate
x
10
initialize
n
M
1
p
2
x
9
for_block
t
n
x
19
unserialize_message
i
12
57
19
0
15
5
20
0
47
49
0
1
11
I
4
I
1
I
1
I
0
I
1
n
p
1
x
19
unserialize_message
p
3
I
0
I
41
I
c
x
14
lib/vmactor.rb
p
1
x
5
child
x
3
map
x
2
[]
p
21
I
-1
I
3a
I
0
I
3b
I
2
I
3c
I
f
I
3d
I
1a
I
3e
I
2c
I
3f
I
4e
I
41
I
5f
I
0
I
62
I
43
I
64
I
0
I
65
x
14
lib/vmactor.rb
p
4
x
5
value
x
1
_
x
5
vm_id
x
8
actor_id
x
7
private
x
5
spawn
M
1
n
n
x
5
spawn
i
245
26
93
0
15
29
149
0
20
2
49
0
0
13
45
1
2
12
49
3
1
9
41
15
20
2
49
0
0
19
4
15
45
4
5
56
6
50
7
0
8
102
13
45
8
9
12
49
3
1
9
90
15
20
2
97
37
19
5
15
37
19
6
15
36
19
7
15
2
15
45
10
11
20
5
49
12
1
19
5
15
45
4
13
56
14
50
7
0
8
102
15
5
45
15
16
7
17
64
47
49
18
2
19
3
15
5
20
3
47
49
19
1
15
45
20
21
43
22
20
0
7
23
7
24
20
1
45
20
25
43
26
7
27
20
3
49
28
0
49
29
2
35
4
49
30
2
30
8
241
26
93
1
15
24
13
45
31
32
12
49
3
1
10
166
8
236
15
24
19
8
15
45
20
33
43
22
20
0
7
23
7
24
20
1
45
20
34
43
26
7
35
20
8
49
36
0
47
101
37
7
38
20
8
35
1
20
8
49
39
0
36
49
40
1
7
41
64
49
42
1
47
101
37
63
3
49
29
2
35
4
49
30
2
25
8
241
15
92
1
27
34
92
0
27
11
I
16
I
9
I
2
I
0
I
2
I
2
p
43
x
5
first
x
6
String
n
x
3
===
x
5
Actor
n
M
1
p
2
x
9
for_block
t
n
x
5
spawn
i
9
5
21
1
4
47
49
0
1
11
I
3
I
0
I
0
I
0
I
0
I
-2
p
1
x
4
eval
p
3
I
0
I
53
I
9
x
14
lib/vmactor.rb
p
0
x
5
spawn
x
6
Symbol
n
x
6
Object
n
x
12
const_lookup
n
M
1
p
2
x
9
for_block
t
n
x
5
spawn
i
15
21
1
5
21
1
6
21
1
7
36
1
51
0
1
11
I
5
I
0
I
0
I
0
I
0
I
-2
p
1
x
4
send
p
3
I
0
I
58
I
f
x
14
lib/vmactor.rb
p
0
x
13
ArgumentError
n
s
76
first argument must be a Symbol (for application) or String (for evaluation)
x
5
raise
x
8
register
x
8
Rubinius
n
x
2
VM
x
5
actor
x
7
message
n
x
5
Tuple
x
11
spawn_reply
x
9
object_id
x
2
[]
x
12
send_message
x
9
Exception
n
n
n
x
11
spawn_error
x
5
class
x
4
to_s
s
2
: 
x
9
backtrace
x
1
+
s
2

	
x
4
join
p
59
I
-1
I
4f
I
0
I
50
I
c
I
51
I
17
I
52
I
1f
I
53
I
29
I
54
I
34
I
55
I
45
I
56
I
50
I
58
I
5b
I
5a
I
66
I
50
I
69
I
5d
I
71
I
5f
I
78
I
60
I
7a
I
61
I
7c
I
62
I
7e
I
63
I
8f
I
5f
I
95
I
0
I
9a
I
65
I
a7
I
6c
I
a8
I
65
I
ab
I
66
I
b2
I
67
I
b4
I
68
I
b6
I
69
I
b8
I
6a
I
e6
I
66
I
f1
I
0
I
f5
x
14
lib/vmactor.rb
p
9
x
9
container
x
12
remote_actor
x
8
operands
x
5
actor
x
7
command
x
5
klass
x
4
meth
x
4
args
x
2
ex
x
15
process_message
M
1
n
n
x
15
process_message
i
37
65
7
0
49
1
1
56
2
50
3
0
19
2
15
20
2
9
21
1
8
23
1
11
15
20
2
5
20
1
47
49
4
1
49
5
1
11
I
6
I
3
I
2
I
0
I
2
n
p
6
x
13
@@actors_lock
x
18
class_variable_get
M
1
p
2
x
9
for_block
t
n
x
15
process_message
i
13
65
7
0
49
1
1
21
1
0
49
2
1
11
I
3
I
0
I
0
I
0
I
0
I
-2
p
3
x
8
@@actors
x
18
class_variable_get
x
2
[]
p
3
I
0
I
71
I
d
x
14
lib/vmactor.rb
p
0
x
11
synchronize
x
19
unserialize_message
x
2
<<
p
11
I
-1
I
70
I
0
I
71
I
e
I
73
I
17
I
0
I
18
I
74
I
25
x
14
lib/vmactor.rb
p
3
x
8
actor_id
x
7
message
x
5
actor
p
15
I
2
I
10
I
10
I
15
I
1e
I
2e
I
2c
I
3a
I
3a
I
48
I
3e
I
4f
I
4c
I
70
I
5a
x
14
lib/vmactor.rb
p
0
x
13
attach_method
M
1
n
n
x
10
initialize
i
14
20
0
20
1
17
2
38
0
15
38
1
15
2
11
I
4
I
2
I
2
I
0
I
2
n
p
2
x
13
@container_id
x
9
@actor_id
p
5
I
-1
I
78
I
0
I
79
I
e
x
14
lib/vmactor.rb
p
2
x
12
container_id
x
8
actor_id
x
17
method_visibility
x
15
add_defn_method
x
2
<<
M
1
n
n
x
2
<<
i
27
45
0
1
43
2
39
3
7
4
7
5
39
6
45
7
8
20
0
49
9
1
35
4
49
10
2
11
I
8
I
1
I
1
I
0
I
1
n
p
11
x
8
Rubinius
n
x
2
VM
x
13
@container_id
x
5
actor
x
7
message
x
9
@actor_id
x
7
VMActor
n
x
17
serialize_message
x
12
send_message
p
5
I
-1
I
7d
I
0
I
7e
I
1b
x
14
lib/vmactor.rb
p
1
x
5
value
x
4
send
x
12
alias_method
x
7
private
x
9
Container
x
10
open_class
x
14
__class_init__
M
1
n
n
x
9
Container
i
66
5
66
5
7
0
1
49
1
2
15
5
99
43
2
12
49
3
1
13
99
12
7
4
12
7
5
12
65
12
49
6
4
15
54
50
4
0
15
99
7
7
7
8
65
67
49
9
0
49
10
4
15
99
7
11
7
12
65
67
49
9
0
49
10
4
11
I
6
I
0
I
0
I
0
I
0
n
p
13
x
11
@@responder
x
18
class_variable_set
x
4
Type
x
22
object_singleton_class
x
18
__metaclass_init__
M
1
n
n
x
18
__metaclass_init__
i
44
5
66
99
7
0
7
1
65
67
49
2
0
49
3
4
15
99
7
4
7
5
65
67
49
2
0
49
3
4
15
99
7
6
7
7
65
67
49
2
0
49
3
4
11
I
5
I
0
I
0
I
0
I
0
n
p
8
x
22
init_message_responder
M
1
n
n
x
22
init_message_responder
i
49
65
7
0
49
1
1
9
18
65
7
0
49
2
1
13
10
48
15
65
7
0
45
3
4
5
7
5
47
49
6
1
13
70
10
42
44
43
7
12
49
8
1
50
9
0
49
10
2
11
I
5
I
0
I
0
I
0
I
0
n
p
11
x
11
@@responder
x
23
class_variable_defined?
x
18
class_variable_get
x
6
Thread
n
x
16
process_messages
x
6
method
x
4
Proc
x
14
__from_block__
x
3
new
x
18
class_variable_set
p
5
I
-1
I
8f
I
0
I
90
I
31
x
14
lib/vmactor.rb
p
0
x
17
method_visibility
x
15
add_defn_method
x
23
child_message_responder
M
1
n
n
x
23
child_message_responder
i
54
23
0
10
8
1
19
0
15
23
1
10
16
1
19
1
15
45
0
1
43
2
20
0
7
3
7
4
20
1
45
0
5
43
6
7
7
45
0
8
43
9
49
10
2
35
4
49
11
2
15
5
48
12
11
I
a
I
2
I
0
I
0
I
2
n
p
13
x
8
Rubinius
n
x
2
VM
x
5
actor
x
7
message
n
x
5
Tuple
x
5
ready
n
x
5
VM_ID
x
2
[]
x
12
send_message
x
16
process_messages
p
17
I
-1
I
94
I
10
I
96
I
17
I
97
I
19
I
98
I
1b
I
99
I
1d
I
9a
I
2e
I
96
I
32
I
9d
I
36
x
14
lib/vmactor.rb
p
2
x
9
parent_vm
x
5
actor
x
16
process_messages
M
1
n
n
x
16
process_messages
i
11
45
0
1
43
2
56
3
50
4
0
11
I
2
I
0
I
0
I
0
I
0
n
p
5
x
8
Rubinius
n
x
2
VM
M
1
p
2
x
9
for_block
t
n
x
16
process_messages
i
30
58
37
19
0
15
19
1
15
20
0
7
0
83
1
9
28
45
2
3
20
1
36
1
51
4
0
8
29
1
11
I
6
I
2
I
1
I
0
I
1
I
1
p
5
x
5
actor
x
2
==
x
7
VMActor
n
x
8
dispatch
p
7
I
0
I
a3
I
8
I
a4
I
1d
I
0
I
1e
x
14
lib/vmactor.rb
p
2
x
7
command
x
8
operands
x
12
each_message
p
5
I
-1
I
a2
I
0
I
a3
I
b
x
14
lib/vmactor.rb
p
0
p
7
I
2
I
8f
I
10
I
94
I
1e
I
a2
I
2c
x
14
lib/vmactor.rb
p
0
x
13
attach_method
x
10
initialize
M
1
n
n
x
10
initialize
i
87
45
0
1
49
2
0
15
45
3
4
45
5
6
49
7
0
49
8
1
15
20
0
7
9
64
7
10
64
7
11
45
12
13
43
14
47
101
15
7
16
45
5
17
49
7
0
49
18
0
47
101
15
7
19
63
5
35
3
81
20
19
0
15
45
12
21
43
22
20
0
36
1
51
23
0
38
24
15
45
5
25
56
26
50
27
0
11
I
9
I
1
I
0
I
0
I
0
I
0
p
28
x
9
Container
n
x
22
init_message_responder
x
7
VMActor
n
x
5
Actor
n
x
7
current
x
8
register
s
9
-rvmactor
s
2
-e
s
43
VMActor::Container.child_message_responder(
x
8
Rubinius
n
x
5
VM_ID
x
4
to_s
s
1
,
n
x
9
object_id
s
1
)
x
1
+
n
x
2
VM
x
5
spawn
x
3
@vm
n
M
1
p
2
x
9
for_block
t
n
x
10
initialize
i
27
57
19
0
15
20
0
45
0
1
43
2
7
3
39
4
49
5
0
49
6
2
56
7
50
8
1
11
I
6
I
1
I
1
I
0
I
1
n
p
9
x
8
Rubinius
n
x
5
Tuple
x
5
ready
x
3
@vm
x
2
id
x
2
[]
M
1
p
2
x
9
for_block
t
n
x
10
initialize
i
2
1
11
I
2
I
0
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
b8
I
2
x
14
lib/vmactor.rb
p
0
x
4
when
p
5
I
0
I
b6
I
4
I
b8
I
1b
x
14
lib/vmactor.rb
p
1
x
6
filter
x
7
receive
p
19
I
-1
I
aa
I
0
I
ab
I
7
I
ac
I
14
I
b2
I
16
I
b0
I
19
I
b1
I
3c
I
af
I
3f
I
b4
I
4e
I
b6
I
57
x
14
lib/vmactor.rb
p
1
x
4
args
x
17
method_visibility
x
15
add_defn_method
x
11
spawn_actor
M
1
n
n
x
11
spawn_actor
i
62
45
0
1
45
2
3
49
4
0
49
5
1
15
45
6
7
43
8
39
9
49
10
0
7
11
7
12
45
6
13
43
14
45
2
15
49
4
0
49
16
0
35
4
20
0
36
49
17
1
49
18
2
15
45
2
19
56
20
50
21
0
11
I
7
I
1
I
0
I
0
I
0
I
0
p
22
x
7
VMActor
n
x
5
Actor
n
x
7
current
x
8
register
x
8
Rubinius
n
x
2
VM
x
3
@vm
x
2
id
x
5
actor
x
5
spawn
n
x
5
VM_ID
n
x
9
object_id
x
1
+
x
12
send_message
n
M
1
p
2
x
9
for_block
t
n
x
11
spawn_actor
i
46
57
19
0
15
20
0
45
0
1
43
2
7
3
45
4
5
49
6
2
56
7
50
8
1
15
20
0
45
0
9
43
2
7
10
45
4
11
49
6
2
56
12
50
8
1
11
I
6
I
1
I
1
I
0
I
1
n
p
13
x
8
Rubinius
n
x
5
Tuple
x
11
spawn_reply
x
6
Object
n
x
2
[]
M
1
p
2
x
9
for_block
t
n
x
11
spawn_actor
i
58
57
19
0
15
20
0
97
37
19
1
15
37
19
2
15
15
2
15
45
0
1
13
71
2
47
9
46
47
49
3
0
13
39
4
49
5
0
20
2
47
49
6
2
15
8
56
39
4
49
5
0
20
2
49
2
2
31
11
I
8
I
3
I
1
I
0
I
1
n
p
7
x
7
VMActor
n
x
3
new
x
8
allocate
x
3
@vm
x
2
id
x
10
initialize
p
7
I
0
I
dd
I
4
I
de
I
12
I
df
I
3a
x
14
lib/vmactor.rb
p
3
x
7
message
x
1
_
x
8
actor_id
x
4
when
n
x
11
spawn_error
n
M
1
p
2
x
9
for_block
t
n
x
11
spawn_actor
i
26
57
19
0
15
20
0
97
37
19
1
15
37
19
2
15
15
2
15
5
20
2
47
49
0
1
11
I
6
I
3
I
1
I
0
I
1
n
p
1
x
5
raise
p
7
I
0
I
e2
I
4
I
e3
I
12
I
e4
I
1a
x
14
lib/vmactor.rb
p
3
x
7
message
x
1
_
x
2
ex
p
7
I
0
I
dc
I
4
I
dd
I
19
I
e2
I
2e
x
14
lib/vmactor.rb
p
1
x
6
filter
x
7
receive
p
21
I
-1
I
d1
I
0
I
d2
I
d
I
d4
I
17
I
d5
I
19
I
d6
I
1b
I
d7
I
20
I
d8
I
2b
I
d9
I
31
I
d4
I
35
I
dc
I
3e
x
14
lib/vmactor.rb
p
1
x
4
args
p
9
I
2
I
8b
I
a
I
8d
I
26
I
aa
I
34
I
d1
I
42
x
14
lib/vmactor.rb
p
0
p
17
I
2
I
b
I
10
I
c
I
2f
I
e
I
4b
I
78
I
59
I
7d
I
67
I
81
I
71
I
84
I
75
I
8a
I
90
x
14
lib/vmactor.rb
p
0
x
13
attach_method
p
7
I
0
I
1
I
9
I
2
I
12
I
a
I
2f
x
14
lib/vmactor.rb
p
0
