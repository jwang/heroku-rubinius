!RBIX
4472690874163217065
18
M
1
n
n
x
10
__script__
i
46
5
7
0
64
47
49
1
1
15
5
7
2
64
47
49
1
1
15
99
7
3
65
49
4
2
13
99
12
7
5
12
7
6
12
65
12
49
7
4
15
49
5
0
15
2
11
I
6
I
0
I
0
I
0
I
0
n
p
8
s
17
bigdecimal/ludcmp
x
7
require
s
19
bigdecimal/jacobian
x
6
Newton
x
11
open_module
x
15
__module_init__
M
1
n
n
x
6
Newton
i
48
5
66
5
45
0
1
47
49
2
1
15
5
45
3
4
47
49
2
1
15
99
7
5
7
6
65
67
49
7
0
49
8
4
15
99
7
9
7
10
65
67
49
7
0
49
8
4
11
I
5
I
0
I
0
I
0
I
0
n
p
11
x
7
LUSolve
n
x
7
include
x
8
Jacobian
n
x
4
norm
M
1
n
n
x
4
norm
i
41
23
1
10
9
7
0
19
1
15
20
1
19
2
15
20
0
49
1
0
19
3
15
44
43
2
78
20
3
2
49
3
3
56
4
50
5
0
15
20
2
11
I
9
I
5
I
1
I
0
I
2
n
p
6
d
 +0.000000000000000000000000000000000000000000000000000000     0
x
4
size
x
5
Range
x
3
new
M
1
p
2
x
9
for_block
t
n
x
4
norm
i
35
57
22
1
4
15
21
1
2
21
1
0
21
1
4
49
0
1
21
1
0
21
1
4
49
0
1
49
1
1
81
2
22
1
2
11
I
5
I
0
I
1
I
0
I
1
n
p
3
x
2
[]
x
1
*
x
1
+
p
5
I
0
I
23
I
5
I
24
I
23
x
24
lib/bigdecimal/newton.rb
p
0
x
4
each
p
11
I
-1
I
20
I
9
I
21
I
e
I
22
I
16
I
23
I
26
I
26
I
29
x
24
lib/bigdecimal/newton.rb
p
5
x
2
fv
x
4
zero
x
1
s
x
1
n
x
1
i
x
17
method_visibility
x
15
add_defn_method
x
7
nlsolve
M
1
n
n
x
7
nlsolve
i
276
78
19
2
15
20
1
49
0
0
19
3
15
20
0
20
1
49
1
1
19
4
15
20
0
49
2
0
19
5
15
20
0
49
3
0
19
6
15
20
0
49
4
0
19
7
15
20
6
20
7
49
5
1
19
8
15
5
20
4
20
5
47
49
6
2
19
9
15
20
0
49
7
0
20
0
49
7
0
49
8
1
20
0
49
7
0
49
8
1
19
10
15
20
6
20
10
49
5
1
19
10
15
20
0
49
9
0
19
11
15
20
9
20
11
49
10
1
9
271
20
2
79
81
11
19
2
15
5
20
0
20
4
20
1
47
49
12
3
19
12
15
5
20
12
20
4
5
20
12
20
3
20
5
20
6
47
49
13
4
20
5
47
49
14
4
19
13
15
20
7
19
14
15
20
1
49
15
0
19
15
15
20
14
20
8
49
8
1
19
14
15
20
14
20
10
84
16
9
209
5
7
17
64
47
49
18
1
8
210
1
15
44
43
19
78
20
3
2
49
20
3
56
21
50
22
0
15
20
0
20
1
49
1
1
19
4
15
5
20
4
20
5
47
49
6
2
19
17
15
68
20
17
20
9
49
10
1
9
261
8
181
1
15
20
17
19
9
15
68
8
110
1
15
20
2
11
I
1a
I
12
I
2
I
0
I
2
n
p
23
x
4
size
x
6
values
x
4
zero
x
3
one
x
3
two
x
1
/
x
4
norm
x
3
ten
x
1
*
x
3
eps
x
2
>=
x
1
+
x
8
jacobian
x
8
ludecomp
x
7
lusolve
x
3
dup
x
1
<
s
33
Failed to reduce function values.
x
5
raise
x
5
Range
x
3
new
M
1
p
2
x
9
for_block
t
n
x
7
nlsolve
i
45
57
22
1
16
15
21
1
1
21
1
16
21
1
15
21
1
16
49
0
1
21
1
13
21
1
16
49
0
1
21
1
14
49
1
1
82
2
13
18
3
49
3
2
15
11
I
6
I
0
I
1
I
0
I
1
n
p
4
x
2
[]
x
1
*
x
1
-
x
3
[]=
p
5
I
0
I
43
I
5
I
44
I
2d
x
24
lib/bigdecimal/newton.rb
p
0
x
4
each
p
63
I
-1
I
29
I
0
I
2a
I
4
I
2b
I
c
I
2d
I
16
I
2e
I
1e
I
2f
I
26
I
30
I
2e
I
31
I
38
I
32
I
44
I
33
I
5c
I
34
I
66
I
35
I
6e
I
36
I
77
I
37
I
7f
I
39
I
8d
I
3b
I
a8
I
3c
I
ad
I
3d
I
b5
I
3f
I
bf
I
40
I
c7
I
41
I
d1
I
40
I
d2
I
0
I
d3
I
43
I
e3
I
46
I
ed
I
47
I
fa
I
48
I
105
I
0
I
107
I
49
I
10f
I
0
I
111
I
4b
I
114
x
24
lib/bigdecimal/newton.rb
p
18
x
1
f
x
1
x
x
6
nRetry
x
1
n
x
2
f0
x
4
zero
x
3
one
x
3
two
x
2
p5
x
1
d
x
7
minfact
x
1
e
x
4
dfdx
x
2
dx
x
4
fact
x
2
xs
x
1
i
x
2
dn
p
9
I
2
I
1d
I
b
I
1e
I
14
I
20
I
22
I
29
I
30
x
24
lib/bigdecimal/newton.rb
p
0
x
13
attach_method
p
7
I
0
I
19
I
9
I
1a
I
12
I
1c
I
2e
x
24
lib/bigdecimal/newton.rb
p
0
