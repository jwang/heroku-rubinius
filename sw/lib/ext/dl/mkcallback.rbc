!RBIX
4472690874163217065
18
M
1
n
n
x
10
__script__
i
80
5
7
0
64
47
49
1
1
15
99
43
2
7
3
49
4
1
45
5
6
65
49
7
0
49
8
1
49
9
1
15
5
7
10
64
47
49
1
1
15
5
7
11
64
47
49
1
1
15
99
7
12
7
13
65
67
49
14
0
49
15
4
15
45
16
17
49
18
0
49
19
0
56
20
50
21
0
15
2
11
I
5
I
0
I
0
I
0
I
0
n
p
22
s
4
mkmf
x
7
require
x
7
Globals
x
2
$:
x
2
[]
x
4
File
n
x
11
active_path
x
7
dirname
x
7
unshift
s
4
type
s
8
dlconfig
x
6
mkfunc
M
1
n
n
x
6
mkfunc
i
287
44
43
0
78
20
2
79
82
1
49
2
2
56
3
50
4
0
7
5
64
49
6
1
19
3
15
44
43
0
78
20
2
79
82
1
49
2
2
56
7
50
4
0
7
8
64
49
6
1
19
4
15
45
9
10
20
0
49
11
1
7
12
49
11
1
9
97
7
13
45
9
14
20
0
49
11
1
7
15
49
11
1
7
16
64
49
11
1
47
101
17
7
18
63
3
8
100
7
19
64
19
5
15
7
20
45
9
21
20
0
49
11
1
7
22
49
11
1
47
101
17
63
2
7
23
20
0
49
17
0
47
101
17
7
24
20
1
49
17
0
47
101
17
7
25
20
3
47
101
17
7
26
63
7
7
27
64
7
28
64
7
29
20
2
49
17
0
47
101
17
7
30
63
3
7
31
64
7
32
20
2
49
17
0
47
101
17
7
30
63
3
7
33
64
20
4
7
33
64
7
34
20
0
49
17
0
47
101
17
7
35
20
1
49
17
0
47
101
17
7
36
63
5
7
37
64
7
38
64
7
39
64
7
40
64
7
41
64
7
42
64
7
43
20
2
49
17
0
47
101
17
7
44
63
3
7
45
64
7
46
64
7
47
64
7
33
64
20
5
7
48
64
35
24
7
8
64
49
6
1
19
6
15
20
6
11
11
I
1f
I
7
I
3
I
0
I
3
n
p
49
x
5
Range
x
1
-
x
3
new
M
1
p
2
x
9
for_block
t
n
x
6
mkfunc
i
14
57
19
0
15
7
0
20
0
47
101
1
63
2
11
I
4
I
1
I
1
I
0
I
1
n
p
2
s
8
long arg
x
4
to_s
p
3
I
0
I
9
I
e
x
24
lib/ext/dl/mkcallback.rb
p
1
x
1
i
x
7
collect
s
2
, 
x
4
join
M
1
p
2
x
9
for_block
t
n
x
6
mkfunc
i
29
57
19
0
15
7
0
20
0
49
1
0
47
101
1
7
2
20
0
49
1
0
47
101
1
7
3
63
5
11
I
7
I
1
I
1
I
0
I
1
n
p
4
s
7
  buff[
x
4
to_s
s
7
] = arg
s
1
;
p
5
I
0
I
b
I
4
I
c
I
1d
x
24
lib/ext/dl/mkcallback.rb
p
1
x
1
i
s
1


x
6
DLTYPE
n
x
2
[]
x
4
c2rb
s
9
  return 
n
x
4
rb2c
s
6
retval
x
4
to_s
s
1
;
s
23
  /* no return value */
s
7
static 
n
x
5
ctype
s
20
rb_dl_callback_func_
s
1
_
s
1
(
s
1
)
s
1
{
s
33
  VALUE retval, proto, proc, obj;
s
13
  VALUE argv[
s
2
];
s
12
  int  argc;
s
12
  long buff[
s
0

s
55
  obj = rb_hash_aref(DLFuncTable, rb_assoc_new(INT2NUM(
s
10
),INT2NUM(
s
4
)));
s
16
  if(NIL_P(obj))
s
79
    rb_raise(rb_eDLError, "callback function does not exist in DL::FuncTable");
s
27
  Check_Type(obj, T_ARRAY);
s
31
  proto = rb_ary_entry(obj, 0);
s
31
  proc  = rb_ary_entry(obj, 1);
s
30
  Check_Type(proto, T_STRING);
s
29
  if( RSTRING(proto)->len >= 
s
2
 )
s
49
    rb_raise(rb_eArgError, "too many arguments");
s
67
  rb_dl_scan_callback_args(buff, RSTRING(proto)->ptr, &argc, argv);
s
50
  retval = rb_funcall2(proc, id_call, argc, argv);
s
1
}
p
75
I
-1
I
8
I
0
I
9
I
1a
I
b
I
2b
I
d
I
2e
I
b
I
34
I
10
I
43
I
11
I
61
I
13
I
64
I
f
I
67
I
17
I
7b
I
18
I
9a
I
19
I
9d
I
1a
I
a0
I
1b
I
ae
I
1c
I
b1
I
1d
I
bf
I
1e
I
c2
I
1f
I
c4
I
20
I
c7
I
21
I
df
I
22
I
e2
I
23
I
e5
I
24
I
e8
I
25
I
eb
I
26
I
ee
I
27
I
f1
I
28
I
ff
I
29
I
102
I
2a
I
105
I
2b
I
108
I
2c
I
10b
I
2d
I
10d
I
2e
I
112
I
2f
I
115
I
17
I
118
I
16
I
11b
I
31
I
11f
x
24
lib/ext/dl/mkcallback.rb
p
7
x
7
rettype
x
4
fnum
x
4
argc
x
4
args
x
10
subst_code
x
8
ret_code
x
4
code
x
17
method_visibility
x
15
add_defn_method
x
6
DLTYPE
n
x
4
keys
x
4
sort
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
23
57
19
0
15
44
43
0
78
45
1
2
79
82
3
49
4
2
56
5
50
6
0
11
I
7
I
2
I
1
I
0
I
1
n
p
7
x
5
Range
x
12
MAX_CALLBACK
n
x
1
-
x
3
new
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
27
57
22
1
1
15
5
5
21
1
0
21
1
1
4
15
47
49
0
3
7
1
64
47
49
2
2
11
I
6
I
0
I
1
I
0
I
1
n
p
3
x
6
mkfunc
s
2



x
5
print
p
5
I
0
I
35
I
5
I
36
I
1b
x
24
lib/ext/dl/mkcallback.rb
p
0
x
4
each
p
5
I
0
I
34
I
4
I
35
I
17
x
24
lib/ext/dl/mkcallback.rb
p
2
x
1
t
x
1
n
x
4
each
p
13
I
0
I
3
I
9
I
4
I
1f
I
5
I
28
I
6
I
31
I
8
I
3f
I
34
I
50
x
24
lib/ext/dl/mkcallback.rb
p
0
