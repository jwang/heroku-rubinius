!RBIX
4472690874163217065
18
M
1
n
n
x
10
__script__
i
1512
5
7
0
64
47
49
1
1
15
26
93
0
15
29
1479
0
99
43
2
7
3
49
4
1
45
5
6
65
49
7
0
49
8
1
49
9
1
15
5
7
10
64
47
49
1
1
15
45
11
12
7
13
64
49
14
1
9
75
5
7
15
64
47
49
16
1
15
5
78
47
49
17
1
8
76
1
15
99
43
2
7
18
49
4
1
13
10
97
15
99
43
2
7
19
49
4
1
7
20
64
49
21
1
15
45
22
23
43
24
7
25
64
49
4
1
7
26
13
70
9
133
15
44
43
27
7
28
78
49
29
2
6
26
49
30
1
9
154
99
43
2
7
19
49
4
1
7
31
64
49
21
1
8
155
1
15
99
43
2
7
32
49
4
1
13
10
177
15
99
43
2
7
32
2
49
33
2
15
99
43
2
7
34
99
43
2
7
32
49
4
1
10
196
2
8
197
3
49
33
2
15
99
43
2
7
35
5
7
36
64
47
49
37
1
49
33
2
15
99
43
2
7
38
5
7
39
64
47
49
37
1
49
33
2
15
99
43
2
7
40
5
7
41
64
47
49
37
1
49
33
2
15
99
43
2
7
42
45
43
44
45
45
46
49
4
1
7
47
49
4
1
49
33
2
15
99
43
2
7
48
45
43
49
45
50
51
49
4
1
7
47
49
4
1
49
33
2
15
99
43
2
7
52
45
43
53
45
54
55
49
4
1
7
47
49
4
1
49
33
2
15
99
43
2
7
56
45
43
57
45
58
59
49
4
1
7
47
49
4
1
49
33
2
15
99
43
2
7
35
99
43
2
7
35
49
4
1
45
43
60
45
61
62
49
4
1
7
47
49
4
1
49
63
1
49
33
2
15
99
43
2
7
38
99
43
2
7
38
49
4
1
45
43
64
45
65
66
49
4
1
7
47
49
4
1
49
63
1
49
33
2
15
99
43
2
7
40
99
43
2
7
40
49
4
1
45
43
67
45
68
69
49
4
1
7
47
49
4
1
49
63
1
49
33
2
15
99
43
2
7
42
5
7
70
64
99
43
2
7
42
49
4
1
47
49
71
2
49
33
2
15
99
43
2
7
48
5
7
72
64
99
43
2
7
48
49
4
1
47
49
71
2
49
33
2
15
99
43
2
7
38
5
7
73
64
99
43
2
7
38
49
4
1
47
49
71
2
49
33
2
15
99
43
2
7
34
5
7
74
64
99
43
2
7
34
49
4
1
47
49
71
2
49
33
2
15
99
43
2
7
32
5
7
75
64
99
43
2
7
32
49
4
1
47
49
71
2
49
33
2
15
5
7
76
64
47
49
77
1
19
0
15
1
19
1
15
99
43
2
7
34
49
4
1
13
10
606
15
99
43
2
7
32
49
4
1
9
643
99
43
2
7
42
2
49
33
2
15
99
43
2
7
48
2
49
33
2
15
99
43
2
7
38
2
49
33
2
15
78
19
1
8
644
1
15
20
0
9
681
20
0
49
78
0
19
1
15
20
1
9
664
1
8
679
5
7
79
64
47
49
16
1
15
5
79
47
49
17
1
8
682
1
15
20
1
13
10
693
15
4
6
19
1
15
5
7
80
64
7
81
64
47
49
77
2
49
78
0
19
2
15
45
43
82
49
83
0
49
84
0
19
3
15
99
43
2
7
85
7
86
20
1
47
101
87
7
88
63
3
49
33
2
15
99
7
89
7
90
65
67
49
91
0
49
92
4
15
99
43
2
7
85
49
4
1
7
93
20
2
47
101
87
7
88
63
3
49
21
1
15
99
43
2
7
85
49
4
1
7
94
20
3
47
101
87
7
88
63
3
49
21
1
15
99
43
2
7
32
49
4
1
9
829
99
43
2
7
85
49
4
1
7
95
64
49
21
1
8
856
99
43
2
7
34
49
4
1
9
855
99
43
2
7
85
49
4
1
7
96
64
49
21
1
8
856
1
15
99
43
2
7
42
49
4
1
9
883
99
43
2
7
85
49
4
1
7
97
64
49
21
1
8
884
1
15
99
43
2
7
48
49
4
1
9
911
99
43
2
7
85
49
4
1
7
98
64
49
21
1
8
912
1
15
99
43
2
7
52
49
4
1
9
939
99
43
2
7
85
49
4
1
7
99
64
49
21
1
8
940
1
15
99
43
2
7
56
49
4
1
9
967
99
43
2
7
85
49
4
1
7
100
64
49
21
1
8
968
1
15
99
43
2
7
38
49
4
1
9
995
99
43
2
7
85
49
4
1
7
101
64
49
21
1
8
996
1
15
99
43
2
7
35
49
4
1
9
1023
99
43
2
7
85
49
4
1
7
102
64
49
21
1
8
1024
1
15
99
43
2
7
40
49
4
1
9
1051
99
43
2
7
85
49
4
1
7
103
64
49
21
1
8
1052
1
15
5
7
104
64
47
49
105
1
9
1098
5
7
106
64
47
49
107
1
15
5
7
108
64
7
104
64
47
49
109
2
15
5
7
110
64
47
49
89
1
15
2
19
4
8
1099
1
15
5
7
111
64
47
49
105
1
9
1178
5
7
112
64
47
49
89
1
15
5
7
113
64
47
49
107
1
15
5
7
114
64
47
49
109
1
15
5
7
115
64
47
49
109
1
15
5
7
116
64
47
49
109
1
15
5
7
117
64
47
49
109
1
9
1175
5
7
118
64
47
49
89
1
8
1176
1
8
1216
20
4
9
1210
5
7
119
64
47
49
109
1
15
5
7
120
64
47
49
109
1
15
5
7
121
64
47
49
109
1
8
1216
5
78
47
49
17
1
15
99
7
122
7
123
65
45
5
124
49
125
4
15
45
5
126
7
127
64
7
128
99
43
2
7
85
49
4
1
47
101
87
7
129
63
3
49
122
2
15
45
5
130
7
131
64
7
132
20
1
47
101
87
7
133
20
2
47
101
87
7
134
20
3
47
101
87
7
135
99
43
2
7
42
49
4
1
47
101
87
7
136
99
43
2
7
48
49
4
1
47
101
87
7
137
99
43
2
7
35
49
4
1
47
101
87
7
138
99
43
2
7
52
49
4
1
47
101
87
7
139
99
43
2
7
38
49
4
1
47
101
87
7
140
99
43
2
7
56
49
4
1
47
101
87
7
141
99
43
2
7
40
49
4
1
47
101
87
7
88
63
21
49
122
2
15
99
43
2
7
142
7
143
64
7
144
64
7
145
64
35
3
7
146
64
7
144
64
7
147
64
35
3
35
2
49
33
2
15
99
43
2
7
148
7
149
64
35
1
49
33
2
15
99
43
2
7
150
7
151
64
7
152
64
7
153
64
7
131
64
7
143
64
7
154
64
7
155
64
7
156
64
7
157
64
35
9
49
33
2
15
5
7
113
64
47
49
158
1
30
8
1506
26
93
1
15
24
13
45
159
160
12
49
161
1
10
1496
8
1501
15
1
25
8
1506
15
92
1
27
34
92
0
27
15
2
11
I
1e
I
5
I
0
I
0
I
0
n
p
162
s
4
mkmf
x
7
require
x
7
Globals
x
2
$:
x
2
[]
x
4
File
n
x
11
active_path
x
7
dirname
x
7
unshift
s
4
type
x
4
ARGV
n
s
6
--help
x
8
include?
s
454
  --help             print this messages
  --with-type-char   strictly use type 'char'
  --with-type-short  strictly use type 'short'
  --with-type-float  strictly use type 'float'
  --with-args=<max_arg>
  --with-callback=<max_callback>
  --enable-asm       use the embedded assembler for passing arguments.
                     (this option is available for i386 machine now.)
  --enable-dlstack   use a stack emulation for constructing function call.

x
5
print
x
4
exit
x
9
$CPPFLAGS
x
7
$CFLAGS
s
4
 -I.
x
2
<<
x
8
RbConfig
n
x
6
CONFIG
s
2
CC
n
x
6
Regexp
s
3
gcc
x
3
new
x
2
=~
s
39
 -fno-defer-pop -fno-omit-frame-pointer
x
13
$with_dlstack
x
3
[]=
x
9
$with_asm
x
14
$with_type_int
s
79
#include "config.h"
#if SIZEOF_INT == SIZEOF_LONG
#error int not needed
#endif

x
7
try_cpp
x
16
$with_type_float
s
85
#include "config.h"
#if SIZEOF_FLOAT == SIZEOF_DOUBLE
#error float not needed
#endif

x
16
$with_type_voidp
s
113
#include "config.h"
#if SIZEOF_VOIDP == SIZEOF_INT || SIZEOF_VOIDP == SIZEOF_LONG
#error void* not needed
#endif

x
15
$with_type_char
x
6
DLTYPE
n
x
4
CHAR
n
x
3
sym
x
16
$with_type_short
n
x
5
SHORT
n
x
15
$with_type_long
n
x
4
LONG
n
x
17
$with_type_double
n
x
6
DOUBLE
n
n
x
3
INT
n
x
1
&
n
x
5
FLOAT
n
n
x
5
VOIDP
n
s
9
type-char
x
13
enable_config
s
10
type-short
s
10
type-float
s
3
asm
s
7
dlstack
s
4
args
x
11
with_config
x
4
to_i
s
22
--with-args=<max_arg>

s
8
callback
s
2
10
n
x
4
keys
x
6
length
x
11
$dlconfig_h
s
26
#define MAX_ARG           
x
4
to_s
s
1


x
10
dlc_define
M
1
n
n
x
10
dlc_define
i
41
99
43
0
7
1
49
2
1
7
3
20
0
47
101
4
7
5
63
3
7
6
20
0
47
101
4
7
7
63
3
81
8
7
9
64
81
8
49
10
1
11
I
6
I
1
I
1
I
0
I
1
n
p
11
x
7
Globals
x
11
$dlconfig_h
x
2
[]
s
13
#if !defined(
x
4
to_s
s
2
)

s
9
# define 
s
1


x
1
+
s
7
#endif

x
2
<<
p
11
I
-1
I
5d
I
0
I
5e
I
13
I
5f
I
20
I
60
I
25
I
5e
I
29
x
21
lib/ext/dl/extconf.rb
p
1
x
5
const
x
17
method_visibility
x
15
add_defn_method
s
21
#define MAX_CALLBACK 
s
23
#define CALLBACK_TYPES 
s
20
#define USE_DLSTACK

s
23
#define USE_INLINE_ASM

s
23
#define WITH_TYPE_CHAR

s
24
#define WITH_TYPE_SHORT

s
23
#define WITH_TYPE_LONG

s
25
#define WITH_TYPE_DOUBLE

s
24
#define WITH_TYPE_FLOAT

s
22
#define WITH_TYPE_INT

s
24
#define WITH_TYPE_VOIDP

s
9
windows.h
x
11
have_header
s
8
kernel32
x
12
have_library
s
12
GetLastError
x
9
have_func
s
14
HAVE_WINDOWS_H
s
7
dlfcn.h
s
12
HAVE_DLFCN_H
s
2
dl
s
6
dlopen
s
7
dlclose
s
5
dlsym
s
7
dlerror
s
12
HAVE_DLERROR
s
11
LoadLibrary
s
11
FreeLibrary
s
14
GetProcAddress
x
6
update
M
1
n
n
x
6
update
i
72
26
93
0
15
29
23
0
5
20
0
56
0
47
50
1
1
20
1
83
2
30
8
52
26
93
1
15
24
13
45
3
4
43
5
12
49
6
1
10
42
8
47
15
3
25
8
52
15
92
1
27
34
92
0
27
13
10
71
15
5
20
0
7
7
64
56
8
47
50
1
2
11
I
8
I
2
I
2
I
0
I
2
n
p
9
M
1
p
2
x
9
for_block
t
n
x
6
update
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
0
I
1
n
p
1
x
4
read
p
3
I
0
I
9c
I
a
x
21
lib/ext/dl/extconf.rb
p
1
x
1
f
x
4
open
x
2
==
x
5
Errno
n
x
6
ENOENT
x
3
===
s
1
w
M
1
p
2
x
9
for_block
t
n
x
6
update
i
13
57
19
0
15
20
0
21
1
1
49
0
1
11
I
4
I
1
I
1
I
0
I
1
n
p
1
x
5
print
p
3
I
0
I
9f
I
d
x
21
lib/ext/dl/extconf.rb
p
1
x
1
f
p
15
I
-1
I
9a
I
0
I
9c
I
17
I
0
I
1c
I
9d
I
2b
I
9e
I
34
I
0
I
3b
I
9f
I
48
x
21
lib/ext/dl/extconf.rb
p
2
x
4
file
x
3
str
n
x
13
attach_method
n
s
10
dlconfig.h
s
38
#ifndef DLCONFIG_H
#define DLCONFIG_H

s
25

#endif /* DLCONFIG_H */

n
s
11
dlconfig.rb
s
10
MAX_ARG = 
s
16

MAX_CALLBACK = 
s
18

CALLBACK_TYPES = 
s
23

DLTYPE[CHAR][:sym]  = 
s
23

DLTYPE[SHORT][:sym] = 
s
23

DLTYPE[INT][:sym]   = 
s
23

DLTYPE[LONG][:sym]  = 
s
23

DLTYPE[FLOAT][:sym] = 
s
23

DLTYPE[DOUBLE][:sym]= 
s
23

DLTYPE[VOIDP][:sym] = 
x
13
$INSTALLFILES
s
12
./dlconfig.h
s
26
$(archdir)$(target_prefix)
s
1
.
s
4
dl.h
s
0

x
11
$cleanfiles
s
11
test/test.o
x
15
$distcleanfiles
s
9
call.func
s
13
callback.func
s
12
cbtable.func
s
15
test/libtest.so
s
7
test/*~
s
2
*~
s
8
mkmf.log
x
15
create_makefile
x
10
SystemExit
n
x
3
===
p
283
I
0
I
1
I
9
I
5
I
26
I
6
I
2f
I
8
I
3a
I
9
I
43
I
14
I
4b
I
8
I
4c
I
0
I
4d
I
17
I
68
I
19
I
8a
I
1a
I
9a
I
19
I
9b
I
0
I
9c
I
1d
I
b2
I
1e
I
c9
I
20
I
da
I
27
I
eb
I
2e
I
fc
I
35
I
113
I
36
I
12a
I
37
I
141
I
38
I
158
I
39
I
17a
I
3a
I
19c
I
3b
I
1be
I
3d
I
1d7
I
3e
I
1f0
I
3f
I
209
I
41
I
222
I
42
I
23b
I
44
I
246
I
45
I
24a
I
46
I
260
I
47
I
26a
I
48
I
274
I
49
I
27e
I
4a
I
283
I
46
I
284
I
0
I
285
I
4c
I
289
I
4d
I
291
I
4e
I
298
I
4f
I
2a1
I
50
I
2a7
I
0
I
2a9
I
4c
I
2aa
I
0
I
2ab
I
53
I
2b6
I
55
I
2c7
I
56
I
2d3
I
59
I
2d8
I
5a
I
2e3
I
59
I
2e7
I
5d
I
2f5
I
63
I
30c
I
64
I
323
I
65
I
32d
I
66
I
33d
I
68
I
347
I
69
I
357
I
68
I
358
I
0
I
359
I
6c
I
363
I
6d
I
373
I
6c
I
374
I
0
I
375
I
6f
I
37f
I
70
I
38f
I
6f
I
390
I
0
I
391
I
72
I
39b
I
73
I
3ab
I
72
I
3ac
I
0
I
3ad
I
75
I
3b7
I
76
I
3c7
I
75
I
3c8
I
0
I
3c9
I
78
I
3d3
I
79
I
3e3
I
78
I
3e4
I
0
I
3e5
I
7b
I
3ef
I
7c
I
3ff
I
7b
I
400
I
0
I
401
I
7e
I
40b
I
7f
I
41b
I
7e
I
41c
I
0
I
41d
I
82
I
427
I
83
I
430
I
84
I
43c
I
85
I
445
I
86
I
44a
I
82
I
44b
I
0
I
44c
I
89
I
456
I
8a
I
45f
I
8b
I
468
I
8c
I
471
I
8d
I
47a
I
8e
I
483
I
8f
I
48d
I
90
I
497
I
8f
I
498
I
0
I
49a
I
92
I
49e
I
93
I
4a7
I
94
I
4b0
I
95
I
4ba
I
97
I
4c0
I
0
I
4c1
I
9a
I
4ce
I
a2
I
4d4
I
a5
I
4e5
I
a2
I
4e9
I
a9
I
4ef
I
aa
I
4f8
I
ab
I
4ff
I
ac
I
506
I
ad
I
513
I
ae
I
520
I
af
I
52d
I
b0
I
53a
I
b1
I
547
I
b2
I
554
I
b3
I
563
I
a9
I
567
I
b6
I
56c
I
b7
I
577
I
b8
I
584
I
b6
I
588
I
ba
I
596
I
bb
I
5a7
I
bc
I
5b8
I
bb
I
5bc
I
be
I
5c7
I
0
I
5cc
I
bf
I
5e2
I
0
I
5e8
x
21
lib/ext/dl/extconf.rb
p
5
x
4
args
x
7
max_arg
x
12
max_callback
x
14
callback_types
x
14
have_windows_h
