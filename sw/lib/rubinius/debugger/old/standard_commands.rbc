!RBIX
4472690874163217065
18
M
1
n
n
x
10
__script__
i
37
5
7
0
64
47
49
1
1
15
99
7
2
65
49
3
2
13
99
12
7
4
12
7
5
12
65
12
49
6
4
15
49
4
0
15
2
11
I
6
I
0
I
0
I
0
I
0
n
p
7
s
2
pp
x
7
require
x
8
Rubinius
x
11
open_module
x
15
__module_init__
M
1
n
n
x
8
Rubinius
i
29
5
66
99
7
0
1
65
49
1
3
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
11
I
6
I
0
I
0
I
0
I
0
n
p
5
x
8
Debugger
x
10
open_class
x
14
__class_init__
M
1
n
n
x
8
Debugger
i
640
5
66
99
7
0
45
1
2
65
49
3
3
13
99
12
7
4
12
7
5
12
65
12
49
6
4
15
49
4
0
15
99
7
7
45
1
8
65
49
3
3
13
99
12
7
4
12
7
9
12
65
12
49
6
4
15
49
4
0
15
99
7
10
45
1
11
65
49
3
3
13
99
12
7
4
12
7
12
12
65
12
49
6
4
15
49
4
0
15
99
7
13
45
1
14
65
49
3
3
13
99
12
7
4
12
7
15
12
65
12
49
6
4
15
49
4
0
15
99
7
16
45
1
17
65
49
3
3
13
99
12
7
4
12
7
18
12
65
12
49
6
4
15
49
4
0
15
99
7
19
45
1
20
65
49
3
3
13
99
12
7
4
12
7
21
12
65
12
49
6
4
15
49
4
0
15
99
7
22
45
1
23
65
49
3
3
13
99
12
7
4
12
7
24
12
65
12
49
6
4
15
49
4
0
15
99
7
25
45
1
26
65
49
3
3
13
99
12
7
4
12
7
27
12
65
12
49
6
4
15
49
4
0
15
99
7
28
45
1
29
65
49
3
3
13
99
12
7
4
12
7
30
12
65
12
49
6
4
15
49
4
0
15
99
7
31
45
1
32
65
49
3
3
13
99
12
7
4
12
7
33
12
65
12
49
6
4
15
49
4
0
15
99
7
34
45
1
35
65
49
3
3
13
99
12
7
4
12
7
36
12
65
12
49
6
4
15
49
4
0
15
99
7
37
45
1
38
65
49
3
3
13
99
12
7
4
12
7
39
12
65
12
49
6
4
15
49
4
0
15
99
7
40
45
1
41
65
49
3
3
13
99
12
7
4
12
7
42
12
65
12
49
6
4
15
49
4
0
15
99
7
43
45
1
44
65
49
3
3
13
99
12
7
4
12
7
45
12
65
12
49
6
4
15
49
4
0
15
99
7
46
45
1
47
65
49
3
3
13
99
12
7
4
12
7
48
12
65
12
49
6
4
15
49
4
0
15
99
7
49
45
1
50
65
49
3
3
13
99
12
7
4
12
7
51
12
65
12
49
6
4
15
49
4
0
15
99
7
52
45
1
53
65
49
3
3
13
99
12
7
4
12
7
54
12
65
12
49
6
4
15
49
4
0
15
99
7
55
45
1
56
65
49
3
3
13
99
12
7
4
12
7
57
12
65
12
49
6
4
15
49
4
0
15
99
7
58
45
1
59
65
49
3
3
13
99
12
7
4
12
7
60
12
65
12
49
6
4
15
49
4
0
15
99
7
61
45
1
62
65
49
3
3
13
99
12
7
4
12
7
63
12
65
12
49
6
4
15
49
4
0
15
99
7
64
45
1
65
65
49
3
3
13
99
12
7
4
12
7
66
12
65
12
49
6
4
15
49
4
0
15
99
7
67
45
1
68
65
49
3
3
13
99
12
7
4
12
7
69
12
65
12
49
6
4
15
49
4
0
11
I
6
I
0
I
0
I
0
I
0
n
p
70
x
4
Help
x
7
Command
n
x
10
open_class
x
14
__class_init__
M
1
n
n
x
4
Help
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
4
help
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
35
^(?:(?:h(?:elp)?)|\?)(?:\s+(\w+))?$
x
3
new
x
3
[]=
x
6
syntax
s
6
h[elp]
x
11
description
s
30
Display this list of commands.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
49
45
0
1
7
2
64
49
3
1
19
3
15
20
3
7
4
64
7
5
64
35
2
7
6
64
49
7
2
15
20
1
49
8
0
19
4
15
20
4
56
9
50
10
0
15
20
3
11
11
I
8
I
5
I
3
I
0
I
3
n
p
11
x
6
Output
n
s
19
Available commands:
x
4
info
s
3
%-s
s
4
%-*s
s
2
  
x
11
set_columns
x
8
commands
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
102
57
19
0
15
20
0
7
0
49
1
1
13
9
25
15
21
1
2
79
49
2
1
49
3
0
13
10
78
15
20
0
49
4
0
49
5
0
45
6
7
13
71
8
47
9
65
47
49
9
0
13
21
1
2
79
49
2
1
47
49
10
1
15
8
75
21
1
2
79
49
2
1
49
8
1
49
11
1
9
100
21
1
3
20
0
49
0
0
20
0
49
12
0
35
2
49
13
1
8
101
1
11
I
7
I
1
I
1
I
0
I
1
n
p
14
x
6
syntax
x
11
respond_to?
x
2
[]
x
4
nil?
x
4
name
x
4
to_s
x
6
Regexp
n
x
3
new
x
8
allocate
x
10
initialize
x
2
=~
x
11
description
x
2
<<
p
11
I
0
I
11
I
4
I
12
I
50
I
13
I
64
I
12
I
65
I
0
I
66
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
1
x
3
cmd
x
4
each
p
13
I
-1
I
d
I
0
I
e
I
c
I
f
I
1d
I
10
I
25
I
11
I
2d
I
16
I
31
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
5
x
3
dbg
x
9
interface
x
2
md
x
6
output
x
4
cmds
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
8
I
5
I
b
I
e
I
9
I
27
I
a
I
31
I
b
I
3a
I
8
I
3f
I
d
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
13
attach_method
x
4
Show
n
M
1
n
n
x
4
Show
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
4
show
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
36
^(?:show(?:\s+(\w+)(?:\s+(\w+))?)?)$
x
3
new
x
3
[]=
x
6
syntax
s
28
show [<command> [<setting>]]
x
11
description
s
83
Display the current values for all settings, or just the specified command/setting.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
72
45
0
1
7
2
64
49
3
1
19
3
15
20
3
7
4
64
7
5
64
35
2
7
6
64
7
5
64
35
2
7
7
64
7
5
64
35
2
7
8
64
7
9
64
35
2
35
4
49
10
1
15
20
1
49
11
0
19
4
15
20
4
56
12
50
13
0
15
20
3
11
11
I
b
I
5
I
3
I
0
I
3
n
p
14
x
6
Output
n
s
17
Current settings:
x
4
info
s
7
Command
s
3
%-s
s
7
Setting
s
5
Value
s
11
Description
s
4
%-*s
x
11
set_columns
x
8
commands
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
56
57
19
0
15
20
0
49
0
0
49
1
0
19
1
15
21
1
2
79
49
2
1
49
3
0
13
10
40
15
21
1
2
79
49
2
1
20
1
83
4
9
54
20
0
49
5
0
56
6
50
7
0
8
55
1
11
I
5
I
2
I
1
I
0
I
1
n
p
8
x
4
name
x
4
to_s
x
2
[]
x
4
nil?
x
2
==
x
8
settings
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
124
58
37
19
0
15
37
19
1
15
15
21
2
2
80
49
0
1
49
1
0
13
10
38
15
21
2
2
80
49
0
1
20
0
49
2
0
83
3
9
122
20
1
49
4
0
7
5
49
0
1
19
2
15
20
2
9
90
20
2
7
6
13
70
9
77
15
44
43
7
7
8
78
49
9
2
6
6
7
10
64
49
11
2
49
12
0
19
2
8
91
1
15
21
2
3
21
1
1
20
0
20
1
49
13
0
49
2
0
20
2
35
4
49
14
1
15
1
22
1
1
8
123
1
11
I
9
I
3
I
2
I
0
I
2
n
p
15
x
2
[]
x
4
nil?
x
4
to_s
x
2
==
x
4
last
x
11
description
n
x
6
Regexp
s
5
\s\s+
x
3
new
s
1
 
x
4
gsub
x
5
strip
x
5
first
x
2
<<
p
19
I
0
I
29
I
a
I
2a
I
28
I
2b
I
35
I
2c
I
5b
I
0
I
5c
I
2d
I
74
I
2e
I
7a
I
2a
I
7b
I
0
I
7c
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
3
x
3
key
x
3
val
x
4
desc
x
9
each_pair
p
13
I
0
I
26
I
4
I
27
I
f
I
28
I
2a
I
29
I
36
I
28
I
37
I
0
I
38
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
2
x
3
cmd
x
4
name
x
4
each
p
17
I
-1
I
21
I
0
I
22
I
c
I
23
I
1e
I
24
I
30
I
23
I
34
I
25
I
3c
I
26
I
44
I
33
I
48
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
5
x
3
dbg
x
9
interface
x
2
md
x
6
output
x
4
cmds
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
1c
I
5
I
1f
I
e
I
1d
I
27
I
1e
I
31
I
1f
I
3a
I
1c
I
3f
I
21
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
15
ShowBreakpoints
n
M
1
n
n
x
15
ShowBreakpoints
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
15
breakpoint_show
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
12
^b(?:reak)?$
x
3
new
x
3
[]=
x
6
syntax
s
7
b[reak]
x
11
description
s
17
List breakpoints.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
114
20
0
49
0
0
19
3
13
9
19
15
20
3
49
1
0
78
85
2
9
99
45
3
4
7
5
64
49
6
1
19
4
15
20
4
7
7
64
7
8
64
7
9
64
35
2
7
10
64
7
11
64
35
2
7
12
64
7
13
64
35
2
7
14
64
7
15
64
35
2
7
16
64
7
17
64
35
2
7
18
64
35
7
49
19
1
15
20
0
49
0
0
56
20
50
21
0
8
110
45
3
22
7
23
64
49
24
1
19
4
15
20
4
11
I
d
I
5
I
3
I
0
I
3
n
p
25
x
11
breakpoints
x
4
size
x
1
>
x
6
Output
n
s
12
Breakpoints:
x
4
info
s
3
%d.
s
9
File:line
s
4
%-*s
s
2
IP
s
2
%d
s
6
Method
s
4
 %s 
s
9
Condition
s
3
%*s
s
4
Hits
s
3
%4d
s
2
%s
x
11
set_columns
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
114
58
37
19
0
15
37
19
1
15
15
20
0
49
0
0
9
27
21
1
4
7
1
49
2
1
8
35
21
1
4
7
3
49
2
1
15
21
1
4
20
1
79
81
4
20
0
49
5
0
49
6
0
47
101
7
7
8
20
0
49
9
0
47
101
7
63
3
20
0
49
10
0
20
0
49
5
0
49
11
0
20
0
49
12
0
20
0
49
13
0
20
0
49
0
0
9
100
1
8
103
7
14
64
47
101
7
63
1
35
7
49
15
1
11
I
b
I
2
I
2
I
0
I
2
n
p
16
x
8
enabled?
x
5
white
x
9
set_color
x
6
yellow
x
1
+
x
6
method
x
4
file
x
4
to_s
s
1
:
x
4
line
x
2
ip
x
4
name
x
9
condition
x
4
hits
s
10
(disabled)
x
2
<<
p
19
I
0
I
44
I
a
I
45
I
11
I
46
I
1b
I
48
I
23
I
0
I
24
I
4a
I
50
I
4b
I
67
I
0
I
6e
I
4a
I
72
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
2
x
2
bp
x
1
i
x
15
each_with_index
n
s
32
No breakpoints currently defined
x
4
none
p
23
I
-1
I
3e
I
0
I
3f
I
15
I
40
I
21
I
41
I
36
I
42
I
46
I
43
I
53
I
41
I
57
I
44
I
63
I
4e
I
6e
I
0
I
6f
I
50
I
72
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
5
x
3
dbg
x
9
interface
x
2
md
x
7
bp_list
x
6
output
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
39
I
5
I
3c
I
e
I
3a
I
27
I
3b
I
31
I
3c
I
3a
I
39
I
3f
I
3e
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
13
AddBreakpoint
n
M
1
n
n
x
13
AddBreakpoint
i
109
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
45
4
5
13
71
6
47
9
50
47
49
7
0
13
7
8
64
45
9
10
81
11
7
12
64
81
11
47
49
13
1
15
8
66
7
8
64
45
9
14
81
11
7
12
64
81
11
49
6
1
49
15
2
15
13
7
16
7
17
64
49
15
2
15
13
7
18
7
19
64
49
15
2
15
47
49
20
2
15
99
7
21
7
22
65
67
49
23
0
49
24
4
11
I
9
I
0
I
0
I
0
I
0
n
p
25
x
14
breakpoint_add
x
4
Hash
x
16
new_from_literal
x
6
regexp
x
6
Regexp
n
x
3
new
x
8
allocate
s
14
^b(?:reak)?\s+
x
16
MODULE_METHOD_RE
n
x
1
+
s
37
(?::(\d+))?(?:\s+((?:if|unless).+))?$
x
10
initialize
n
x
3
[]=
x
6
syntax
s
44
b[reak] <method>[:<line>] [if|unless <expr>]
x
11
description
s
60
Set a breakpoint at the start or specified line of <method>.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
152
20
2
79
49
0
1
20
2
80
49
0
1
20
2
4
3
49
0
1
20
2
4
4
49
0
1
20
2
4
5
49
0
1
17
5
19
3
15
19
4
15
19
5
15
19
6
15
19
7
15
2
15
5
20
3
20
4
20
5
47
49
1
3
49
2
0
19
8
15
78
19
9
15
20
6
9
91
20
8
20
6
49
3
0
49
4
1
19
9
8
92
1
15
20
0
20
8
20
9
20
7
49
5
3
19
10
15
45
6
7
7
8
20
10
49
9
0
49
10
0
47
101
11
7
12
20
10
49
9
0
49
13
0
47
101
11
7
14
20
10
49
15
0
47
101
11
63
6
49
16
1
11
I
12
I
b
I
3
I
0
I
3
n
p
17
x
2
[]
x
10
get_method
x
15
compiled_method
x
4
to_i
x
16
first_ip_on_line
x
14
set_breakpoint
x
6
Output
n
s
18
Breakpoint set on 
x
6
method
x
4
name
x
4
to_s
s
4
 at 
x
4
file
s
1
:
x
4
line
x
4
info
p
17
I
-1
I
5c
I
0
I
5d
I
34
I
5e
I
45
I
5f
I
49
I
60
I
5c
I
0
I
5d
I
62
I
6b
I
63
I
98
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
11
x
3
dbg
x
9
interface
x
2
md
x
3
mod
x
9
mthd_type
x
4
mthd
x
4
line
x
4
cond
x
2
cm
x
2
ip
x
2
bp
x
17
method_visibility
x
15
add_defn_method
p
21
I
2
I
56
I
5
I
5a
I
e
I
57
I
26
I
58
I
32
I
57
I
3a
I
58
I
47
I
59
I
51
I
5a
I
5a
I
56
I
5f
I
5c
I
6d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
19
AddBreakpointInFile
n
M
1
n
n
x
19
AddBreakpointInFile
i
89
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
45
4
5
13
71
6
47
9
40
47
49
7
0
13
7
8
64
47
49
9
1
15
8
46
7
8
64
49
6
1
49
10
2
15
13
7
11
7
12
64
49
10
2
15
13
7
13
7
14
64
49
10
2
15
47
49
15
2
15
99
7
16
7
17
65
67
49
18
0
49
19
4
11
I
8
I
0
I
0
I
0
I
0
n
p
20
x
22
breakpoint_add_in_file
x
4
Hash
x
16
new_from_literal
x
6
regexp
x
6
Regexp
n
x
3
new
x
8
allocate
s
53
^b(?:reak)?\s+([^:]+):(\d+)(?:\s+((?:if|unless).+))?$
x
10
initialize
x
3
[]=
x
6
syntax
s
40
b[reak] <file>:<line> [if|unless <expr>]
x
11
description
s
49
Set a breakpoint on the specified line of <file>.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
173
20
2
79
49
0
1
20
2
80
49
0
1
49
1
0
20
2
4
3
49
0
1
17
3
19
3
15
19
4
15
19
5
15
2
15
45
2
3
43
4
20
3
49
5
1
19
6
9
69
20
6
20
4
49
6
1
97
37
19
6
15
37
19
7
15
15
2
8
85
45
7
8
7
9
20
3
47
101
10
63
2
49
11
1
11
15
20
6
9
150
20
0
20
6
20
7
20
5
49
12
3
19
8
15
45
7
13
7
14
20
8
49
15
0
49
16
0
47
101
10
7
17
20
8
49
15
0
49
18
0
47
101
10
7
19
20
8
49
20
0
47
101
10
63
6
49
21
1
8
172
45
7
22
7
23
20
4
47
101
10
7
24
20
3
47
101
10
63
4
49
11
1
11
I
10
I
9
I
3
I
0
I
3
n
p
25
x
2
[]
x
4
to_i
x
8
Rubinius
n
x
14
CompiledMethod
x
15
script_for_file
x
11
locate_line
x
6
Output
n
s
30
No loaded file found matching 
x
4
to_s
x
5
error
x
14
set_breakpoint
n
s
18
Breakpoint set on 
x
6
method
x
4
name
s
4
 at 
x
4
file
s
1
:
x
4
line
x
4
info
n
s
32
Cannot set a breakpoint on line 
s
4
 of 
p
23
I
-1
I
6e
I
0
I
6f
I
23
I
70
I
31
I
71
I
45
I
73
I
55
I
0
I
56
I
76
I
5a
I
77
I
68
I
78
I
96
I
7a
I
ac
I
0
I
ad
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
9
x
3
dbg
x
9
interface
x
2
md
x
4
file
x
4
line
x
4
cond
x
2
cm
x
2
ip
x
2
bp
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
69
I
5
I
6c
I
e
I
6a
I
33
I
6b
I
3d
I
6c
I
46
I
69
I
4b
I
6e
I
59
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
16
DeleteBreakpoint
n
M
1
n
n
x
16
DeleteBreakpoint
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
17
breakpoint_delete
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
39
^b(?:reak)?\s+d(?:el(?:ete)?)?\s+(\d+)$
x
3
new
x
3
[]=
x
6
syntax
s
17
b[reak] d[el] <n>
x
11
description
s
22
Delete breakpoint <n>.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
90
20
2
79
49
0
1
49
1
0
19
3
15
20
0
49
2
0
20
3
79
82
3
49
0
1
19
4
15
20
4
9
80
20
0
20
4
49
4
1
15
45
5
6
7
7
20
3
47
101
8
7
9
20
4
49
10
0
49
11
0
47
101
8
7
12
20
4
49
13
0
47
101
8
63
6
49
14
1
8
89
45
5
15
7
16
64
49
17
1
11
I
c
I
5
I
3
I
0
I
3
n
p
18
x
2
[]
x
4
to_i
x
11
breakpoints
x
1
-
x
17
remove_breakpoint
x
6
Output
n
s
19
Deleted breakpoint 
x
4
to_s
s
6
 from 
x
6
method
x
4
file
s
1
:
x
4
line
x
4
info
n
s
18
No such breakpoint
x
5
error
p
17
I
-1
I
86
I
0
I
87
I
c
I
88
I
1c
I
89
I
20
I
8a
I
28
I
8b
I
50
I
8d
I
59
I
0
I
5a
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
5
x
3
dbg
x
9
interface
x
2
md
x
1
n
x
2
bp
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
81
I
5
I
84
I
e
I
82
I
27
I
83
I
31
I
84
I
3a
I
81
I
3f
I
86
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
16
EnableBreakpoint
n
M
1
n
n
x
16
EnableBreakpoint
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
17
breakpoint_enable
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
40
^b(?:reak)?\s+(en|dis)(?:able)?\s+(\d+)$
x
3
new
x
3
[]=
x
6
syntax
s
26
b[reak] (en|dis)[able] <n>
x
11
description
s
33
Enable or disable breakpoint <n>.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
156
20
2
79
49
0
1
7
1
64
83
2
19
3
15
20
2
80
49
0
1
49
3
0
19
4
15
20
0
49
4
0
20
4
79
82
5
49
0
1
19
5
15
20
5
9
146
20
3
9
98
20
0
20
5
49
6
1
15
45
7
8
7
9
20
4
47
101
10
7
11
20
5
49
12
0
49
13
0
47
101
10
7
14
20
5
49
15
0
47
101
10
63
6
49
16
1
8
144
20
0
20
5
49
17
1
15
45
7
18
7
19
20
4
47
101
10
7
11
20
5
49
12
0
49
13
0
47
101
10
7
14
20
5
49
15
0
47
101
10
63
6
49
16
1
8
155
45
7
20
7
21
64
49
22
1
11
I
d
I
6
I
3
I
0
I
3
n
p
23
x
2
[]
s
2
en
x
2
==
x
4
to_i
x
11
breakpoints
x
1
-
x
17
enable_breakpoint
x
6
Output
n
s
19
Enabled breakpoint 
x
4
to_s
s
4
 at 
x
6
method
x
4
file
s
1
:
x
4
line
x
4
info
x
18
disable_breakpoint
n
s
20
Disabled breakpoint 
n
s
18
No such breakpoint
x
5
error
p
27
I
-1
I
99
I
0
I
9a
I
e
I
9b
I
1a
I
9c
I
2a
I
9d
I
2e
I
9e
I
32
I
9f
I
3a
I
a0
I
62
I
a2
I
6a
I
a3
I
90
I
0
I
92
I
a6
I
9b
I
0
I
9c
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
6
x
3
dbg
x
9
interface
x
2
md
x
6
enable
x
1
n
x
2
bp
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
94
I
5
I
97
I
e
I
95
I
27
I
96
I
31
I
97
I
3a
I
94
I
3f
I
99
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
8
Continue
n
M
1
n
n
x
8
Continue
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
8
continue
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
27
^(?:c(ont(inue)?)?|r(un)?)$
x
3
new
x
3
[]=
x
6
syntax
s
14
c[ont] | r[un]
x
11
description
s
81
Continue execution to next breakpoint, or end of program (whichever comes first).
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
18
20
1
49
0
0
15
45
1
2
7
3
64
7
4
49
5
2
11
I
6
I
3
I
3
I
0
I
3
n
p
6
x
5
done!
x
6
Output
n
s
18
[Resuming program]
x
6
yellow
x
4
info
p
7
I
-1
I
b2
I
0
I
b3
I
6
I
b4
I
12
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
3
x
3
dbg
x
9
interface
x
2
md
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
ad
I
5
I
b0
I
e
I
ae
I
27
I
af
I
31
I
b0
I
3a
I
ad
I
3f
I
b2
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
6
StepIn
n
M
1
n
n
x
6
StepIn
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
7
step_in
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
36
^s(?:tep)?(?:\s+(?:(to)\s+)?(\d+))?$
x
3
new
x
3
[]=
x
6
syntax
s
15
s[tep] [to] [n]
x
11
description
s
81
Step to the next, (or nth next, or specified) line, stepping into called methods.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
173
20
2
79
49
0
1
19
3
15
20
2
80
49
0
1
19
4
15
1
19
5
15
44
43
1
80
49
2
1
13
7
3
7
4
49
5
2
15
13
7
6
7
7
49
5
2
15
19
6
15
20
3
9
90
20
6
7
8
20
4
49
9
0
13
18
3
49
5
2
15
15
45
10
11
7
12
20
4
47
101
13
63
2
49
14
1
19
7
8
154
20
6
7
15
20
4
9
105
20
4
49
9
0
8
106
79
13
18
3
49
5
2
15
19
4
15
45
10
16
7
17
20
4
47
101
13
7
18
20
4
49
9
0
79
83
19
9
141
1
8
144
7
20
64
47
101
13
63
4
49
14
1
19
7
15
20
0
20
6
49
21
1
15
20
1
49
22
0
15
20
7
11
11
I
e
I
8
I
3
I
0
I
3
n
p
23
x
2
[]
x
4
Hash
x
16
new_from_literal
x
9
step_type
x
2
in
x
3
[]=
x
7
step_by
x
4
line
x
6
target
x
4
to_i
x
6
Output
n
s
17
Stepping to line 
x
4
to_s
x
4
info
x
5
steps
n
s
9
Stepping 
s
5
 line
x
2
==
s
1
s
x
4
step
x
5
done!
p
37
I
-1
I
c0
I
0
I
c1
I
9
I
c2
I
12
I
c3
I
16
I
c5
I
32
I
c6
I
36
I
c7
I
47
I
c8
I
5a
I
ca
I
6a
I
0
I
71
I
ca
I
74
I
cb
I
90
I
0
I
95
I
cb
I
9a
I
0
I
9b
I
cd
I
a3
I
d0
I
a9
I
d2
I
ad
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
8
x
3
dbg
x
9
interface
x
2
md
x
9
step_type
x
1
n
x
5
steps
x
8
selector
x
6
output
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
bb
I
5
I
be
I
e
I
bc
I
27
I
bd
I
31
I
be
I
3a
I
bb
I
3f
I
c0
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
8
StepNext
n
M
1
n
n
x
8
StepNext
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
9
step_next
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
36
^n(?:ext)?(?:\s+(?:(to)\s+)?(\d+))?$
x
3
new
x
3
[]=
x
6
syntax
s
15
n[ext] [to] [n]
x
11
description
s
89
Step to the next, (or nth next, or specified) line, without stepping into called methods.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
173
20
2
79
49
0
1
19
3
15
20
2
80
49
0
1
19
4
15
1
19
5
15
44
43
1
80
49
2
1
13
7
3
7
4
49
5
2
15
13
7
6
7
7
49
5
2
15
19
6
15
20
3
9
90
20
6
7
8
20
4
49
9
0
13
18
3
49
5
2
15
15
45
10
11
7
12
20
4
47
101
13
63
2
49
14
1
19
7
8
154
20
6
7
15
20
4
9
105
20
4
49
9
0
8
106
79
13
18
3
49
5
2
15
19
4
15
45
10
16
7
17
20
4
47
101
13
7
18
20
4
49
9
0
79
83
19
9
141
1
8
144
7
20
64
47
101
13
63
4
49
14
1
19
7
15
20
0
20
6
49
21
1
15
20
1
49
22
0
15
20
7
11
11
I
e
I
8
I
3
I
0
I
3
n
p
23
x
2
[]
x
4
Hash
x
16
new_from_literal
x
9
step_type
x
4
next
x
3
[]=
x
7
step_by
x
4
line
x
6
target
x
4
to_i
x
6
Output
n
s
17
Stepping to line 
x
4
to_s
x
4
info
x
5
steps
n
s
9
Stepping 
s
5
 line
x
2
==
s
1
s
x
4
step
x
5
done!
p
37
I
-1
I
dd
I
0
I
de
I
9
I
df
I
12
I
e0
I
16
I
e2
I
32
I
e3
I
36
I
e4
I
47
I
e5
I
5a
I
e7
I
6a
I
0
I
71
I
e7
I
74
I
e8
I
90
I
0
I
95
I
e8
I
9a
I
0
I
9b
I
ea
I
a3
I
ed
I
a9
I
ef
I
ad
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
8
x
3
dbg
x
9
interface
x
2
md
x
9
step_type
x
1
n
x
5
steps
x
8
selector
x
6
output
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
d8
I
5
I
db
I
e
I
d9
I
27
I
da
I
31
I
db
I
3a
I
d8
I
3f
I
dd
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
7
StepOut
n
M
1
n
n
x
7
StepOut
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
8
step_out
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
23
^o(?:ut)?(?:\s+(\d+))?$
x
3
new
x
3
[]=
x
6
syntax
s
9
o[ut] [n]
x
11
description
s
47
Step out to the calling method (or nth caller).
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
115
20
2
79
49
0
1
19
3
15
20
2
79
49
0
1
19
4
15
1
19
5
15
44
43
1
78
49
2
1
19
6
15
20
6
7
3
20
4
9
47
20
4
49
4
0
8
48
79
13
18
3
49
5
2
15
19
4
15
45
6
7
7
8
20
4
47
101
9
7
10
20
4
49
4
0
79
83
11
9
83
1
8
86
7
12
64
47
101
9
63
4
49
13
1
19
7
15
20
0
20
6
49
14
1
15
20
1
49
15
0
15
20
7
11
11
I
e
I
8
I
3
I
0
I
3
n
p
16
x
2
[]
x
4
Hash
x
16
new_from_literal
x
3
out
x
4
to_i
x
3
[]=
x
6
Output
n
s
13
Stepping out 
x
4
to_s
s
6
 frame
x
2
==
s
1
s
x
4
info
x
4
step
x
5
done!
p
29
I
-1
I
fa
I
0
I
fb
I
9
I
fc
I
12
I
fd
I
16
I
ff
I
20
I
100
I
30
I
0
I
37
I
100
I
3a
I
101
I
56
I
0
I
5b
I
101
I
61
I
102
I
69
I
105
I
6f
I
107
I
73
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
8
x
3
dbg
x
9
interface
x
2
md
x
9
step_type
x
1
n
x
5
steps
x
8
selector
x
6
output
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
f5
I
5
I
f8
I
e
I
f6
I
27
I
f7
I
31
I
f8
I
3a
I
f5
I
3f
I
fa
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
4
Quit
n
M
1
n
n
x
4
Quit
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
4
quit
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
11
^q(?:uit)?$
x
3
new
x
3
[]=
x
6
syntax
s
6
q[uit]
x
11
description
s
62
Remove all breakpoints, quit the debugger, and resume program.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
12
20
1
49
0
0
15
20
0
49
1
0
11
I
4
I
3
I
3
I
0
I
3
n
p
2
x
5
done!
x
5
quit!
p
7
I
-1
I
112
I
0
I
113
I
6
I
114
I
c
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
3
x
3
dbg
x
9
interface
x
2
md
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
10d
I
5
I
110
I
e
I
10e
I
27
I
10f
I
31
I
110
I
3a
I
10d
I
3f
I
112
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
10
ListSource
n
M
1
n
n
x
10
ListSource
i
109
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
45
4
5
13
71
6
47
9
50
47
49
7
0
13
7
8
64
45
9
10
81
11
7
12
64
81
11
47
49
13
1
15
8
66
7
8
64
45
9
14
81
11
7
12
64
81
11
49
6
1
49
15
2
15
13
7
16
7
17
64
49
15
2
15
13
7
18
7
19
64
49
15
2
15
47
49
20
2
15
99
7
21
7
22
65
67
49
23
0
49
24
4
11
I
9
I
0
I
0
I
0
I
0
n
p
25
x
4
list
x
4
Hash
x
16
new_from_literal
x
6
regexp
x
6
Regexp
n
x
3
new
x
8
allocate
s
16
^l(?:ist)?(?:\s+
x
16
MODULE_METHOD_RE
n
x
1
+
s
35
)?(?:\s+(\d+))?(?:(?:\s+|-)(\d+))?$
x
10
initialize
n
x
3
[]=
x
6
syntax
s
31
l[ist] [<method>] [start [end]]
x
11
description
s
76
List source code lines around breakpoint or <method>, and between start/end.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
433
20
2
79
49
0
1
20
2
80
49
0
1
20
2
4
3
49
0
1
17
3
19
3
15
19
4
15
19
5
15
2
15
20
2
4
4
49
0
1
20
2
4
5
49
0
1
17
2
19
6
15
19
7
15
2
15
20
5
9
114
5
20
3
20
4
20
5
47
49
1
3
49
2
0
19
8
15
78
19
9
15
20
7
9
88
1
8
112
20
8
49
3
0
20
8
49
3
0
49
4
0
80
82
5
49
0
1
79
81
6
19
7
8
135
20
1
49
7
0
49
8
0
19
8
15
20
1
49
7
0
49
9
0
19
9
15
20
8
49
10
0
49
11
0
19
10
15
20
0
20
10
49
12
1
19
11
15
20
11
49
13
0
9
182
45
14
15
7
16
20
10
47
101
11
63
2
49
17
1
11
8
183
1
15
20
6
9
197
20
6
49
18
0
19
6
8
198
1
15
20
7
9
212
20
7
49
18
0
19
7
8
213
1
15
20
8
20
9
49
19
1
19
12
15
20
6
9
231
1
8
246
20
12
20
5
9
240
79
8
242
4
10
82
5
19
6
15
20
7
9
254
1
8
262
20
6
4
20
81
6
19
7
15
20
6
20
7
85
20
9
286
20
7
20
6
17
2
19
6
15
19
7
15
2
8
287
1
15
20
6
79
84
21
9
300
79
19
6
8
301
1
15
20
7
20
11
49
4
0
85
20
9
322
20
11
49
4
0
19
7
8
323
1
15
45
14
22
7
23
20
6
47
101
11
7
24
20
7
47
101
11
7
25
20
10
47
101
11
7
26
63
7
49
27
1
19
13
15
20
13
7
28
64
7
29
64
35
2
49
30
1
15
20
6
79
85
20
9
392
20
13
1
7
31
64
35
2
49
32
1
8
393
1
15
20
6
20
7
56
33
50
34
1
15
20
7
20
11
49
4
0
84
21
9
428
20
13
1
7
31
64
35
2
49
32
1
8
429
1
15
20
13
11
I
16
I
e
I
3
I
0
I
3
n
p
35
x
2
[]
x
10
get_method
x
15
compiled_method
x
5
lines
x
4
size
x
1
-
x
1
+
x
12
eval_context
x
6
method
x
2
ip
x
4
file
x
4
to_s
x
10
source_for
x
4
nil?
x
6
Output
n
s
29
No source code available for 
x
5
error
x
4
to_i
x
12
line_from_ip
x
1
>
x
1
<
n
s
14
Source lines [
s
1
-
s
5
] in 
s
1
:
x
4
info
s
3
%d:
s
4
%-*s
x
11
set_columns
s
3
...
x
2
<<
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
91
57
19
0
15
21
1
5
10
12
2
8
13
3
13
9
24
15
20
0
21
1
12
83
0
9
43
21
1
13
49
1
0
15
21
1
13
7
2
49
3
1
8
44
1
15
21
1
13
20
0
21
1
11
20
0
79
82
4
49
5
1
49
6
0
35
2
49
7
1
15
20
0
21
1
12
83
0
9
89
21
1
13
7
8
49
3
1
8
90
1
11
I
7
I
1
I
1
I
0
I
1
n
p
9
x
2
==
x
15
set_line_marker
x
4
cyan
x
9
set_color
x
1
-
x
2
[]
x
5
chomp
x
2
<<
x
5
clear
p
19
I
0
I
142
I
4
I
143
I
1a
I
144
I
21
I
145
I
2b
I
143
I
2c
I
0
I
2d
I
147
I
46
I
148
I
5a
I
0
I
5b
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
1
x
1
l
x
4
upto
p
87
I
-1
I
120
I
0
I
121
I
20
I
122
I
38
I
124
I
3c
I
125
I
4d
I
126
I
51
I
127
I
70
I
0
I
72
I
12a
I
7d
I
12b
I
87
I
0
I
88
I
12e
I
93
I
12f
I
9d
I
130
I
a4
I
131
I
b6
I
130
I
b7
I
0
I
b8
I
134
I
c6
I
0
I
c7
I
135
I
d5
I
0
I
d6
I
136
I
e0
I
137
I
e7
I
138
I
f2
I
0
I
f4
I
138
I
f6
I
0
I
f7
I
13a
I
106
I
0
I
107
I
13b
I
11f
I
0
I
120
I
13c
I
12d
I
0
I
12e
I
13d
I
143
I
0
I
144
I
13f
I
166
I
140
I
174
I
141
I
189
I
0
I
18a
I
142
I
194
I
14a
I
1ad
I
0
I
1ae
I
14b
I
1b1
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
14
x
3
dbg
x
9
interface
x
2
md
x
3
mod
x
9
mthd_type
x
4
mthd
x
5
first
x
4
last
x
2
cm
x
2
ip
x
4
file
x
5
lines
x
4
line
x
6
output
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
11a
I
5
I
11d
I
e
I
11b
I
47
I
11c
I
51
I
11d
I
5a
I
11a
I
5f
I
120
I
6d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
8
ListSexp
n
M
1
n
n
x
8
ListSexp
i
109
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
45
4
5
13
71
6
47
9
50
47
49
7
0
13
7
8
64
45
9
10
81
11
7
12
64
81
11
47
49
13
1
15
8
66
7
8
64
45
9
14
81
11
7
12
64
81
11
49
6
1
49
15
2
15
13
7
16
7
17
64
49
15
2
15
13
7
18
7
19
64
49
15
2
15
47
49
20
2
15
99
7
21
7
22
65
67
49
23
0
49
24
4
11
I
9
I
0
I
0
I
0
I
0
n
p
25
x
4
sexp
x
4
Hash
x
16
new_from_literal
x
6
regexp
x
6
Regexp
n
x
3
new
x
8
allocate
s
11
^sexp(?:\s+
x
16
MODULE_METHOD_RE
n
x
1
+
s
3
)?$
x
10
initialize
n
x
3
[]=
x
6
syntax
s
15
sexp [<method>]
x
11
description
s
50
List S-expression for current or specified method.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
259
20
2
79
49
0
1
20
2
80
49
0
1
20
2
4
3
49
0
1
17
3
19
3
15
19
4
15
19
5
15
2
15
20
5
9
54
5
20
3
20
4
20
5
47
49
1
3
49
2
0
19
6
8
64
20
1
49
3
0
49
4
0
19
6
15
20
6
49
5
0
49
6
0
19
7
15
20
0
20
7
49
7
1
19
8
15
20
8
49
8
0
9
111
45
9
10
7
11
20
7
47
101
6
63
2
49
12
1
11
8
112
1
15
20
8
49
13
0
49
14
0
19
9
15
1
19
10
15
20
4
7
15
64
83
16
9
151
7
17
79
17
2
19
11
15
19
12
15
2
8
163
7
18
80
17
2
19
11
15
19
12
15
2
15
20
9
20
11
56
19
50
20
1
15
20
10
9
181
1
8
207
45
9
21
7
22
20
3
47
101
6
20
4
47
101
6
20
5
47
101
6
63
4
49
12
1
11
15
45
9
23
7
24
20
3
47
101
6
20
4
47
101
6
20
5
47
101
6
7
25
20
7
47
101
6
7
26
63
7
49
27
1
19
13
15
20
13
20
10
49
28
0
49
29
1
15
20
13
11
I
16
I
e
I
3
I
0
I
3
n
p
30
x
2
[]
x
10
get_method
x
15
compiled_method
x
12
eval_context
x
6
method
x
4
file
x
4
to_s
x
10
source_for
x
4
nil?
x
6
Output
n
s
29
No source code available for 
x
5
error
x
4
join
x
7
to_sexp
s
1
#
x
2
==
x
4
defn
x
4
defs
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
34
57
19
0
15
20
0
21
1
12
49
0
1
21
1
5
49
1
0
83
2
9
32
20
0
22
1
10
15
1
33
8
33
1
11
I
4
I
1
I
1
I
0
I
1
n
p
3
x
2
[]
x
6
intern
x
2
==
p
13
I
0
I
16f
I
4
I
170
I
16
I
171
I
1c
I
172
I
20
I
170
I
21
I
0
I
22
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
1
x
1
s
x
12
each_of_type
n
s
22
No sexp available for 
n
s
17
S-expression for 
s
4
 in 
s
1
:
x
4
info
x
14
pretty_inspect
x
2
<<
p
51
I
-1
I
158
I
0
I
159
I
20
I
15b
I
24
I
15c
I
36
I
15f
I
40
I
0
I
41
I
162
I
4c
I
163
I
56
I
164
I
5d
I
165
I
6f
I
164
I
70
I
0
I
71
I
168
I
7c
I
169
I
80
I
16a
I
89
I
16b
I
97
I
16d
I
a3
I
0
I
a4
I
16f
I
ae
I
176
I
b5
I
177
I
cf
I
0
I
d0
I
17a
I
f5
I
17b
I
100
I
17c
I
103
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
14
x
3
dbg
x
9
interface
x
2
md
x
3
mod
x
9
mthd_type
x
4
mthd
x
2
cm
x
4
file
x
5
lines
x
4
sexp
x
9
mthd_sexp
x
9
node_type
x
8
name_idx
x
6
output
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
151
I
5
I
154
I
e
I
152
I
47
I
153
I
51
I
154
I
5a
I
151
I
5f
I
158
I
6d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
10
ShowLocals
n
M
1
n
n
x
10
ShowLocals
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
5
lvars
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
13
^l?v(?:ars)?$
x
3
new
x
3
[]=
x
6
syntax
s
9
[l]v[ars]
x
11
description
s
38
Show local variables and their values.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
178
20
1
49
0
0
49
1
0
19
3
15
20
3
49
2
0
19
4
15
20
1
49
0
0
49
3
0
19
5
15
20
5
13
9
44
15
20
5
49
4
0
79
85
5
13
10
83
15
20
5
49
4
0
78
83
6
13
9
83
15
20
5
78
49
7
1
49
8
0
78
49
9
1
4
64
83
6
10
82
2
8
83
3
9
159
45
10
11
7
12
20
3
49
13
0
47
101
8
7
14
63
3
49
15
1
19
6
15
20
6
7
16
64
7
17
64
35
2
7
18
64
7
17
64
35
2
7
19
64
7
20
64
35
2
35
3
49
21
1
15
78
20
5
49
4
0
79
82
22
56
23
50
24
1
15
20
6
8
177
45
10
25
7
26
20
3
49
13
0
47
101
8
63
2
49
27
1
11
I
c
I
7
I
3
I
0
I
3
n
p
28
x
12
eval_context
x
6
method
x
11
local_names
x
6
locals
x
4
size
x
1
>
x
2
==
x
2
at
x
4
to_s
x
2
[]
x
6
Output
n
s
20
Local variables for 
x
4
name
s
1
:
x
4
info
s
4
Name
s
3
%-s
s
5
Class
s
5
Value
s
4
%-*s
x
11
set_columns
x
1
-
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
75
57
19
0
15
21
1
4
9
22
21
1
4
20
0
49
0
1
49
1
0
8
25
7
2
64
19
1
15
21
1
5
20
0
49
3
1
19
2
15
20
1
78
49
0
1
4
64
83
4
9
54
1
8
74
21
1
6
20
1
20
2
49
5
0
20
2
49
6
0
35
3
49
7
1
11
I
8
I
3
I
1
I
0
I
1
n
p
8
x
2
[]
x
4
to_s
s
1
?
x
2
at
x
2
==
x
5
class
x
7
inspect
x
2
<<
p
13
I
0
I
191
I
4
I
192
I
19
I
192
I
1c
I
193
I
27
I
194
I
4a
I
0
I
4b
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
3
x
1
i
x
4
lvar
x
3
val
x
4
upto
n
s
40
There are no local variables defined in 
x
4
none
p
25
I
-1
I
187
I
0
I
188
I
b
I
18b
I
13
I
18c
I
1e
I
18d
I
30
I
18e
I
55
I
18f
I
6c
I
190
I
8c
I
191
I
9b
I
196
I
9f
I
198
I
b1
I
0
I
b2
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
7
x
3
dbg
x
9
interface
x
3
inp
x
2
cm
x
6
locals
x
10
local_vals
x
6
output
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
182
I
5
I
185
I
e
I
183
I
27
I
184
I
31
I
185
I
3a
I
182
I
3f
I
187
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
11
ShowGlobals
n
M
1
n
n
x
11
ShowGlobals
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
5
gvars
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
12
^gv(?:ars)?$
x
3
new
x
3
[]=
x
6
syntax
s
7
gv[ars]
x
11
description
s
39
Show global variables and their values.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
69
45
0
1
7
2
64
49
3
1
19
3
15
20
3
7
4
64
7
5
64
35
2
7
6
64
7
5
64
35
2
7
7
64
7
8
64
35
2
35
3
49
9
1
15
45
10
11
43
12
49
13
0
49
14
0
56
15
50
16
0
56
17
50
18
0
15
20
3
11
I
9
I
4
I
3
I
0
I
3
n
p
19
x
6
Output
n
s
17
Global variables:
x
4
info
s
4
Name
s
3
%-s
s
5
Class
s
5
Value
s
4
%-*s
x
11
set_columns
x
8
Rubinius
n
x
7
Globals
x
9
variables
x
3
dup
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
24
58
37
19
0
15
37
19
1
15
15
20
0
49
0
0
20
1
49
0
0
49
1
1
11
I
5
I
2
I
2
I
0
I
2
n
p
2
x
4
to_s
x
3
<=>
p
3
I
0
I
1a8
I
18
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
2
x
1
a
x
1
b
x
4
sort
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
38
57
19
0
15
45
0
1
43
2
20
0
49
3
1
19
1
15
21
1
3
20
0
20
1
49
4
0
20
1
49
5
0
35
3
49
6
1
11
I
7
I
2
I
1
I
0
I
1
n
p
7
x
8
Rubinius
n
x
7
Globals
x
2
[]
x
5
class
x
7
inspect
x
2
<<
p
7
I
0
I
1a8
I
4
I
1a9
I
11
I
1aa
I
26
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
2
x
1
v
x
3
val
x
4
each
p
11
I
-1
I
1a4
I
0
I
1a6
I
c
I
1a7
I
2c
I
1a8
I
42
I
1ac
I
45
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
4
x
3
dbg
x
9
interface
x
3
inp
x
6
output
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
19f
I
5
I
1a2
I
e
I
1a0
I
27
I
1a1
I
31
I
1a2
I
3a
I
19f
I
3f
I
1a4
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
9
ShowIVars
n
M
1
n
n
x
9
ShowIVars
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
5
ivars
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
12
^iv(?:ars)?$
x
3
new
x
3
[]=
x
6
syntax
s
7
iv[ars]
x
11
description
s
41
Show instance variables and their values.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
146
20
1
49
0
0
49
1
0
19
3
15
45
2
3
20
1
49
0
0
49
4
0
20
3
20
3
49
5
0
49
6
3
19
4
15
5
7
7
64
20
4
47
49
8
2
19
5
15
20
5
49
9
0
19
6
15
20
6
49
10
0
78
85
11
9
130
45
12
13
7
14
20
5
47
101
15
7
16
63
3
49
17
1
19
7
15
20
7
7
18
64
7
19
64
35
2
7
20
64
7
19
64
35
2
7
21
64
7
22
64
35
2
35
3
49
23
1
15
20
6
56
24
50
25
0
15
20
7
8
145
45
12
26
7
27
20
5
47
101
15
63
2
49
28
1
11
I
d
I
8
I
3
I
0
I
3
n
p
29
x
12
eval_context
x
6
method
x
7
Binding
n
x
9
variables
x
5
scope
x
5
setup
s
4
self
x
4
eval
x
18
instance_variables
x
4
size
x
1
>
x
6
Output
n
s
23
Instance variables for 
x
4
to_s
s
1
:
x
4
info
s
4
Name
s
3
%-s
s
5
Class
s
5
Value
s
4
%-*s
x
11
set_columns
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
36
57
19
0
15
21
1
5
20
0
49
0
1
19
1
15
21
1
7
20
0
20
1
49
1
0
20
1
49
2
0
35
3
49
3
1
11
I
7
I
2
I
1
I
0
I
1
n
p
4
x
21
instance_variable_get
x
5
class
x
7
inspect
x
2
<<
p
7
I
0
I
1c1
I
4
I
1c2
I
f
I
1c3
I
24
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
2
x
4
ivar
x
3
val
x
4
each
n
s
44
There are no instance variables defined for 
x
4
none
p
25
I
-1
I
1b7
I
0
I
1b8
I
b
I
1bb
I
23
I
1bc
I
30
I
1bd
I
38
I
1be
I
42
I
1bf
I
56
I
1c0
I
76
I
1c1
I
7e
I
1c5
I
82
I
1c7
I
91
I
0
I
92
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
8
x
3
dbg
x
9
interface
x
3
inp
x
2
cm
x
4
bind
x
8
instance
x
5
ivars
x
6
output
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
1b2
I
5
I
1b5
I
e
I
1b3
I
27
I
1b4
I
31
I
1b5
I
3a
I
1b2
I
3f
I
1b7
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
9
ShowCVars
n
M
1
n
n
x
9
ShowCVars
i
109
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
45
4
5
13
71
6
47
9
50
47
49
7
0
13
7
8
64
45
9
10
81
11
7
12
64
81
11
47
49
13
1
15
8
66
7
8
64
45
9
14
81
11
7
12
64
81
11
49
6
1
49
15
2
15
13
7
16
7
17
64
49
15
2
15
13
7
18
7
19
64
49
15
2
15
47
49
20
2
15
99
7
21
7
22
65
67
49
23
0
49
24
4
11
I
9
I
0
I
0
I
0
I
0
n
p
25
x
5
cvars
x
4
Hash
x
16
new_from_literal
x
6
regexp
x
6
Regexp
n
x
3
new
x
8
allocate
s
18
^cv(?:ars)?(?:\s+(
x
9
MODULE_RE
n
x
1
+
s
4
))?$
x
10
initialize
n
x
3
[]=
x
6
syntax
s
17
cv[ars] [<class>]
x
11
description
s
85
Show class variables and their values for the specified class, or current self class.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
156
20
1
49
0
0
49
1
0
19
3
15
45
2
3
20
1
49
0
0
49
4
0
20
3
20
3
49
5
0
49
6
3
19
4
15
5
20
2
79
49
7
1
13
10
49
15
7
8
64
20
4
47
49
9
2
19
5
15
20
5
49
10
0
19
6
15
20
6
49
11
0
78
85
12
9
140
45
13
14
7
15
20
5
47
101
16
7
17
63
3
49
18
1
19
7
15
20
7
7
19
64
7
20
64
35
2
7
21
64
7
20
64
35
2
7
22
64
7
23
64
35
2
35
3
49
24
1
15
20
6
56
25
50
26
0
15
20
7
8
155
45
13
27
7
28
20
5
47
101
16
63
2
49
29
1
11
I
d
I
8
I
3
I
0
I
3
n
p
30
x
12
eval_context
x
6
method
x
7
Binding
n
x
9
variables
x
5
scope
x
5
setup
x
2
[]
s
4
self
x
4
eval
x
15
class_variables
x
4
size
x
1
>
x
6
Output
n
s
20
Class variables for 
x
4
to_s
s
1
:
x
4
info
s
4
Name
s
3
%-s
s
5
Class
s
5
Value
s
4
%-*s
x
11
set_columns
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
36
57
19
0
15
21
1
5
20
0
49
0
1
19
1
15
21
1
7
20
0
20
1
49
1
0
20
1
49
2
0
35
3
49
3
1
11
I
7
I
2
I
1
I
0
I
1
n
p
4
x
18
class_variable_get
x
5
class
x
7
inspect
x
2
<<
p
7
I
0
I
1de
I
4
I
1df
I
f
I
1e0
I
24
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
2
x
4
cvar
x
3
val
x
4
each
n
s
41
There are no class variables defined for 
x
4
none
p
25
I
-1
I
1d3
I
0
I
1d4
I
b
I
1d7
I
23
I
1d8
I
3a
I
1d9
I
42
I
1db
I
4c
I
1dc
I
60
I
1dd
I
80
I
1de
I
88
I
1e2
I
8c
I
1e4
I
9b
I
0
I
9c
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
8
x
3
dbg
x
9
interface
x
2
md
x
2
cm
x
4
bind
x
5
klass
x
5
cvars
x
6
output
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
1ce
I
5
I
1d1
I
e
I
1cf
I
47
I
1d0
I
51
I
1d1
I
5a
I
1ce
I
5f
I
1d3
I
6d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
13
ShowBacktrace
n
M
1
n
n
x
13
ShowBacktrace
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
9
backtrace
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
32
^w(?:here)?|b(?:ack)?t(?:race)?$
x
3
new
x
3
[]=
x
6
syntax
s
23
w[here] | b[ack]t[race]
x
11
description
s
25
Show execution backtrace.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
65
45
0
1
20
1
49
2
0
49
3
1
19
3
15
20
1
49
4
0
19
4
15
45
5
6
7
7
64
49
8
1
19
5
15
20
5
7
9
64
7
10
64
7
11
64
35
3
49
12
1
15
20
3
49
13
0
56
14
50
15
0
15
20
5
11
I
a
I
6
I
3
I
0
I
3
n
p
16
x
9
Backtrace
n
x
13
debug_context
x
9
backtrace
x
12
eval_context
x
6
Output
n
s
10
Backtrace:
x
4
info
s
3
%*s
s
3
%|s
s
4
%-*s
x
11
set_columns
x
6
frames
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
169
58
37
19
0
15
37
19
1
15
15
20
0
21
1
4
83
0
9
27
21
1
5
49
1
0
8
28
1
15
20
0
49
2
0
20
0
49
3
0
17
2
19
2
15
19
3
15
2
15
20
1
78
83
0
9
66
21
1
5
7
4
49
5
1
8
152
20
3
7
6
13
70
9
86
15
44
43
7
7
8
78
49
9
2
6
6
49
10
1
9
105
21
1
5
21
1
3
49
11
0
49
5
1
8
152
20
3
7
12
13
70
9
125
15
44
43
7
7
13
78
49
9
2
6
12
49
10
1
9
144
21
1
5
21
1
3
49
14
0
49
5
1
8
152
21
1
5
7
15
49
5
1
15
21
1
5
20
2
7
16
64
20
3
35
3
49
17
1
11
I
9
I
4
I
2
I
0
I
2
n
p
18
x
2
==
x
15
set_line_marker
x
8
describe
x
8
location
x
5
green
x
9
set_color
n
x
6
Regexp
s
6
kernel
x
3
new
x
2
=~
x
12
kernel_color
n
s
8
\(eval\)
x
10
eval_color
x
5
clear
s
2
at
x
2
<<
p
27
I
0
I
1f5
I
a
I
1f6
I
1c
I
0
I
1d
I
1f7
I
31
I
1f8
I
38
I
1f9
I
42
I
1fa
I
5b
I
1fb
I
69
I
1fc
I
82
I
1fd
I
90
I
1ff
I
98
I
0
I
99
I
201
I
a9
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
4
x
5
frame
x
1
i
x
4
recv
x
3
loc
x
15
each_with_index
p
15
I
-1
I
1f0
I
0
I
1f1
I
e
I
1f2
I
16
I
1f3
I
22
I
1f4
I
33
I
1f5
I
3e
I
203
I
41
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
6
x
3
dbg
x
9
interface
x
3
inp
x
2
bt
x
9
eval_ctxt
x
6
output
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
1eb
I
5
I
1ee
I
e
I
1ec
I
27
I
1ed
I
31
I
1ee
I
3a
I
1eb
I
3f
I
1f0
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
14
EvalExpression
n
M
1
n
n
x
14
EvalExpression
i
119
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
15
99
7
18
7
19
65
67
49
16
0
49
17
4
15
99
7
20
7
21
65
67
49
16
0
49
17
4
15
99
7
22
7
23
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
24
x
4
eval
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
3
\w+
x
3
new
x
3
[]=
x
6
syntax
s
6
<expr>
x
11
description
s
71
Any other command is assumed to be a Ruby expression, and is evaluated.
x
7
command
x
10
initialize
M
1
n
n
x
10
initialize
i
10
54
89
0
15
7
1
64
38
2
11
I
1
I
0
I
0
I
0
I
0
n
p
3
x
10
initialize
s
0

x
5
@expr
p
7
I
-1
I
20f
I
0
I
210
I
4
I
211
I
a
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
17
method_visibility
x
15
add_defn_method
x
10
multiline?
M
1
n
n
x
10
multiline?
i
2
2
11
I
1
I
0
I
0
I
0
I
0
n
p
0
p
5
I
-1
I
215
I
0
I
216
I
2
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
3
<=>
M
1
n
n
x
3
<=>
i
3
79
11
11
I
2
I
1
I
1
I
0
I
1
n
p
0
p
5
I
-1
I
21b
I
0
I
21c
I
3
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
1
x
5
other
x
7
execute
M
1
n
n
x
7
execute
i
261
39
0
20
2
45
1
2
49
3
1
9
19
20
2
49
4
0
8
21
20
2
81
5
38
0
15
39
0
7
6
64
81
5
38
0
15
26
93
0
15
29
142
0
20
1
49
7
0
19
3
15
45
8
9
20
3
49
10
0
20
3
49
11
0
20
3
49
11
0
49
12
0
49
13
3
19
4
15
5
39
0
20
4
47
49
14
2
19
5
15
45
15
16
13
71
17
47
9
111
47
49
18
0
13
47
49
19
0
15
8
114
49
17
0
19
6
15
20
6
49
20
0
15
20
6
20
5
49
21
0
49
22
1
15
7
23
64
38
0
30
8
254
26
93
1
15
24
13
45
24
25
12
49
26
1
10
159
8
170
15
24
19
7
15
5
48
27
25
8
254
13
45
28
29
12
49
26
1
10
182
8
249
15
24
19
7
15
45
30
31
20
7
86
26
13
9
224
15
20
7
49
32
0
7
33
13
70
9
221
15
44
43
34
7
35
78
49
17
2
6
33
49
36
1
9
233
20
1
49
37
0
8
246
20
1
20
7
49
38
1
15
7
23
64
38
0
25
8
254
15
92
1
27
34
92
0
27
15
20
6
11
I
e
I
8
I
3
I
0
I
3
n
p
39
x
5
@expr
x
9
MatchData
n
x
8
kind_of?
x
6
string
x
1
+
s
1


x
12
eval_context
x
7
Binding
n
x
9
variables
x
6
method
x
5
scope
x
5
setup
x
4
eval
x
6
Output
n
x
3
new
x
8
allocate
x
10
initialize
x
15
set_line_marker
x
7
inspect
x
2
<<
s
0

x
10
SystemExit
n
x
3
===
x
5
raise
x
9
Exception
n
x
11
SyntaxError
n
x
7
message
n
x
6
Regexp
s
36
unexpected \$end|unterminated string
x
2
=~
x
11
more_input!
x
16
handle_exception
p
53
I
-1
I
21f
I
0
I
220
I
15
I
0
I
17
I
220
I
1a
I
221
I
24
I
223
I
33
I
224
I
4e
I
225
I
5a
I
226
I
75
I
227
I
7b
I
228
I
86
I
22a
I
8e
I
0
I
93
I
22b
I
a0
I
235
I
a1
I
22b
I
a4
I
22c
I
aa
I
22d
I
b7
I
235
I
b8
I
22d
I
bb
I
22f
I
e2
I
233
I
e9
I
230
I
f1
I
231
I
f6
I
0
I
102
I
237
I
105
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
8
x
3
dbg
x
9
interface
x
2
md
x
4
ctxt
x
4
bind
x
6
result
x
6
output
x
1
e
p
21
I
2
I
20a
I
5
I
20d
I
e
I
20b
I
27
I
20c
I
31
I
20d
I
3a
I
20a
I
3f
I
20f
I
4d
I
215
I
5b
I
21b
I
69
I
21f
I
77
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
7
UpFrame
n
M
1
n
n
x
7
UpFrame
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
2
up
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
17
^up(?:\s+(\d+))?$
x
3
new
x
3
[]=
x
6
syntax
s
6
up [n]
x
11
description
s
58
Change the eval context by moving up 1 (or n) call frames.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
235
20
2
79
49
0
1
13
10
13
15
7
1
64
49
2
0
19
3
15
20
1
49
3
0
19
4
15
20
3
79
56
4
50
5
1
15
20
1
20
4
13
18
2
49
6
1
15
15
45
7
8
7
9
64
49
10
1
19
5
15
20
5
7
11
64
7
12
64
7
13
64
35
3
49
14
1
15
20
5
49
15
0
15
20
4
49
16
0
19
6
15
45
17
18
13
71
19
47
9
112
47
49
20
0
13
47
49
21
0
15
8
115
49
19
0
19
7
15
20
4
20
1
49
22
0
83
23
9
138
20
5
7
24
49
25
1
8
213
20
6
7
26
13
70
9
158
15
44
43
27
7
28
78
49
19
2
6
26
49
29
1
9
175
20
5
20
7
49
30
0
49
25
1
8
213
20
6
7
31
13
70
9
195
15
44
43
27
7
32
78
49
19
2
6
31
49
29
1
9
212
20
5
20
7
49
33
0
49
25
1
8
213
1
15
20
5
20
4
49
34
0
7
35
64
20
6
35
3
49
36
1
15
20
5
11
I
c
I
8
I
3
I
0
I
3
n
p
37
x
2
[]
s
1
1
x
4
to_i
x
12
eval_context
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
21
21
1
4
49
0
0
9
19
21
1
4
49
0
0
22
1
4
8
20
1
11
I
2
I
0
I
0
I
0
I
0
I
-2
p
1
x
6
sender
p
5
I
0
I
245
I
14
I
0
I
15
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
6
downto
x
13
eval_context=
x
6
Output
n
s
26
Evaluation context now at:
x
4
info
s
3
%*s
s
3
%|s
s
4
%-*s
x
11
set_columns
x
15
set_line_marker
x
8
location
x
9
Backtrace
n
x
3
new
x
8
allocate
x
10
initialize
x
13
debug_context
x
2
==
x
5
green
x
9
set_color
n
x
6
Regexp
s
6
kernel
x
2
=~
x
12
kernel_color
n
s
8
\(eval\)
x
10
eval_color
x
8
describe
s
2
at
x
2
<<
p
41
I
-1
I
242
I
0
I
243
I
13
I
244
I
1b
I
245
I
24
I
246
I
30
I
247
I
3c
I
248
I
4d
I
249
I
53
I
24a
I
5b
I
24b
I
76
I
24c
I
81
I
24d
I
8a
I
24e
I
a3
I
24f
I
af
I
250
I
c8
I
251
I
d4
I
250
I
d5
I
0
I
d6
I
253
I
e8
I
254
I
eb
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
8
x
3
dbg
x
9
interface
x
2
md
x
1
n
x
4
ctxt
x
6
output
x
3
loc
x
2
bt
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
23d
I
5
I
240
I
e
I
23e
I
27
I
23f
I
31
I
240
I
3a
I
23d
I
3f
I
242
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
9
DownFrame
n
M
1
n
n
x
9
DownFrame
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
4
down
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
19
^down(?:\s+(\d+))?$
x
3
new
x
3
[]=
x
6
syntax
s
8
down [n]
x
11
description
s
60
Change the eval context by moving down 1 (or n) call frames.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
274
20
2
79
49
0
1
13
10
13
15
7
1
64
49
2
0
19
3
15
20
1
49
3
0
19
4
15
20
4
35
1
19
5
15
20
4
20
1
49
4
0
83
5
10
64
20
4
49
6
0
19
4
15
20
5
20
4
49
7
1
15
68
8
34
1
15
20
3
78
56
8
50
9
1
15
20
1
20
4
13
18
2
49
10
1
15
15
45
11
12
7
13
64
49
14
1
19
6
15
20
6
7
15
64
7
16
64
7
17
64
35
3
49
18
1
15
20
6
49
19
0
15
20
4
49
20
0
19
7
15
45
21
22
13
71
23
47
9
151
47
49
24
0
13
47
49
25
0
15
8
154
49
23
0
19
8
15
20
4
20
1
49
3
0
83
5
9
177
20
6
7
26
49
27
1
8
252
20
7
7
28
13
70
9
197
15
44
43
29
7
30
78
49
23
2
6
28
49
31
1
9
214
20
6
20
8
49
32
0
49
27
1
8
252
20
7
7
33
13
70
9
234
15
44
43
29
7
34
78
49
23
2
6
33
49
31
1
9
251
20
6
20
8
49
35
0
49
27
1
8
252
1
15
20
6
20
4
49
36
0
7
37
64
20
7
35
3
49
38
1
15
20
6
11
I
d
I
9
I
3
I
0
I
3
n
p
39
x
2
[]
s
1
1
x
4
to_i
x
13
debug_context
x
12
eval_context
x
2
==
x
6
sender
x
7
unshift
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
24
21
1
5
49
0
0
78
85
1
9
22
21
1
5
49
2
0
22
1
4
8
23
1
11
I
3
I
0
I
0
I
0
I
0
I
-2
p
3
x
4
size
x
1
>
x
5
shift
p
5
I
0
I
267
I
17
I
0
I
18
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
6
downto
x
13
eval_context=
x
6
Output
n
s
26
Evaluation context now at:
x
4
info
s
3
%*s
s
3
%|s
s
4
%-*s
x
11
set_columns
x
15
set_line_marker
x
8
location
x
9
Backtrace
n
x
3
new
x
8
allocate
x
10
initialize
x
5
green
x
9
set_color
n
x
6
Regexp
s
6
kernel
x
2
=~
x
12
kernel_color
n
s
8
\(eval\)
x
10
eval_color
x
8
describe
s
2
at
x
2
<<
p
51
I
-1
I
25f
I
0
I
260
I
13
I
261
I
1b
I
262
I
22
I
263
I
2d
I
264
I
35
I
265
I
40
I
0
I
42
I
267
I
4b
I
268
I
57
I
269
I
63
I
26a
I
74
I
26b
I
7a
I
26c
I
82
I
26d
I
9d
I
26e
I
a8
I
26f
I
b1
I
270
I
ca
I
271
I
d6
I
272
I
ef
I
273
I
fb
I
272
I
fc
I
0
I
fd
I
275
I
10f
I
276
I
112
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
9
x
3
dbg
x
9
interface
x
2
md
x
1
n
x
4
ctxt
x
6
frames
x
6
output
x
3
loc
x
2
bt
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
25a
I
5
I
25d
I
e
I
25b
I
27
I
25c
I
31
I
25d
I
3a
I
25a
I
3f
I
25f
I
4d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
p
45
I
2
I
7
I
1f
I
1b
I
3c
I
38
I
59
I
55
I
76
I
68
I
93
I
80
I
b0
I
93
I
cd
I
ac
I
ea
I
ba
I
107
I
d7
I
124
I
f4
I
141
I
10c
I
15e
I
119
I
17b
I
150
I
198
I
181
I
1b5
I
19e
I
1d2
I
1b1
I
1ef
I
1cd
I
20c
I
1ea
I
229
I
209
I
246
I
23c
I
263
I
259
I
280
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
13
attach_method
p
3
I
2
I
5
I
1d
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
x
13
attach_method
p
5
I
0
I
1
I
9
I
3
I
25
x
46
lib/rubinius/debugger/old/standard_commands.rb
p
0
