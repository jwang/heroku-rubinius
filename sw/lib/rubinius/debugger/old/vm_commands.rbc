!RBIX
4472690874163217065
18
M
1
n
n
x
10
__script__
i
28
99
7
0
65
49
1
2
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
15
2
11
I
6
I
0
I
0
I
0
I
0
n
p
5
x
8
Rubinius
x
11
open_module
x
15
__module_init__
M
1
n
n
x
8
Rubinius
i
29
5
66
99
7
0
1
65
49
1
3
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
11
I
6
I
0
I
0
I
0
I
0
n
p
5
x
8
Debugger
x
10
open_class
x
14
__class_init__
M
1
n
n
x
8
Debugger
i
147
5
66
99
7
0
45
1
2
65
49
3
3
13
99
12
7
4
12
7
5
12
65
12
49
6
4
15
49
4
0
15
99
7
7
45
1
8
65
49
3
3
13
99
12
7
4
12
7
9
12
65
12
49
6
4
15
49
4
0
15
99
7
10
45
1
11
65
49
3
3
13
99
12
7
4
12
7
12
12
65
12
49
6
4
15
49
4
0
15
99
7
13
45
1
14
65
49
3
3
13
99
12
7
4
12
7
15
12
65
12
49
6
4
15
49
4
0
15
99
7
16
45
1
17
65
49
3
3
13
99
12
7
4
12
7
18
12
65
12
49
6
4
15
49
4
0
11
I
6
I
0
I
0
I
0
I
0
n
p
19
x
17
StepInInstruction
x
7
Command
n
x
10
open_class
x
14
__class_init__
M
1
n
n
x
17
StepInInstruction
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
19
step_in_instruction
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
60
^s(?:tep)?\s*i(?:nst(?:ruction)?)?(?:\s+(?:(to)\s+)?(\d+))?$
x
3
new
x
3
[]=
x
6
syntax
s
16
s[tep]i [to] [n]
x
11
description
s
112
          Step to the next, (or nth next, or target IP) VM instruction, stepping
          into called methods.

x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
175
20
2
79
49
0
1
19
3
15
20
2
80
49
0
1
19
4
15
1
19
5
15
44
43
1
80
49
2
1
13
7
3
7
4
49
5
2
15
13
7
6
7
7
49
5
2
15
19
6
15
20
3
9
92
20
6
7
8
20
4
49
9
0
13
18
3
49
5
2
15
15
45
10
11
7
12
20
4
47
101
13
7
14
63
3
49
15
1
19
7
8
156
20
6
7
16
20
4
9
107
20
4
49
9
0
8
108
79
13
18
3
49
5
2
15
19
4
15
45
10
17
7
18
20
4
47
101
13
7
19
20
4
49
9
0
79
83
20
9
143
1
8
146
7
21
64
47
101
13
63
4
49
15
1
19
7
15
20
0
20
6
49
22
1
15
20
1
49
23
0
15
20
7
11
11
I
e
I
8
I
3
I
0
I
3
n
p
24
x
2
[]
x
4
Hash
x
16
new_from_literal
x
9
step_type
x
2
in
x
3
[]=
x
7
step_by
x
2
ip
x
6
target
x
4
to_i
x
6
Output
n
s
15
Stepping to IP[
x
4
to_s
s
1
]
x
4
info
x
5
steps
n
s
9
Stepping 
s
12
 instruction
x
2
==
s
1
s
x
4
step
x
5
done!
p
37
I
-1
I
f
I
0
I
10
I
9
I
11
I
12
I
12
I
16
I
14
I
32
I
15
I
36
I
16
I
47
I
17
I
5c
I
19
I
6c
I
0
I
73
I
19
I
76
I
1a
I
92
I
0
I
97
I
1a
I
9c
I
0
I
9d
I
1c
I
a5
I
1f
I
ab
I
21
I
af
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
8
x
3
dbg
x
9
interface
x
2
md
x
9
step_type
x
1
n
x
5
steps
x
8
selector
x
6
output
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
7
I
5
I
a
I
e
I
8
I
27
I
9
I
31
I
a
I
3a
I
7
I
3f
I
f
I
4d
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
0
x
13
attach_method
x
19
StepNextInstruction
n
M
1
n
n
x
19
StepNextInstruction
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
21
step_next_instruction
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
60
^n(?:ext)?\s*i(?:nst(?:ruction)?)?(?:\s+(?:(to)\s+)?(\d+))?$
x
3
new
x
3
[]=
x
6
syntax
s
16
n[ext]i [to] [n]
x
11
description
s
120
          Step to the next, (or nth next, or target IP) VM instruction, without
          stepping into called methods.

x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
175
20
2
79
49
0
1
19
3
15
20
2
80
49
0
1
19
4
15
1
19
5
15
44
43
1
80
49
2
1
13
7
3
7
4
49
5
2
15
13
7
6
7
7
49
5
2
15
19
6
15
20
3
9
92
20
6
7
8
20
4
49
9
0
13
18
3
49
5
2
15
15
45
10
11
7
12
20
4
47
101
13
7
14
63
3
49
15
1
19
7
8
156
20
6
7
16
20
4
9
107
20
4
49
9
0
8
108
79
13
18
3
49
5
2
15
19
4
15
45
10
17
7
18
20
4
47
101
13
7
19
20
4
49
9
0
79
83
20
9
143
1
8
146
7
21
64
47
101
13
63
4
49
15
1
19
7
15
20
0
20
6
49
22
1
15
20
1
49
23
0
15
20
7
11
11
I
e
I
8
I
3
I
0
I
3
n
p
24
x
2
[]
x
4
Hash
x
16
new_from_literal
x
9
step_type
x
4
next
x
3
[]=
x
7
step_by
x
2
ip
x
6
target
x
4
to_i
x
6
Output
n
s
15
Stepping to IP[
x
4
to_s
s
1
]
x
4
info
x
5
steps
n
s
9
Stepping 
s
12
 instruction
x
2
==
s
1
s
x
4
step
x
5
done!
p
37
I
-1
I
2f
I
0
I
30
I
9
I
31
I
12
I
32
I
16
I
34
I
32
I
35
I
36
I
36
I
47
I
37
I
5c
I
39
I
6c
I
0
I
73
I
39
I
76
I
3a
I
92
I
0
I
97
I
3a
I
9c
I
0
I
9d
I
3c
I
a5
I
3f
I
ab
I
41
I
af
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
8
x
3
dbg
x
9
interface
x
2
md
x
9
step_type
x
1
n
x
5
steps
x
8
selector
x
6
output
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
27
I
5
I
2a
I
e
I
28
I
27
I
29
I
31
I
2a
I
3a
I
27
I
3f
I
2f
I
4d
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
0
x
12
ListBytecode
n
M
1
n
n
x
12
ListBytecode
i
148
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
45
4
5
13
71
6
47
9
50
47
49
7
0
13
7
8
64
45
9
10
81
11
7
12
64
81
11
47
49
13
1
15
8
66
7
8
64
45
9
14
81
11
7
12
64
81
11
49
6
1
49
15
2
15
13
7
16
7
17
64
49
15
2
15
13
7
18
7
19
64
49
15
2
15
47
49
20
2
15
5
7
21
4
20
44
43
1
79
49
2
1
13
7
18
7
22
64
49
15
2
15
47
49
23
3
15
5
7
24
3
7
25
64
47
49
23
3
15
99
7
26
7
27
65
67
49
28
0
49
29
4
11
I
9
I
0
I
0
I
0
I
0
n
p
30
x
6
decode
x
4
Hash
x
16
new_from_literal
x
6
regexp
x
6
Regexp
n
x
3
new
x
8
allocate
s
18
^d(?:ecode)?(?:\s+
x
16
MODULE_METHOD_RE
n
x
1
+
s
35
)?(?:\s+(\d+))?(?:(?:\s+|-)(\d+))?$
x
10
initialize
n
x
3
[]=
x
6
syntax
s
33
d[ecode] [<method>] [start [end]]
x
11
description
s
55
Decode bytecode around breakpoint or between start/end.
x
7
command
x
11
window_size
s
145
          Sets the 'window' size, i.e. the number of instructions to be displayed
          around the current IP when no IP range is specified.

x
7
setting
x
12
auto_advance
s
66
Determines whether the listing advances if the command is repeated
x
7
execute
M
1
n
n
x
7
execute
i
350
20
2
79
49
0
1
20
2
80
49
0
1
20
2
4
3
49
0
1
17
3
19
3
15
19
4
15
19
5
15
2
15
20
2
4
4
49
0
1
20
2
4
5
49
0
1
17
2
19
6
15
19
7
15
2
15
20
5
9
89
5
20
3
20
4
20
5
47
49
1
3
49
2
0
19
8
15
20
6
9
84
1
8
87
78
19
6
8
125
20
1
49
3
0
49
4
0
19
8
15
20
6
9
107
1
8
125
20
1
49
3
0
49
5
0
39
6
80
49
7
1
82
8
19
6
15
20
8
49
9
0
49
10
0
19
9
15
20
0
20
9
49
11
1
19
10
15
20
0
20
8
49
12
1
19
11
15
20
6
49
13
0
19
6
15
20
6
78
84
14
9
177
78
19
6
8
178
1
15
20
7
9
192
20
7
49
13
0
19
7
8
200
20
6
39
6
81
15
19
7
15
20
6
20
7
85
16
9
224
20
7
20
6
17
2
19
6
15
19
7
15
2
8
225
1
15
45
17
18
7
19
20
6
47
101
10
7
20
20
7
47
101
10
7
21
20
8
49
22
0
47
101
10
7
23
63
7
49
24
1
19
12
15
20
12
7
25
64
7
26
64
7
27
64
35
3
49
28
1
15
20
6
78
85
16
9
301
20
12
1
7
29
64
1
35
3
49
30
1
8
302
1
15
78
19
13
15
20
11
56
31
50
32
0
15
20
7
20
11
77
49
0
1
49
5
0
84
14
9
344
20
12
1
7
29
64
1
35
3
49
30
1
8
345
1
15
20
12
11
11
I
16
I
e
I
3
I
0
I
3
n
p
33
x
2
[]
x
10
get_method
x
15
compiled_method
x
12
eval_context
x
6
method
x
2
ip
x
12
@window_size
x
1
/
x
1
-
x
4
file
x
4
to_s
x
10
source_for
x
7
asm_for
x
4
to_i
x
1
<
x
1
+
x
1
>
x
6
Output
n
s
23
Bytecode instructions [
s
1
-
s
21
] in compiled method 
x
4
name
s
1
:
x
4
info
s
5
%04d:
s
4
%-s 
s
4
%-*s
x
11
set_columns
s
3
...
x
2
<<
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
258
57
19
0
15
20
0
49
0
0
21
1
6
49
1
1
13
9
30
15
20
0
49
0
0
21
1
7
49
2
1
9
237
20
0
49
3
0
21
1
13
83
4
9
47
1
8
120
20
0
49
3
0
22
1
13
15
21
1
10
9
77
21
1
10
21
1
13
79
82
5
49
6
1
19
1
8
78
1
15
21
1
12
7
7
49
8
1
15
21
1
12
1
7
9
21
1
13
47
101
10
7
11
63
3
20
1
35
3
49
12
1
15
21
1
12
7
13
49
8
1
15
21
1
5
10
129
2
8
130
3
13
9
150
15
20
0
49
0
0
21
1
1
49
14
0
49
0
0
83
4
9
169
21
1
12
49
15
0
15
21
1
12
7
16
49
8
1
8
170
1
15
21
1
12
20
0
49
0
0
20
0
49
17
0
20
0
49
18
0
56
19
50
20
0
7
21
64
49
22
1
35
3
49
12
1
15
20
0
49
0
0
21
1
1
49
14
0
49
0
0
83
4
9
234
21
1
12
7
13
49
8
1
8
235
1
8
238
1
15
20
0
49
0
0
21
1
7
49
1
1
9
256
1
33
8
257
1
11
I
8
I
2
I
1
I
0
I
1
n
p
23
x
2
ip
x
2
>=
x
2
<=
x
4
line
x
2
==
x
1
-
x
2
[]
x
5
green
x
9
set_color
s
7
# line 
x
4
to_s
s
1
:
x
2
<<
x
5
clear
x
12
eval_context
x
15
set_line_marker
x
4
cyan
x
6
opcode
x
4
args
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
0
I
1
n
p
1
x
7
inspect
p
3
I
0
I
80
I
a
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
1
x
1
a
x
3
map
s
2
, 
x
4
join
p
45
I
0
I
73
I
4
I
74
I
20
I
75
I
2f
I
76
I
38
I
77
I
4e
I
0
I
4f
I
78
I
58
I
79
I
70
I
7a
I
78
I
0
I
79
I
7c
I
98
I
7d
I
9f
I
7e
I
a9
I
7c
I
aa
I
0
I
ab
I
80
I
ce
I
81
I
eb
I
0
I
ed
I
74
I
ee
I
0
I
ef
I
83
I
101
I
0
I
102
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
2
x
4
inst
x
3
src
x
4
each
p
63
I
-1
I
56
I
0
I
57
I
20
I
58
I
38
I
5a
I
3c
I
5b
I
4d
I
5c
I
57
I
0
I
59
I
5f
I
64
I
60
I
7d
I
0
I
7e
I
62
I
89
I
63
I
93
I
64
I
9d
I
66
I
a5
I
67
I
b2
I
0
I
b3
I
68
I
b7
I
69
I
c0
I
6b
I
c8
I
0
I
c9
I
6d
I
e1
I
0
I
e2
I
6f
I
107
I
70
I
118
I
71
I
12e
I
0
I
12f
I
72
I
133
I
73
I
13b
I
85
I
159
I
0
I
15a
I
87
I
15e
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
14
x
3
dbg
x
9
interface
x
2
md
x
3
mod
x
9
mthd_type
x
4
mthd
x
5
first
x
4
last
x
2
cm
x
4
file
x
5
lines
x
3
asm
x
6
output
x
4
line
x
17
method_visibility
x
15
add_defn_method
p
29
I
2
I
49
I
5
I
4d
I
e
I
4a
I
26
I
4b
I
32
I
4a
I
3a
I
4b
I
47
I
4c
I
51
I
4d
I
5a
I
49
I
5f
I
4f
I
64
I
50
I
75
I
4f
I
7a
I
54
I
86
I
56
I
94
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
0
x
9
ShowStack
n
M
1
n
n
x
9
ShowStack
i
77
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
7
4
13
70
9
34
15
44
43
5
7
6
78
49
7
2
6
4
49
8
2
15
13
7
9
7
10
64
49
8
2
15
13
7
11
7
12
64
49
8
2
15
47
49
13
2
15
99
7
14
7
15
65
67
49
16
0
49
17
4
11
I
8
I
0
I
0
I
0
I
0
n
p
18
x
5
stack
x
4
Hash
x
16
new_from_literal
x
6
regexp
n
x
6
Regexp
s
48
^v(?:m)?\s*s(?:tack)?(?:\s+(\d+))?(?:\s+(\d+))?$
x
3
new
x
3
[]=
x
6
syntax
s
26
v[m] s[tack] [start [end]]
x
11
description
s
44
Display the current objects on the VM stack.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
263
20
2
79
49
0
1
20
2
80
49
0
1
17
2
19
3
15
19
4
15
2
15
20
3
9
35
20
3
49
1
0
19
3
8
36
1
15
20
4
9
50
20
4
49
1
0
19
4
8
51
1
15
20
3
9
59
1
8
62
78
19
3
15
20
4
9
70
1
8
78
20
3
4
5
81
2
19
4
15
20
3
20
4
85
3
9
102
20
4
20
3
17
2
19
3
15
19
4
15
2
8
103
1
15
20
1
49
4
0
49
5
0
19
5
15
20
1
49
6
0
49
7
0
19
6
15
20
1
49
6
0
49
8
0
19
7
15
45
9
10
7
11
20
3
47
101
12
7
13
20
4
47
101
12
7
14
63
5
49
15
1
19
8
15
20
8
7
16
64
7
17
64
35
2
7
18
64
7
19
64
35
2
7
20
64
7
21
64
35
2
35
3
49
22
1
15
20
3
78
85
3
9
217
20
8
1
7
23
64
1
35
3
49
24
1
8
218
1
15
20
3
20
4
56
25
50
26
1
15
20
4
20
5
49
27
0
79
82
28
84
29
9
257
20
8
1
7
23
64
1
35
3
49
24
1
8
258
1
15
20
8
11
11
I
f
I
9
I
3
I
0
I
3
n
p
30
x
2
[]
x
4
to_i
x
1
+
x
1
>
x
12
debug_thread
x
4
task
x
13
debug_context
x
2
fp
x
2
sp
x
6
Output
n
s
10
VM stack [
x
4
to_s
s
1
-
s
2
]:
x
4
info
s
5
Depth
s
4
%2d:
s
5
Class
s
3
%-s
s
5
Value
s
5
 %-*s
x
11
set_columns
s
3
...
x
2
<<
M
1
p
2
x
9
for_block
t
n
x
7
execute
i
141
57
19
0
15
21
1
5
20
0
49
0
1
19
1
15
21
1
7
20
0
82
1
19
2
15
20
2
21
1
6
49
2
1
9
45
21
1
8
7
3
49
4
1
8
46
1
15
20
2
21
1
7
83
5
13
9
65
15
20
2
21
1
6
83
5
9
78
21
1
8
7
6
64
49
7
1
8
119
20
2
21
1
7
83
5
9
98
21
1
8
7
8
64
49
7
1
8
119
20
2
21
1
6
83
5
9
118
21
1
8
7
9
64
49
7
1
8
119
1
15
21
1
8
20
0
20
1
49
10
0
20
1
49
11
0
35
3
49
12
1
11
I
8
I
3
I
1
I
0
I
1
n
p
13
x
15
get_stack_value
x
1
-
x
2
<=
x
6
yellow
x
9
set_color
x
2
==
s
9
fp|sp => 
x
15
set_line_marker
s
6
sp => 
s
6
fp => 
x
5
class
x
7
inspect
x
2
<<
p
29
I
0
I
a2
I
4
I
a3
I
f
I
a4
I
19
I
a5
I
2e
I
0
I
2f
I
a6
I
43
I
a7
I
4e
I
a8
I
57
I
a9
I
62
I
aa
I
6b
I
ab
I
76
I
aa
I
77
I
0
I
78
I
ad
I
8d
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
3
x
1
i
x
3
val
x
2
sp
x
4
upto
x
10
stack_size
x
1
-
x
1
<
p
47
I
-1
I
93
I
0
I
94
I
16
I
95
I
24
I
0
I
25
I
96
I
33
I
0
I
34
I
97
I
3e
I
0
I
3f
I
98
I
4e
I
0
I
4f
I
99
I
67
I
0
I
68
I
9b
I
73
I
9c
I
7e
I
9d
I
89
I
9f
I
a4
I
a0
I
c4
I
a1
I
da
I
0
I
db
I
a2
I
e5
I
af
I
102
I
0
I
103
I
b1
I
107
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
9
x
3
dbg
x
9
interface
x
2
md
x
5
first
x
4
last
x
4
task
x
2
fp
x
3
top
x
6
output
x
17
method_visibility
x
15
add_defn_method
p
15
I
2
I
8e
I
5
I
91
I
e
I
8f
I
27
I
90
I
31
I
91
I
3a
I
8e
I
3f
I
93
I
4d
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
0
x
13
ShowSendSites
n
M
1
n
n
x
13
ShowSendSites
i
123
5
66
5
7
0
44
43
1
4
3
49
2
1
13
7
3
45
4
5
13
71
6
47
9
50
47
49
7
0
13
7
8
64
45
9
10
81
11
7
12
64
81
11
47
49
13
1
15
8
66
7
8
64
45
9
14
81
11
7
12
64
81
11
49
6
1
49
15
2
15
13
7
16
7
17
64
49
15
2
15
13
7
18
7
19
64
49
15
2
15
47
49
20
2
15
99
7
21
7
22
65
67
49
23
0
49
24
4
15
99
7
25
7
26
65
67
49
23
0
49
24
4
11
I
9
I
0
I
0
I
0
I
0
n
p
27
x
10
send_sites
x
4
Hash
x
16
new_from_literal
x
6
regexp
x
6
Regexp
n
x
3
new
x
8
allocate
s
44
^v(?:m)?\s*s(?:end)?\s*s(?:ite(?:s)?)?(?:\s+
x
9
METHOD_RE
n
x
1
+
s
3
)?$
x
10
initialize
n
x
3
[]=
x
6
syntax
s
32
v[m] s[end] s[ites] [<selector>]
x
11
description
s
95
Display send site info for each send site in the current method, or for the specified selector.
x
7
command
x
7
execute
M
1
n
n
x
7
execute
i
149
20
2
79
49
0
1
19
3
15
20
3
9
77
45
1
2
43
3
43
4
20
3
49
5
0
49
0
1
19
4
15
20
4
9
56
20
4
49
6
0
19
5
15
5
20
4
20
5
47
49
7
2
19
6
8
75
45
8
9
7
10
20
3
47
101
11
7
12
63
3
49
13
1
19
6
8
145
20
1
49
14
0
49
15
0
19
4
15
20
4
49
6
0
19
5
15
20
5
13
9
110
15
20
5
49
16
0
78
85
17
9
125
5
20
4
20
5
47
49
7
2
19
6
8
145
45
8
18
7
19
20
4
49
20
0
47
101
11
63
2
49
21
1
19
6
15
20
6
11
I
b
I
7
I
3
I
0
I
3
n
p
22
x
2
[]
x
8
Rubinius
n
x
8
Selector
x
3
ALL
x
6
intern
x
10
send_sites
x
6
output
x
6
Output
n
s
29
No selector found with name '
x
4
to_s
s
1
'
x
5
error
x
12
eval_context
x
6
method
x
4
size
x
1
>
n
s
34
There are no send sites in method 
x
4
name
x
4
none
p
33
I
-1
I
bd
I
0
I
be
I
9
I
bf
I
d
I
c0
I
1f
I
c1
I
23
I
c2
I
2b
I
c3
I
38
I
c5
I
4b
I
0
I
4d
I
c8
I
58
I
c9
I
60
I
ca
I
70
I
cb
I
7d
I
cd
I
91
I
0
I
92
I
d0
I
95
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
7
x
3
dbg
x
9
interface
x
2
md
x
8
selector
x
6
source
x
10
send_sites
x
6
output
x
17
method_visibility
x
15
add_defn_method
x
6
output
M
1
n
n
x
6
output
i
246
45
0
1
7
2
20
0
45
3
4
43
5
49
6
1
9
22
7
7
64
8
23
1
47
101
8
20
0
49
9
0
47
101
8
7
10
63
4
49
11
1
19
2
15
20
0
45
3
12
43
5
49
6
1
9
132
20
2
7
13
64
7
14
64
7
15
64
35
2
7
16
64
7
15
64
35
2
7
17
64
7
18
64
35
2
7
19
64
7
15
64
35
2
7
20
64
7
15
64
35
2
7
21
64
7
15
64
35
2
7
22
64
7
23
64
35
2
7
24
64
7
23
64
35
2
35
9
49
25
1
8
234
45
0
26
7
2
20
0
45
3
27
43
5
49
6
1
9
154
7
7
64
8
155
1
47
101
8
20
0
49
9
0
47
101
8
7
10
63
4
49
11
1
19
2
15
20
2
7
13
64
7
17
64
7
18
64
35
2
7
19
64
7
15
64
35
2
7
20
64
7
15
64
35
2
7
21
64
7
15
64
35
2
7
22
64
7
23
64
35
2
7
24
64
7
23
64
35
2
35
7
49
25
1
15
20
1
56
28
50
29
0
15
20
2
11
I
e
I
3
I
2
I
0
I
2
n
p
30
x
6
Output
n
s
14
SendSites for 
x
8
Rubinius
n
x
8
Selector
x
8
kind_of?
s
9
selector 
x
4
to_s
x
4
name
s
1
:
x
4
info
n
s
5
%-3d.
s
11
Sender file
s
4
%-*s
s
13
Sender method
s
7
Message
s
3
%-s
s
14
Receiver class
s
6
Method
s
6
Module
s
4
Hits
s
2
%d
s
6
Misses
x
11
set_columns
n
n
M
1
p
2
x
9
for_block
t
n
x
6
output
i
158
58
37
19
0
15
37
19
1
15
15
21
1
0
45
0
1
43
2
49
3
1
9
114
20
0
49
4
0
9
42
20
0
49
4
0
49
5
0
19
2
8
43
1
15
20
0
49
4
0
9
63
20
0
49
4
0
49
6
0
19
3
8
64
1
15
21
1
2
20
1
79
81
7
20
2
20
3
20
0
49
6
0
20
0
49
8
0
20
0
49
9
0
20
0
49
10
0
20
0
49
11
0
20
0
49
12
0
35
9
49
13
1
8
157
21
1
2
20
1
79
81
7
20
0
49
6
0
20
0
49
8
0
20
0
49
9
0
20
0
49
10
0
20
0
49
11
0
20
0
49
12
0
35
7
49
13
1
11
I
f
I
4
I
2
I
0
I
2
n
p
14
x
8
Rubinius
n
x
8
Selector
x
8
kind_of?
x
6
sender
x
4
file
x
4
name
x
1
+
x
10
recv_class
x
6
method
x
6
module
x
4
hits
x
6
misses
x
2
<<
p
23
I
0
I
df
I
a
I
e0
I
17
I
e1
I
2b
I
0
I
2c
I
e2
I
40
I
0
I
41
I
e3
I
52
I
e4
I
6d
I
e3
I
72
I
e6
I
9d
I
0
I
9e
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
4
x
2
ss
x
1
i
x
11
sender_file
x
11
sender_name
x
15
each_with_index
p
39
I
-1
I
d3
I
0
I
d4
I
17
I
0
I
1a
I
d4
I
2c
I
d5
I
38
I
d6
I
4d
I
d7
I
65
I
d8
I
7f
I
d6
I
84
I
da
I
9b
I
0
I
9e
I
da
I
b0
I
db
I
c5
I
dc
I
dd
I
dd
I
e7
I
db
I
ea
I
0
I
eb
I
df
I
f3
I
e9
I
f6
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
3
x
6
source
x
10
send_sites
x
6
output
p
17
I
2
I
b8
I
5
I
bb
I
e
I
b9
I
47
I
ba
I
51
I
bb
I
5a
I
b8
I
5f
I
bd
I
6d
I
d3
I
7b
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
0
p
11
I
2
I
6
I
1f
I
26
I
3c
I
48
I
59
I
8d
I
76
I
b7
I
93
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
0
x
13
attach_method
p
3
I
2
I
3
I
1d
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
0
x
13
attach_method
p
3
I
0
I
1
I
1c
x
40
lib/rubinius/debugger/old/vm_commands.rb
p
0
