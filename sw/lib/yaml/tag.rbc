!RBIX
4472690874163217065
18
M
1
n
n
x
10
__script__
i
55
99
7
0
65
49
1
2
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
15
99
7
5
1
65
49
6
3
13
99
12
7
7
12
7
8
12
65
12
49
4
4
15
49
7
0
15
2
11
I
6
I
0
I
0
I
0
I
0
n
p
9
x
4
YAML
x
11
open_module
x
15
__module_init__
M
1
n
n
x
4
YAML
i
42
5
66
5
7
0
44
43
1
78
49
2
1
49
3
2
15
99
7
4
7
5
65
45
6
7
49
8
4
15
99
7
9
7
10
65
45
6
11
49
8
4
11
I
5
I
0
I
0
I
0
I
0
n
p
12
x
16
@@tagged_classes
x
4
Hash
x
16
new_from_literal
x
18
class_variable_set
x
9
tag_class
M
1
n
n
x
9
tag_class
i
67
65
7
0
49
1
1
20
0
49
2
1
9
47
5
7
3
65
7
0
49
1
1
20
0
49
4
1
47
101
5
7
6
20
0
47
101
5
7
7
63
5
47
49
8
1
8
48
1
15
65
7
0
49
1
1
20
0
20
1
13
18
3
49
9
2
15
11
I
8
I
2
I
2
I
0
I
2
n
p
10
x
16
@@tagged_classes
x
18
class_variable_get
x
8
has_key?
s
6
class 
x
2
[]
x
4
to_s
s
23
 held ownership of the 
s
4
 tag
x
4
warn
x
3
[]=
p
13
I
-1
I
23
I
0
I
24
I
d
I
25
I
2f
I
24
I
30
I
0
I
31
I
27
I
43
x
15
lib/yaml/tag.rb
p
2
x
3
tag
x
3
cls
x
4
YAML
n
x
13
attach_method
x
14
tagged_classes
M
1
n
n
x
14
tagged_classes
i
7
65
7
0
49
1
1
11
I
2
I
0
I
0
I
0
I
0
n
p
2
x
16
@@tagged_classes
x
18
class_variable_get
p
5
I
-1
I
30
I
0
I
31
I
7
x
15
lib/yaml/tag.rb
p
0
n
p
7
I
2
I
b
I
10
I
23
I
1d
I
30
I
2a
x
15
lib/yaml/tag.rb
p
0
x
13
attach_method
x
6
Module
x
10
open_class
x
14
__class_init__
M
1
n
n
x
6
Module
i
44
5
66
99
7
0
7
1
65
67
49
2
0
49
3
4
15
99
7
4
7
5
65
67
49
2
0
49
3
4
15
99
7
6
7
7
65
67
49
2
0
49
3
4
11
I
5
I
0
I
0
I
0
I
0
n
p
8
x
7
yaml_as
M
1
n
n
x
7
yaml_as
i
126
23
1
10
8
2
19
1
15
29
100
1
26
93
0
15
99
43
0
7
1
49
2
1
1
17
2
19
2
15
99
43
0
12
7
1
12
49
3
2
15
2
15
5
7
4
20
0
49
5
0
47
101
6
7
7
20
1
9
64
7
8
64
8
67
7
9
64
47
101
6
7
10
63
5
65
49
11
0
4
61
79
81
12
47
49
13
3
15
45
14
15
20
0
5
49
16
2
30
8
114
26
99
43
0
7
1
20
2
49
3
2
15
27
34
99
43
0
7
1
20
2
49
3
2
15
11
I
a
I
3
I
1
I
0
I
2
n
p
17
x
7
Globals
x
8
$VERBOSE
x
2
[]
x
3
[]=
s
273
            attr_writer :taguri
            def taguri
                if respond_to? :to_yaml_type
                    YAML::tagurize( to_yaml_type[1..-1] )
                else
                    return @taguri if defined?(@taguri) and @taguri
                    tag = 
x
4
dump
x
4
to_s
s
304

                    if self.class.yaml_tag_subclasses? and self.class != YAML::tagged_classes[tag]
                        tag = "#{ tag }:#{ self.class.yaml_tag_class_name }"
                    end
                    tag
                end
            end
            def self.yaml_tag_subclasses?; 
s
4
true
s
5
false
s
6
; end

x
11
active_path
x
1
+
x
10
class_eval
x
4
YAML
n
x
9
tag_class
p
21
I
-1
I
3b
I
8
I
3c
I
2a
I
3d
I
2b
I
44
I
37
I
4b
I
43
I
0
I
4a
I
3d
I
58
I
4d
I
65
I
4f
I
72
I
4f
I
7e
x
15
lib/yaml/tag.rb
p
3
x
3
tag
x
2
sc
x
7
verbose
x
17
method_visibility
x
15
add_defn_method
x
19
yaml_tag_class_name
M
1
n
n
x
19
yaml_tag_class_name
i
5
5
49
0
0
11
I
1
I
0
I
0
I
0
I
0
n
p
1
x
4
name
p
5
I
-1
I
53
I
0
I
54
I
5
x
15
lib/yaml/tag.rb
p
0
x
19
yaml_tag_read_class
M
1
n
n
x
19
yaml_tag_read_class
i
3
20
0
11
I
2
I
1
I
1
I
0
I
1
n
p
0
p
5
I
-1
I
58
I
0
I
59
I
3
x
15
lib/yaml/tag.rb
p
1
x
4
name
p
7
I
2
I
3b
I
10
I
53
I
1e
I
58
I
2c
x
15
lib/yaml/tag.rb
p
0
p
5
I
0
I
8
I
1a
I
35
I
37
x
15
lib/yaml/tag.rb
p
0
