!RBIX
4472690874163217065
18
M
1
n
n
x
10
__script__
i
56
99
7
0
1
65
49
1
3
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
15
99
7
5
1
65
49
1
3
13
99
12
7
2
12
7
6
12
65
12
49
4
4
15
49
2
0
15
2
11
I
6
I
0
I
0
I
0
I
0
n
p
7
x
6
Regexp
x
10
open_class
x
14
__class_init__
M
1
n
n
x
6
Regexp
i
951
5
66
65
7
0
4
110
4
101
4
115
4
117
35
4
49
1
2
15
65
7
2
4
16
4
32
4
48
4
64
35
4
49
1
2
15
65
7
3
79
49
1
2
15
65
7
4
80
49
1
2
15
65
7
5
4
4
49
1
2
15
65
7
6
4
128
49
1
2
15
65
7
7
7
8
49
1
2
15
65
7
9
45
3
10
45
4
11
49
12
1
45
5
13
49
12
1
45
6
14
49
12
1
45
7
15
49
12
1
49
1
2
15
65
7
16
78
49
1
2
15
65
7
17
4
16
49
1
2
15
65
7
18
4
32
49
1
2
15
65
7
19
4
48
49
1
2
15
65
7
20
4
64
49
1
2
15
65
7
21
4
112
49
1
2
15
65
7
22
45
23
24
43
25
13
71
26
47
9
194
47
49
27
0
13
7
8
47
49
28
1
15
8
199
7
8
49
26
1
49
1
2
15
78
19
0
15
20
0
7
8
84
29
9
244
45
22
30
20
0
20
0
49
31
0
13
18
3
49
32
2
15
15
20
0
79
81
33
19
0
15
68
8
207
1
15
45
22
34
4
9
7
35
64
13
18
3
49
32
2
15
15
45
22
36
4
10
7
37
64
13
18
3
49
32
2
15
15
45
22
38
4
11
7
39
64
13
18
3
49
32
2
15
15
45
22
40
4
12
7
41
64
13
18
3
49
32
2
15
15
45
22
42
4
13
7
43
64
13
18
3
49
32
2
15
15
45
22
44
4
32
7
45
64
13
18
3
49
32
2
15
15
45
22
46
4
35
7
47
64
13
18
3
49
32
2
15
15
45
22
48
4
36
7
49
64
13
18
3
49
32
2
15
15
45
22
50
4
40
7
51
64
13
18
3
49
32
2
15
15
45
22
52
4
41
7
53
64
13
18
3
49
32
2
15
15
45
22
54
4
42
7
55
64
13
18
3
49
32
2
15
15
45
22
56
4
43
7
57
64
13
18
3
49
32
2
15
15
45
22
58
4
45
7
59
64
13
18
3
49
32
2
15
15
45
22
60
4
46
7
61
64
13
18
3
49
32
2
15
15
45
22
62
4
63
7
63
64
13
18
3
49
32
2
15
15
45
22
64
4
91
7
65
64
13
18
3
49
32
2
15
15
45
22
66
4
92
7
67
64
13
18
3
49
32
2
15
15
45
22
68
4
93
7
69
64
13
18
3
49
32
2
15
15
45
22
70
4
94
7
71
64
13
18
3
49
32
2
15
15
45
22
72
4
123
7
73
64
13
18
3
49
32
2
15
15
45
22
74
4
124
7
75
64
13
18
3
49
32
2
15
15
45
22
76
4
125
7
77
64
13
18
3
49
32
2
15
15
99
7
28
7
78
65
67
49
79
0
49
80
4
15
99
7
81
7
82
65
5
49
83
4
15
5
99
43
84
12
49
85
1
13
99
12
7
86
12
7
87
12
65
12
49
83
4
15
54
50
86
0
15
99
7
88
7
89
65
67
49
79
0
49
80
4
15
99
7
90
7
91
65
5
49
83
4
15
99
7
92
7
93
65
67
49
79
0
49
80
4
15
99
7
94
7
95
65
67
49
79
0
49
80
4
15
99
7
96
7
97
65
67
49
79
0
49
80
4
15
99
7
98
7
99
65
67
49
79
0
49
80
4
15
99
7
100
7
101
65
67
49
79
0
49
80
4
15
99
7
102
7
103
65
67
49
79
0
49
80
4
15
99
7
104
7
105
65
67
49
79
0
49
80
4
15
5
7
106
7
104
47
49
107
2
15
99
7
108
7
109
65
67
49
79
0
49
80
4
15
99
7
110
7
111
65
67
49
79
0
49
80
4
15
99
7
112
7
113
65
67
49
79
0
49
80
4
15
99
7
114
7
115
65
67
49
79
0
49
80
4
15
99
7
116
7
117
65
67
49
79
0
49
80
4
15
99
7
118
1
65
49
119
3
13
99
12
7
120
12
7
121
12
65
12
49
83
4
15
49
120
0
15
99
7
122
7
123
65
67
49
79
0
49
80
4
15
99
7
124
7
125
65
67
49
79
0
49
80
4
15
99
7
126
7
127
65
67
49
79
0
49
80
4
15
99
7
128
7
129
65
67
49
79
0
49
80
4
15
99
7
130
7
131
65
67
49
79
0
49
80
4
11
I
7
I
1
I
0
I
0
I
0
n
p
132
x
10
ValidKcode
x
9
const_set
x
10
KcodeValue
x
10
IGNORECASE
x
8
EXTENDED
x
9
MULTILINE
x
18
DONT_CAPTURE_GROUP
x
13
CAPTURE_GROUP
I
100
x
11
OPTION_MASK
n
n
x
1
|
n
n
n
x
11
KCODE_ASCII
x
10
KCODE_NONE
x
9
KCODE_EUC
x
10
KCODE_SJIS
x
10
KCODE_UTF8
x
10
KCODE_MASK
x
12
ESCAPE_TABLE
x
8
Rubinius
n
x
5
Tuple
x
3
new
x
8
allocate
x
10
initialize
x
1
<
n
x
3
chr
x
3
[]=
x
1
+
n
s
2
\t
n
s
2
\n
n
s
2
\v
n
s
2
\f
n
s
2
\r
n
s
2
\ 
n
s
2
\#
n
s
2
\$
n
s
2
\(
n
s
2
\)
n
s
2
\*
n
s
2
\+
n
s
2
\-
n
s
2
\.
n
s
2
\?
n
s
2
\[
n
s
2
\\
n
s
2
\]
n
s
2
\^
n
s
2
\{
n
s
2
\|
n
s
2
\}
M
1
n
n
x
10
initialize
i
183
23
1
10
8
1
19
1
15
23
2
10
16
1
19
2
15
20
0
45
0
1
49
2
1
9
43
20
0
49
3
0
19
1
15
20
0
49
4
0
19
0
8
95
20
1
45
5
6
49
2
1
9
81
20
1
78
85
7
9
78
20
1
45
8
9
45
10
11
49
12
1
49
13
1
19
1
8
79
1
8
95
20
1
9
92
45
14
15
19
1
8
95
78
19
1
15
20
1
13
9
116
15
20
2
13
9
116
15
20
2
45
16
17
49
2
1
9
171
20
1
45
8
18
49
13
1
19
1
15
45
19
20
20
2
49
21
0
78
49
22
1
49
23
1
19
3
15
20
3
9
168
20
1
45
24
25
20
3
49
22
1
49
12
1
19
1
8
169
1
8
172
1
15
5
20
0
20
1
47
49
26
2
11
I
7
I
4
I
1
I
0
I
3
n
p
27
x
6
Regexp
n
x
8
kind_of?
x
7
options
x
6
source
x
6
Fixnum
n
x
1
>
x
11
OPTION_MASK
n
x
10
KCODE_MASK
n
x
1
|
x
1
&
x
10
IGNORECASE
n
x
6
String
n
n
x
10
ValidKcode
n
x
8
downcase
x
2
[]
x
5
index
x
10
KcodeValue
n
x
7
compile
p
39
I
-1
I
4d
I
10
I
4e
I
1a
I
4f
I
22
I
50
I
2b
I
51
I
35
I
52
I
4f
I
0
I
51
I
53
I
55
I
54
I
5c
I
56
I
5f
I
0
I
60
I
59
I
76
I
5a
I
81
I
5b
I
93
I
5c
I
a9
I
0
I
ab
I
59
I
ac
I
0
I
ad
I
5f
I
b7
x
23
kernel/common/regexp.rb
p
4
x
7
pattern
x
4
opts
x
4
lang
x
3
idx
x
17
method_visibility
x
15
add_defn_method
x
6
escape
M
1
n
n
x
6
escape
i
15
5
20
0
47
49
0
1
45
1
2
2
49
3
2
11
I
4
I
1
I
1
I
0
I
1
n
p
4
x
11
StringValue
x
12
ESCAPE_TABLE
n
x
9
transform
p
5
I
-1
I
62
I
0
I
63
I
f
x
23
kernel/common/regexp.rb
p
1
x
3
str
x
13
attach_method
x
4
Type
x
22
object_singleton_class
x
18
__metaclass_init__
M
1
n
n
x
18
__metaclass_init__
i
22
5
66
5
7
0
7
1
47
49
2
2
15
5
7
3
7
4
47
49
2
2
11
I
3
I
0
I
0
I
0
I
0
n
p
5
x
7
compile
x
3
new
x
12
alias_method
x
5
quote
x
6
escape
p
5
I
2
I
67
I
c
I
68
I
16
x
23
kernel/common/regexp.rb
p
0
x
15
initialize_copy
M
1
n
n
x
15
initialize_copy
i
21
5
20
0
49
0
0
20
0
49
1
0
20
0
49
2
0
47
49
3
3
11
I
5
I
1
I
1
I
0
I
1
n
p
4
x
6
source
x
7
options
x
5
kcode
x
10
initialize
p
5
I
-1
I
6b
I
0
I
6c
I
15
x
23
kernel/common/regexp.rb
p
1
x
5
other
x
5
union
M
1
n
n
x
5
union
i
203
20
0
49
0
0
13
78
12
49
1
1
9
35
15
7
2
13
70
9
32
15
44
43
3
7
4
78
49
5
2
6
2
11
8
149
13
79
12
49
1
1
9
147
15
20
0
49
6
0
19
1
15
20
1
13
45
7
8
12
49
1
1
9
77
15
5
20
1
36
1
47
51
9
0
11
8
145
13
45
3
10
12
49
1
1
9
93
15
20
1
11
8
145
15
45
3
11
13
71
5
47
9
128
47
49
12
0
13
45
3
13
5
20
1
47
49
14
1
49
15
1
47
49
16
1
15
8
144
45
3
17
5
20
1
47
49
14
1
49
15
1
49
5
1
11
8
149
15
1
15
1
19
2
15
7
18
64
19
3
15
20
0
56
19
50
20
0
15
45
3
21
13
71
5
47
9
194
47
49
12
0
13
20
3
1
20
2
47
49
16
3
15
8
202
20
3
1
20
2
49
5
3
11
I
9
I
4
I
0
I
0
I
0
I
0
p
22
x
4
size
x
3
===
n
x
6
Regexp
s
4
(?!)
x
3
new
x
5
first
x
5
Array
n
x
5
union
n
n
x
8
allocate
n
x
11
StringValue
x
5
quote
x
10
initialize
n
s
0

M
1
p
2
x
9
for_block
t
n
x
5
union
i
140
58
37
22
1
1
15
37
19
0
15
15
20
0
78
83
0
9
21
1
8
30
21
1
3
7
1
64
49
2
1
15
21
1
1
45
3
4
49
5
1
9
119
21
1
1
49
6
0
19
1
9
103
21
1
2
9
96
21
1
2
20
1
83
0
9
69
1
8
94
5
45
7
8
7
9
21
1
2
47
101
10
7
11
20
1
47
101
10
63
4
47
49
12
2
8
101
20
1
22
1
2
8
104
1
15
21
1
3
21
1
1
49
10
0
49
2
1
8
139
21
1
3
45
3
13
5
21
1
1
47
49
14
1
49
15
1
49
2
1
11
I
9
I
2
I
2
I
0
I
2
n
p
16
x
2
==
s
1
|
x
2
<<
x
6
Regexp
n
x
8
kind_of?
x
5
kcode
x
13
ArgumentError
n
s
17
Conflict kcodes: 
x
4
to_s
s
4
 != 
x
5
raise
n
x
11
StringValue
x
5
quote
p
33
I
0
I
81
I
b
I
82
I
1e
I
0
I
1f
I
84
I
2a
I
85
I
34
I
86
I
39
I
87
I
45
I
88
I
5e
I
0
I
60
I
8b
I
65
I
0
I
67
I
85
I
68
I
0
I
69
I
8f
I
77
I
91
I
8b
I
0
I
8c
x
23
kernel/common/regexp.rb
p
2
x
3
idx
x
9
pat_kcode
x
15
each_with_index
n
p
39
I
-1
I
6f
I
0
I
70
I
5
I
71
I
e
I
72
I
23
I
73
I
2c
I
74
I
34
I
75
I
36
I
76
I
41
I
77
I
4d
I
78
I
58
I
79
I
5e
I
7b
I
91
I
0
I
94
I
70
I
95
I
0
I
96
I
7f
I
9a
I
80
I
a0
I
81
I
a8
I
95
I
cb
x
23
kernel/common/regexp.rb
p
4
x
8
patterns
x
3
pat
x
5
kcode
x
3
str
x
6
source
M
1
n
n
x
6
source
i
6
39
0
49
1
0
11
I
1
I
0
I
0
I
0
I
0
n
p
2
x
7
@source
x
3
dup
p
5
I
-1
I
98
I
0
I
99
I
6
x
23
kernel/common/regexp.rb
p
0
x
1
~
M
1
n
n
x
1
~
i
64
99
43
0
7
1
49
2
1
19
0
15
20
0
45
3
4
49
5
1
9
24
1
8
38
45
6
7
1
13
18
2
49
8
1
15
15
1
11
15
5
20
0
47
49
9
1
19
1
15
20
1
9
61
20
1
78
49
10
1
8
62
1
11
11
I
5
I
2
I
0
I
0
I
0
n
p
11
x
7
Globals
x
2
$_
x
2
[]
x
6
String
n
x
8
kind_of?
x
6
Regexp
n
x
11
last_match=
x
5
match
x
5
begin
p
19
I
-1
I
9c
I
0
I
9d
I
b
I
9f
I
18
I
a0
I
24
I
a1
I
26
I
0
I
27
I
a4
I
31
I
a5
I
3e
I
0
I
40
x
23
kernel/common/regexp.rb
p
2
x
4
line
x
3
res
x
2
=~
M
1
n
n
x
2
=~
i
72
20
0
49
0
0
9
10
1
8
19
5
20
0
47
49
1
1
19
0
15
5
20
0
78
47
49
2
2
19
1
15
20
1
9
57
45
3
4
20
1
13
18
2
49
5
1
15
15
20
1
78
49
6
1
11
8
71
45
3
7
1
13
18
2
49
5
1
15
15
1
11
11
I
5
I
2
I
1
I
0
I
1
n
p
8
x
4
nil?
x
11
StringValue
x
10
match_from
x
6
Regexp
n
x
11
last_match=
x
5
begin
n
p
21
I
-1
I
ab
I
0
I
ad
I
13
I
0
I
14
I
af
I
1f
I
b0
I
23
I
b1
I
30
I
b2
I
39
I
b4
I
45
I
b5
I
47
I
0
I
48
x
23
kernel/common/regexp.rb
p
2
x
3
str
x
5
match
x
9
match_all
M
1
n
n
x
9
match_all
i
62
78
19
1
15
35
0
19
2
15
5
20
0
20
1
49
0
2
19
3
9
57
20
2
20
3
49
1
1
15
20
3
49
2
0
9
45
20
1
79
81
3
19
1
8
53
20
3
78
49
4
1
19
1
15
68
8
9
1
15
20
2
11
I
7
I
4
I
1
I
0
I
1
n
p
5
x
10
match_from
x
2
<<
x
11
collapsing?
x
1
+
x
3
end
p
21
I
-1
I
b9
I
0
I
ba
I
4
I
bb
I
9
I
bc
I
15
I
bd
I
1d
I
be
I
24
I
bf
I
2d
I
c1
I
35
I
0
I
3b
I
c4
I
3e
x
23
kernel/common/regexp.rb
p
4
x
3
str
x
5
start
x
3
arr
x
5
match
x
3
===
M
1
n
n
x
3
===
i
95
20
0
45
0
1
49
2
1
9
13
1
8
52
45
3
4
43
5
20
0
45
0
6
7
7
49
8
3
19
0
15
20
0
9
38
1
8
52
45
9
10
1
13
18
2
49
11
1
15
15
3
11
15
5
20
0
78
47
49
12
2
19
1
9
81
45
9
13
20
1
13
18
2
49
11
1
15
15
2
8
94
45
9
14
1
13
18
2
49
11
1
15
15
3
11
I
6
I
2
I
1
I
0
I
1
n
p
15
x
6
String
n
x
8
kind_of?
x
8
Rubinius
n
x
4
Type
n
x
6
to_str
x
11
try_convert
x
6
Regexp
n
x
11
last_match=
x
10
match_from
n
n
p
27
I
-1
I
c7
I
0
I
c9
I
d
I
ca
I
1f
I
cb
I
26
I
cc
I
32
I
cd
I
34
I
0
I
35
I
d1
I
41
I
d2
I
4e
I
d3
I
51
I
d5
I
5d
I
d6
I
5e
I
0
I
5f
x
23
kernel/common/regexp.rb
p
2
x
5
other
x
5
match
x
9
casefold?
M
1
n
n
x
9
casefold?
i
19
5
48
0
45
1
2
49
3
1
78
85
4
9
17
2
8
18
3
11
I
2
I
0
I
0
I
0
I
0
n
p
5
x
7
options
x
10
IGNORECASE
n
x
1
&
x
1
>
p
7
I
-1
I
da
I
0
I
db
I
12
I
0
I
13
x
23
kernel/common/regexp.rb
p
0
x
4
eql?
M
1
n
n
x
4
eql?
i
107
20
0
45
0
1
49
2
1
9
13
1
8
15
3
11
15
5
48
3
20
0
49
3
0
83
4
9
31
1
8
33
3
11
15
5
48
5
19
1
15
20
1
45
6
7
49
8
1
78
83
4
9
64
20
1
45
9
10
81
11
19
1
8
65
1
15
20
0
49
5
0
19
2
15
20
2
45
6
12
49
8
1
78
83
4
9
98
20
2
45
9
13
81
11
19
2
8
99
1
15
20
1
20
2
83
4
11
I
5
I
3
I
1
I
0
I
1
n
p
14
x
6
Regexp
n
x
8
kind_of?
x
6
source
x
2
==
x
7
options
x
10
KCODE_MASK
n
x
1
&
x
10
KCODE_NONE
n
x
1
+
n
n
p
33
I
-1
I
de
I
0
I
df
I
f
I
0
I
10
I
e0
I
21
I
0
I
22
I
e3
I
28
I
e4
I
35
I
e5
I
40
I
e4
I
41
I
0
I
42
I
e8
I
4a
I
e9
I
57
I
ea
I
62
I
e9
I
63
I
0
I
64
I
ed
I
6b
x
23
kernel/common/regexp.rb
p
3
x
5
other
x
2
o1
x
2
o2
x
2
==
x
12
alias_method
x
4
hash
M
1
n
n
x
4
hash
i
73
7
0
64
5
48
1
49
2
1
7
0
64
49
2
1
5
5
48
3
47
49
4
1
49
2
1
19
0
15
5
48
3
45
5
6
49
7
1
78
83
8
9
53
20
0
7
9
64
49
2
1
8
66
20
0
5
48
10
78
79
49
11
2
49
2
1
15
20
0
49
12
0
11
I
5
I
1
I
0
I
0
I
0
n
p
13
s
1
/
x
6
source
x
2
<<
x
7
options
x
16
option_to_string
x
10
KCODE_MASK
n
x
1
&
x
2
==
s
1
n
x
5
kcode
x
2
[]
x
4
hash
p
15
I
-1
I
f2
I
0
I
f3
I
1d
I
f4
I
2b
I
f5
I
35
I
f7
I
42
I
0
I
43
I
f9
I
49
x
23
kernel/common/regexp.rb
p
1
x
3
str
x
7
inspect
M
1
n
n
x
7
inspect
i
103
5
48
0
7
1
13
70
9
21
15
44
43
2
7
3
78
49
4
2
6
1
56
5
50
6
1
19
0
15
7
7
20
0
47
101
8
7
7
5
5
48
9
47
49
10
1
47
101
8
63
4
19
1
15
5
47
49
11
0
19
2
15
20
2
13
9
81
15
20
2
7
12
64
83
13
10
80
2
8
81
3
9
97
20
1
20
2
78
79
49
14
2
49
15
1
8
98
1
15
20
1
11
11
I
8
I
3
I
0
I
0
I
0
n
p
16
x
6
source
n
x
6
Regexp
s
7
(\\.)|/
x
3
new
M
1
p
2
x
9
for_block
t
n
x
7
inspect
i
14
4
5
78
98
0
2
13
10
13
15
7
1
64
11
I
3
I
0
I
0
I
0
I
0
I
-2
p
2
x
24
regexp_last_match_result
s
2
\/
p
3
I
0
I
fe
I
e
x
23
kernel/common/regexp.rb
p
0
x
4
gsub
s
1
/
x
4
to_s
x
7
options
x
16
option_to_string
x
5
kcode
s
4
none
x
2
==
x
2
[]
x
2
<<
p
15
I
-1
I
fc
I
0
I
fe
I
1d
I
100
I
36
I
101
I
3e
I
102
I
62
I
0
I
63
I
103
I
67
x
23
kernel/common/regexp.rb
p
3
x
6
escape
x
3
str
x
1
k
x
5
kcode
M
1
n
n
x
5
kcode
i
83
5
48
0
45
1
2
49
3
1
19
0
15
20
0
45
4
5
83
6
9
27
7
7
64
11
8
28
1
15
20
0
45
8
9
83
6
9
44
7
10
64
11
8
45
1
15
20
0
45
11
12
83
6
9
61
7
13
64
11
8
62
1
15
20
0
45
14
15
83
6
9
78
7
16
64
11
8
79
1
15
1
11
11
I
3
I
1
I
0
I
0
I
0
n
p
17
x
7
options
x
10
KCODE_MASK
n
x
1
&
x
10
KCODE_NONE
n
x
2
==
s
4
none
x
9
KCODE_EUC
n
s
3
euc
x
10
KCODE_SJIS
n
s
4
sjis
x
10
KCODE_UTF8
n
s
4
utf8
p
23
I
-1
I
106
I
0
I
107
I
c
I
108
I
1c
I
0
I
1d
I
109
I
2d
I
0
I
2e
I
10a
I
3e
I
0
I
3f
I
10b
I
4f
I
0
I
50
I
10c
I
53
x
23
kernel/common/regexp.rb
p
1
x
4
lang
x
5
match
M
1
n
n
x
5
match
i
57
20
0
9
7
1
8
21
45
0
1
1
13
18
2
49
2
1
15
15
1
11
15
5
20
0
47
49
3
1
19
0
15
45
0
4
5
20
0
78
20
0
49
5
0
2
47
49
6
4
13
18
2
49
2
1
15
11
I
7
I
1
I
1
I
0
I
1
n
p
7
x
6
Regexp
n
x
11
last_match=
x
11
StringValue
n
x
4
size
x
13
search_region
p
15
I
-1
I
110
I
0
I
111
I
7
I
112
I
13
I
113
I
15
I
0
I
16
I
116
I
20
I
118
I
39
x
23
kernel/common/regexp.rb
p
1
x
3
str
x
10
match_from
M
1
n
n
x
10
match_from
i
26
20
0
9
7
1
8
9
1
11
15
5
20
0
20
1
20
0
49
0
0
2
47
49
1
4
11
I
7
I
2
I
2
I
0
I
2
n
p
2
x
4
size
x
13
search_region
p
9
I
-1
I
11b
I
0
I
11c
I
9
I
0
I
a
I
11d
I
1a
x
23
kernel/common/regexp.rb
p
2
x
3
str
x
5
count
x
12
SourceParser
x
10
open_class
x
14
__class_init__
M
1
n
n
x
12
SourceParser
i
344
5
66
99
7
0
1
65
49
1
3
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
15
99
7
5
45
0
6
65
49
1
3
13
99
12
7
2
12
7
7
12
65
12
49
4
4
15
49
2
0
15
99
7
8
45
0
9
65
49
1
3
13
99
12
7
2
12
7
10
12
65
12
49
4
4
15
49
2
0
15
99
7
11
7
12
65
67
49
13
0
49
14
4
15
99
7
15
7
16
65
67
49
13
0
49
14
4
15
99
7
17
7
18
65
67
49
13
0
49
14
4
15
99
7
19
7
20
65
67
49
13
0
49
14
4
15
99
7
21
7
22
65
67
49
13
0
49
14
4
15
99
7
23
7
24
65
67
49
13
0
49
14
4
15
99
7
25
7
26
65
67
49
13
0
49
14
4
15
99
7
27
7
28
65
67
49
13
0
49
14
4
15
99
7
29
7
30
65
67
49
13
0
49
14
4
15
99
7
31
7
32
65
67
49
13
0
49
14
4
15
99
7
33
7
34
65
67
49
13
0
49
14
4
15
99
7
35
7
36
65
67
49
13
0
49
14
4
15
99
7
37
7
38
65
67
49
13
0
49
14
4
15
99
7
39
7
40
65
67
49
13
0
49
14
4
15
99
7
41
7
42
65
67
49
13
0
49
14
4
15
65
7
43
45
44
45
7
46
64
35
2
45
47
48
7
49
64
35
2
45
50
51
7
52
64
35
2
35
3
49
53
2
15
99
7
54
7
55
65
67
49
13
0
49
14
4
11
I
6
I
0
I
0
I
0
I
0
n
p
56
x
4
Part
x
10
open_class
x
14
__class_init__
M
1
n
n
x
4
Part
i
170
5
66
65
7
0
44
43
1
4
3
49
2
1
13
7
3
64
45
4
5
43
6
49
7
2
15
13
7
8
64
45
4
9
43
10
49
7
2
15
13
7
11
64
45
4
12
43
13
49
7
2
15
49
14
2
15
5
7
15
47
49
16
1
15
5
7
17
47
49
16
1
15
99
7
18
7
19
65
67
49
20
0
49
21
4
15
99
7
22
7
23
65
67
49
20
0
49
21
4
15
99
7
24
7
25
65
67
49
20
0
49
21
4
15
99
7
26
7
27
65
67
49
20
0
49
21
4
15
99
7
28
7
29
65
67
49
20
0
49
21
4
15
99
7
30
7
31
65
67
49
20
0
49
21
4
15
99
7
32
7
33
65
67
49
20
0
49
21
4
11
I
6
I
0
I
0
I
0
I
0
n
p
34
x
11
OPTIONS_MAP
x
4
Hash
x
16
new_from_literal
s
1
m
x
6
Regexp
n
x
9
MULTILINE
x
3
[]=
s
1
i
n
x
10
IGNORECASE
s
1
x
n
x
8
EXTENDED
x
9
const_set
x
7
options
x
13
attr_accessor
x
6
source
x
10
initialize
M
1
n
n
x
10
initialize
i
25
23
0
10
10
7
0
64
19
0
15
20
0
38
1
15
35
0
38
2
15
35
0
38
3
11
I
2
I
1
I
0
I
0
I
1
n
p
4
s
0

x
7
@source
x
8
@options
x
16
@negated_options
p
9
I
-1
I
12b
I
a
I
12c
I
f
I
12d
I
14
I
12e
I
19
x
23
kernel/common/regexp.rb
p
1
x
6
source
x
17
method_visibility
x
15
add_defn_method
x
2
<<
M
1
n
n
x
2
<<
i
8
39
0
20
0
49
1
1
11
I
3
I
1
I
1
I
0
I
1
n
p
2
x
7
@source
x
2
<<
p
5
I
-1
I
131
I
0
I
132
I
8
x
23
kernel/common/regexp.rb
p
1
x
3
str
x
6
empty?
M
1
n
n
x
6
empty?
i
6
39
0
49
1
0
11
I
1
I
0
I
0
I
0
I
0
n
p
2
x
7
@source
x
6
empty?
p
5
I
-1
I
135
I
0
I
136
I
6
x
23
kernel/common/regexp.rb
p
0
x
7
flatten
M
1
n
n
x
7
flatten
i
2
1
11
I
1
I
0
I
0
I
0
I
0
n
p
0
p
5
I
-1
I
139
I
0
I
13a
I
2
x
23
kernel/common/regexp.rb
p
0
x
4
to_s
M
1
n
n
x
4
to_s
i
27
5
48
0
7
1
13
70
9
21
15
44
43
2
7
3
78
49
4
2
6
1
56
5
50
6
1
11
I
4
I
0
I
0
I
0
I
0
n
p
7
x
6
source
n
x
6
Regexp
s
7
(\\.)|/
x
3
new
M
1
p
2
x
9
for_block
t
n
x
4
to_s
i
14
4
5
78
98
0
2
13
10
13
15
7
1
64
11
I
3
I
0
I
0
I
0
I
0
I
-2
p
2
x
24
regexp_last_match_result
s
2
\/
p
3
I
0
I
13f
I
e
x
23
kernel/common/regexp.rb
p
0
x
4
gsub
p
5
I
-1
I
13c
I
0
I
13f
I
1b
x
23
kernel/common/regexp.rb
p
0
x
12
has_options!
M
1
n
n
x
12
has_options!
i
4
2
38
0
11
I
1
I
0
I
0
I
0
I
0
n
p
1
x
12
@has_options
p
5
I
-1
I
142
I
0
I
143
I
4
x
23
kernel/common/regexp.rb
p
0
x
12
has_options?
M
1
n
n
x
12
has_options?
i
3
39
0
11
I
1
I
0
I
0
I
0
I
0
n
p
1
x
12
@has_options
p
5
I
-1
I
146
I
0
I
147
I
3
x
23
kernel/common/regexp.rb
p
0
p
29
I
2
I
122
I
5
I
126
I
e
I
123
I
1b
I
124
I
28
I
125
I
38
I
128
I
40
I
129
I
48
I
12b
I
56
I
131
I
64
I
135
I
72
I
139
I
80
I
13c
I
8e
I
142
I
9c
I
146
I
aa
x
23
kernel/common/regexp.rb
p
0
x
13
attach_method
x
16
OptionsGroupPart
n
M
1
n
n
x
16
OptionsGroupPart
i
80
5
66
99
7
0
7
1
65
67
49
2
0
49
3
4
15
99
7
4
7
5
65
67
49
2
0
49
3
4
15
99
7
6
7
7
65
67
49
2
0
49
3
4
15
99
7
8
7
9
65
67
49
2
0
49
3
4
15
99
7
10
7
11
65
67
49
2
0
49
3
4
15
5
7
10
47
49
12
1
11
I
5
I
0
I
0
I
0
I
0
n
p
13
x
4
to_s
M
1
n
n
x
4
to_s
i
33
39
0
9
14
5
48
1
47
101
2
63
1
8
32
7
3
5
48
4
47
101
2
5
48
1
47
101
2
7
5
63
4
11
I
4
I
0
I
0
I
0
I
0
n
p
6
x
8
@flatten
x
6
source
x
4
to_s
s
1
(
x
14
options_string
s
1
)
p
7
I
-1
I
14c
I
0
I
14d
I
20
I
0
I
21
x
23
kernel/common/regexp.rb
p
0
x
17
method_visibility
x
15
add_defn_method
x
12
push_option!
M
1
n
n
x
12
push_option!
i
8
39
0
20
0
49
1
1
11
I
3
I
1
I
1
I
0
I
1
n
p
2
x
8
@options
x
2
<<
p
5
I
-1
I
150
I
0
I
151
I
8
x
23
kernel/common/regexp.rb
p
1
x
10
identifier
x
20
push_negated_option!
M
1
n
n
x
20
push_negated_option!
i
8
39
0
20
0
49
1
1
11
I
3
I
1
I
1
I
0
I
1
n
p
2
x
16
@negated_options
x
2
<<
p
5
I
-1
I
154
I
0
I
155
I
8
x
23
kernel/common/regexp.rb
p
1
x
10
identifier
x
7
flatten
M
1
n
n
x
7
flatten
i
4
2
38
0
11
I
1
I
0
I
0
I
0
I
0
n
p
1
x
8
@flatten
p
5
I
-1
I
158
I
0
I
159
I
4
x
23
kernel/common/regexp.rb
p
0
x
14
options_string
M
1
n
n
x
14
options_string
i
39
39
0
49
1
0
39
2
49
3
0
9
17
7
4
64
8
22
39
2
49
1
0
81
5
19
0
15
7
6
20
0
47
101
7
7
8
63
3
11
I
4
I
1
I
0
I
0
I
0
n
p
9
x
8
@options
x
4
join
x
16
@negated_options
x
6
empty?
s
0

x
1
+
s
1
?
x
4
to_s
s
1
:
p
11
I
-1
I
15c
I
0
I
15d
I
16
I
0
I
18
I
15d
I
1b
I
15e
I
27
x
23
kernel/common/regexp.rb
p
1
x
6
string
x
7
private
p
13
I
2
I
14c
I
10
I
150
I
1e
I
154
I
2c
I
158
I
3a
I
15c
I
48
I
160
I
50
x
23
kernel/common/regexp.rb
p
0
x
18
LookAheadGroupPart
n
M
1
n
n
x
18
LookAheadGroupPart
i
16
5
66
99
7
0
7
1
65
67
49
2
0
49
3
4
11
I
5
I
0
I
0
I
0
I
0
n
p
4
x
4
to_s
M
1
n
n
x
4
to_s
i
13
7
0
5
48
1
47
101
2
7
3
63
3
11
I
3
I
0
I
0
I
0
I
0
n
p
4
s
1
(
x
6
source
x
4
to_s
s
1
)
p
5
I
-1
I
164
I
0
I
165
I
d
x
23
kernel/common/regexp.rb
p
0
x
17
method_visibility
x
15
add_defn_method
p
3
I
2
I
164
I
10
x
23
kernel/common/regexp.rb
p
0
x
10
initialize
M
1
n
n
x
10
initialize
i
47
23
1
10
8
78
19
1
15
20
0
38
0
15
20
1
38
1
15
45
2
3
13
71
4
47
9
39
47
49
5
0
13
47
49
6
0
15
8
42
49
4
0
35
1
38
7
11
I
4
I
2
I
1
I
0
I
2
n
p
8
x
7
@source
x
8
@options
x
4
Part
n
x
3
new
x
8
allocate
x
10
initialize
x
6
@parts
p
9
I
-1
I
169
I
8
I
16a
I
d
I
16b
I
12
I
16c
I
2f
x
23
kernel/common/regexp.rb
p
2
x
6
source
x
7
options
x
17
method_visibility
x
15
add_defn_method
x
6
string
M
1
n
n
x
6
string
i
21
7
0
5
48
1
47
101
2
7
3
5
48
4
47
101
2
7
5
63
5
11
I
5
I
0
I
0
I
0
I
0
n
p
6
s
2
(?
x
14
options_string
x
4
to_s
s
1
:
x
12
parts_string
s
1
)
p
5
I
-1
I
170
I
0
I
171
I
15
x
23
kernel/common/regexp.rb
p
0
x
12
parts_string
M
1
n
n
x
12
parts_string
i
49
5
48
0
49
1
0
79
83
2
13
9
22
15
5
48
0
49
3
0
49
4
0
9
35
5
48
0
49
3
0
49
5
0
8
36
1
15
5
48
0
56
6
50
7
0
49
8
0
11
I
2
I
0
I
0
I
0
I
0
n
p
9
x
5
parts
x
4
size
x
2
==
x
5
first
x
12
has_options?
x
7
flatten
M
1
p
2
x
9
for_block
t
n
x
12
parts_string
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
0
I
1
n
p
1
x
4
to_s
p
3
I
0
I
178
I
a
x
23
kernel/common/regexp.rb
p
1
x
4
part
x
3
map
x
4
join
p
13
I
-1
I
174
I
0
I
175
I
18
I
176
I
23
I
175
I
24
I
0
I
25
I
178
I
31
x
23
kernel/common/regexp.rb
p
0
x
5
parts
M
1
n
n
x
5
parts
i
34
39
0
9
9
39
1
11
8
10
1
15
78
38
2
15
5
48
3
15
39
1
56
4
50
5
0
15
2
38
0
15
39
1
11
I
2
I
0
I
0
I
0
I
0
n
p
6
x
15
@already_parsed
x
6
@parts
x
6
@index
x
12
create_parts
M
1
p
2
x
9
for_block
t
n
x
5
parts
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
0
I
1
n
p
1
x
6
empty?
p
3
I
0
I
17f
I
a
x
23
kernel/common/regexp.rb
p
1
x
4
part
x
7
reject!
p
17
I
-1
I
17b
I
0
I
17c
I
a
I
0
I
b
I
17d
I
f
I
17e
I
13
I
17f
I
1b
I
180
I
1f
I
181
I
22
x
23
kernel/common/regexp.rb
p
0
x
12
create_parts
M
1
n
n
x
12
create_parts
i
104
39
0
39
1
49
2
0
84
3
9
14
1
8
16
1
11
15
39
1
39
0
49
4
1
49
5
0
19
0
15
20
0
13
7
6
64
12
49
7
1
9
93
15
39
0
79
81
8
19
1
15
20
1
39
1
49
2
0
84
3
13
9
79
15
39
1
20
1
49
4
1
49
5
0
7
9
64
83
10
9
86
5
48
11
8
91
5
47
49
12
0
8
99
15
5
47
49
12
0
15
5
48
13
11
I
5
I
2
I
0
I
0
I
0
n
p
14
x
6
@index
x
7
@source
x
4
size
x
1
<
x
2
[]
x
3
chr
s
1
(
x
3
===
x
1
+
s
1
?
x
2
==
x
13
process_group
x
23
push_current_character!
x
12
create_parts
p
29
I
-1
I
185
I
0
I
186
I
10
I
0
I
11
I
187
I
1e
I
188
I
20
I
189
I
2b
I
18a
I
33
I
18b
I
51
I
18c
I
56
I
18e
I
5b
I
0
I
5e
I
191
I
63
I
0
I
64
I
193
I
68
x
23
kernel/common/regexp.rb
p
2
x
4
char
x
3
idx
x
13
process_group
M
1
n
n
x
13
process_group
i
84
39
0
79
81
1
38
0
15
39
2
5
48
3
13
71
4
47
9
31
47
49
5
0
13
47
49
6
0
15
8
34
49
4
0
49
7
1
15
5
47
49
8
0
9
58
39
0
79
81
1
38
0
15
5
48
9
8
59
1
15
5
47
49
10
0
9
72
5
48
11
8
73
1
15
5
48
12
15
5
47
49
13
0
11
I
3
I
0
I
0
I
0
I
0
n
p
14
x
6
@index
x
1
+
x
6
@parts
x
16
group_part_class
x
3
new
x
8
allocate
x
10
initialize
x
2
<<
x
22
in_group_with_options?
x
21
process_group_options
x
19
in_lookahead_group?
x
18
process_look_ahead
x
28
process_until_group_finished
x
9
add_part!
p
25
I
-1
I
196
I
0
I
197
I
8
I
198
I
26
I
19a
I
2d
I
19b
I
35
I
19c
I
3a
I
19a
I
3b
I
0
I
3c
I
19f
I
49
I
0
I
4a
I
1a0
I
4e
I
1a1
I
54
x
23
kernel/common/regexp.rb
p
0
x
16
group_part_class
M
1
n
n
x
16
group_part_class
i
16
5
47
49
0
0
9
12
45
1
2
8
15
45
3
4
11
I
1
I
0
I
0
I
0
I
0
n
p
5
x
22
in_group_with_options?
x
16
OptionsGroupPart
n
x
18
LookAheadGroupPart
n
p
11
I
-1
I
1a4
I
0
I
1a5
I
7
I
1a6
I
c
I
1a8
I
f
I
0
I
10
x
23
kernel/common/regexp.rb
p
0
x
19
in_lookahead_group?
M
1
n
n
x
19
in_lookahead_group?
i
31
39
0
39
1
80
49
2
2
7
3
64
83
4
13
10
30
15
39
0
39
1
80
49
2
2
7
5
64
83
4
11
I
3
I
0
I
0
I
0
I
0
n
p
6
x
7
@source
x
6
@index
x
2
[]
s
2
?=
x
2
==
s
2
?!
p
5
I
-1
I
1ac
I
0
I
1ad
I
1f
x
23
kernel/common/regexp.rb
p
0
x
18
process_look_ahead
M
1
n
n
x
18
process_look_ahead
i
12
5
47
49
0
0
15
5
47
49
0
0
11
I
1
I
0
I
0
I
0
I
0
n
p
1
x
23
push_current_character!
p
7
I
-1
I
1b0
I
0
I
1b1
I
6
I
1b2
I
c
x
23
kernel/common/regexp.rb
p
0
x
22
in_group_with_options?
M
1
n
n
x
22
in_group_with_options?
i
44
39
0
39
1
79
49
2
2
7
3
64
83
4
9
18
1
8
20
3
11
15
39
0
44
43
5
39
1
79
81
6
77
49
7
2
49
2
1
56
8
50
9
0
11
I
4
I
0
I
0
I
0
I
0
n
p
10
x
7
@source
x
6
@index
x
2
[]
s
1
?
x
2
==
x
5
Range
x
1
+
x
3
new
M
1
p
2
x
9
for_block
t
n
x
22
in_group_with_options?
i
54
57
19
0
15
20
0
49
0
0
19
1
15
7
1
64
20
1
83
2
9
25
2
31
8
26
1
15
7
3
64
7
4
64
7
5
64
7
6
64
35
4
20
1
49
7
1
9
51
1
8
53
3
31
11
I
7
I
2
I
1
I
0
I
1
n
p
8
x
3
chr
s
1
:
x
2
==
s
1
m
s
1
i
s
1
x
s
1
-
x
8
include?
p
13
I
0
I
1b8
I
4
I
1b9
I
c
I
1ba
I
1a
I
0
I
1b
I
1bb
I
35
I
0
I
36
x
23
kernel/common/regexp.rb
p
2
x
1
b
x
1
c
x
9
each_byte
p
9
I
-1
I
1b5
I
0
I
1b6
I
14
I
0
I
15
I
1b8
I
2c
x
23
kernel/common/regexp.rb
p
0
x
21
process_group_options
M
1
n
n
x
21
process_group_options
i
68
39
0
49
1
0
49
2
0
15
39
3
39
4
49
5
1
49
6
0
13
7
7
64
12
49
8
1
9
34
15
1
11
8
67
13
7
9
64
12
49
8
1
9
57
15
39
4
79
81
10
38
4
15
1
11
8
67
15
5
47
49
11
0
15
5
48
12
11
I
3
I
0
I
0
I
0
I
0
n
p
13
x
6
@parts
x
4
last
x
12
has_options!
x
7
@source
x
6
@index
x
2
[]
x
3
chr
s
1
)
x
3
===
s
1
:
x
1
+
x
12
push_option!
x
21
process_group_options
p
23
I
-1
I
1bf
I
0
I
1c0
I
9
I
1c1
I
13
I
1c2
I
1e
I
1c3
I
22
I
1c4
I
2d
I
1c5
I
35
I
1c6
I
3a
I
1c8
I
40
I
1c9
I
43
I
0
I
44
x
23
kernel/common/regexp.rb
p
0
x
28
process_until_group_finished
M
1
n
n
x
28
process_until_group_finished
i
39
39
0
39
1
49
2
1
49
3
0
7
4
64
83
5
9
29
39
1
79
81
6
38
1
15
1
11
8
38
5
47
49
7
0
15
5
48
8
11
I
2
I
0
I
0
I
0
I
0
n
p
9
x
7
@source
x
6
@index
x
2
[]
x
3
chr
s
1
)
x
2
==
x
1
+
x
23
push_current_character!
x
28
process_until_group_finished
p
15
I
-1
I
1cd
I
0
I
1ce
I
11
I
1cf
I
19
I
1d0
I
1d
I
1d2
I
23
I
1d3
I
26
I
0
I
27
x
23
kernel/common/regexp.rb
p
0
x
23
push_current_character!
M
1
n
n
x
23
push_current_character!
i
27
39
0
49
1
0
39
2
39
3
49
4
1
49
5
0
49
6
1
15
39
3
79
81
7
38
3
11
I
3
I
0
I
0
I
0
I
0
n
p
8
x
6
@parts
x
4
last
x
7
@source
x
6
@index
x
2
[]
x
3
chr
x
2
<<
x
1
+
p
7
I
-1
I
1d7
I
0
I
1d8
I
13
I
1d9
I
1b
x
23
kernel/common/regexp.rb
p
0
x
12
push_option!
M
1
n
n
x
12
push_option!
i
27
39
0
49
1
0
39
2
39
3
49
4
1
49
5
0
49
6
1
15
39
3
79
81
7
38
3
11
I
3
I
0
I
0
I
0
I
0
n
p
8
x
6
@parts
x
4
last
x
7
@source
x
6
@index
x
2
[]
x
3
chr
x
12
push_option!
x
1
+
p
7
I
-1
I
1dc
I
0
I
1dd
I
13
I
1de
I
1b
x
23
kernel/common/regexp.rb
p
0
x
9
add_part!
M
1
n
n
x
9
add_part!
i
30
39
0
45
1
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
49
6
1
11
I
3
I
0
I
0
I
0
I
0
n
p
7
x
6
@parts
x
4
Part
n
x
3
new
x
8
allocate
x
10
initialize
x
2
<<
p
5
I
-1
I
1e1
I
0
I
1e2
I
1e
x
23
kernel/common/regexp.rb
p
0
x
15
PossibleOptions
x
9
MULTILINE
n
s
1
m
x
10
IGNORECASE
n
s
1
i
x
8
EXTENDED
n
s
1
x
x
9
const_set
x
14
options_string
M
1
n
n
x
14
options_string
i
98
35
0
19
0
15
45
0
1
19
1
15
20
1
56
2
50
3
0
15
5
48
4
49
5
0
79
83
6
9
46
20
0
5
48
4
49
7
0
49
8
0
49
9
1
8
47
1
15
20
1
56
10
50
11
0
56
12
50
13
0
19
2
15
20
0
19
3
15
20
2
49
14
0
9
78
1
8
91
20
3
7
15
64
49
16
1
20
2
49
16
1
15
20
3
49
17
0
11
I
6
I
4
I
0
I
0
I
0
n
p
18
x
15
PossibleOptions
n
M
1
p
2
x
9
for_block
t
n
x
14
options_string
i
34
58
37
19
0
15
37
19
1
15
15
39
0
20
0
49
1
1
78
85
2
9
32
21
1
0
20
1
49
3
1
8
33
1
11
I
5
I
2
I
2
I
0
I
2
n
p
4
x
8
@options
x
1
&
x
1
>
x
2
<<
p
7
I
0
I
1e9
I
a
I
1ea
I
21
I
0
I
22
x
23
kernel/common/regexp.rb
p
2
x
4
flag
x
10
identifier
x
4
each
x
5
parts
x
4
size
x
2
==
x
5
first
x
7
options
x
6
concat
M
1
p
2
x
9
for_block
t
n
x
14
options_string
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
0
I
1
n
p
1
x
4
last
p
3
I
0
I
1f1
I
a
x
23
kernel/common/regexp.rb
p
1
x
1
e
x
3
map
M
1
p
2
x
9
for_block
t
n
x
14
options_string
i
19
57
19
0
15
21
1
0
20
0
49
0
1
10
17
2
8
18
3
11
I
4
I
1
I
1
I
0
I
1
n
p
1
x
8
include?
p
5
I
0
I
1f1
I
4
I
1f2
I
13
x
23
kernel/common/regexp.rb
p
1
x
10
identifier
x
6
select
x
6
empty?
s
1
-
x
2
<<
x
4
join
p
29
I
-1
I
1e6
I
0
I
1e7
I
5
I
1e8
I
b
I
1e9
I
13
I
1ed
I
1e
I
1ee
I
2e
I
1ed
I
2f
I
0
I
30
I
1f1
I
3f
I
1f5
I
44
I
1f6
I
4e
I
1f7
I
5b
I
0
I
5c
I
1f9
I
62
x
23
kernel/common/regexp.rb
p
4
x
14
chosen_options
x
16
possible_options
x
16
excluded_options
x
17
options_to_return
p
41
I
2
I
121
I
1d
I
14b
I
3a
I
163
I
57
I
169
I
65
I
170
I
73
I
174
I
81
I
17b
I
8f
I
185
I
9d
I
196
I
ab
I
1a4
I
b9
I
1ac
I
c7
I
1b0
I
d5
I
1b5
I
e3
I
1bf
I
f1
I
1cd
I
ff
I
1d7
I
10d
I
1dc
I
11b
I
1e1
I
129
I
1e5
I
14a
I
1e6
I
158
x
23
kernel/common/regexp.rb
p
0
x
4
to_s
M
1
n
n
x
4
to_s
i
40
45
0
1
13
71
2
47
9
27
47
49
3
0
13
5
48
4
5
48
5
47
49
6
2
15
8
36
5
48
4
5
48
5
49
2
2
49
7
0
11
I
4
I
0
I
0
I
0
I
0
n
p
8
x
12
SourceParser
n
x
3
new
x
8
allocate
x
6
source
x
7
options
x
10
initialize
x
6
string
p
5
I
-1
I
1fe
I
0
I
1ff
I
28
x
23
kernel/common/regexp.rb
p
0
x
16
option_to_string
M
1
n
n
x
16
option_to_string
i
84
7
0
64
19
1
15
20
0
45
1
2
49
3
1
78
85
4
9
29
20
1
7
5
64
49
6
1
8
30
1
15
20
0
45
7
8
49
3
1
78
85
4
9
54
20
1
7
9
64
49
6
1
8
55
1
15
20
0
45
10
11
49
3
1
78
85
4
9
79
20
1
7
12
64
49
6
1
8
80
1
15
20
1
11
I
4
I
2
I
1
I
0
I
1
n
p
13
s
0

x
9
MULTILINE
n
x
1
&
x
1
>
s
1
m
x
2
<<
x
10
IGNORECASE
n
s
1
i
x
8
EXTENDED
n
s
1
x
p
19
I
-1
I
202
I
0
I
203
I
6
I
204
I
1e
I
0
I
1f
I
205
I
37
I
0
I
38
I
206
I
50
I
0
I
51
I
207
I
54
x
23
kernel/common/regexp.rb
p
2
x
6
option
x
6
string
x
10
name_table
M
1
n
n
x
10
name_table
i
3
39
0
11
I
1
I
0
I
0
I
0
I
0
n
p
1
x
6
@names
p
5
I
-1
I
20a
I
0
I
20b
I
3
x
23
kernel/common/regexp.rb
p
0
x
14
named_captures
M
1
n
n
x
14
named_captures
i
29
44
43
0
78
49
1
1
19
0
15
39
2
9
23
39
2
56
3
50
4
0
8
24
1
15
20
0
11
11
I
3
I
1
I
0
I
0
I
0
n
p
5
x
4
Hash
x
16
new_from_literal
x
6
@names
M
1
p
2
x
9
for_block
t
n
x
14
named_captures
i
33
58
37
19
0
15
37
19
1
15
15
21
1
0
20
0
49
0
0
20
1
79
81
1
35
1
13
18
3
49
2
2
15
11
I
7
I
2
I
2
I
0
I
2
n
p
3
x
4
to_s
x
1
+
x
3
[]=
p
5
I
0
I
227
I
a
I
228
I
21
x
23
kernel/common/regexp.rb
p
2
x
1
k
x
1
v
x
4
each
p
15
I
-1
I
223
I
0
I
224
I
a
I
226
I
e
I
227
I
17
I
226
I
18
I
0
I
19
I
22c
I
1d
x
23
kernel/common/regexp.rb
p
1
x
4
hash
x
5
names
M
1
n
n
x
5
names
i
57
39
0
9
54
45
1
2
13
71
3
47
9
30
47
49
4
0
13
39
0
49
5
0
47
49
6
1
15
8
38
39
0
49
5
0
49
3
1
19
0
15
39
0
56
7
50
8
0
15
20
0
11
8
56
35
0
11
I
4
I
1
I
0
I
0
I
0
n
p
9
x
6
@names
x
5
Array
n
x
3
new
x
8
allocate
x
4
size
x
10
initialize
M
1
p
2
x
9
for_block
t
n
x
5
names
i
28
58
37
19
0
15
37
19
1
15
15
21
1
0
20
1
20
0
49
0
0
13
18
3
49
1
2
15
11
I
7
I
2
I
2
I
0
I
2
n
p
2
x
4
to_s
x
3
[]=
p
5
I
0
I
241
I
a
I
242
I
1c
x
23
kernel/common/regexp.rb
p
2
x
1
k
x
1
v
x
4
each
p
15
I
-1
I
23e
I
0
I
23f
I
4
I
240
I
29
I
241
I
31
I
245
I
36
I
247
I
38
I
0
I
39
x
23
kernel/common/regexp.rb
p
1
x
3
ary
p
133
I
2
I
2
I
13
I
3
I
24
I
5
I
2c
I
6
I
34
I
7
I
3d
I
8
I
46
I
9
I
4f
I
a
I
71
I
c
I
79
I
d
I
82
I
e
I
8b
I
f
I
94
I
10
I
9d
I
11
I
a6
I
13
I
cb
I
16
I
cf
I
17
I
d7
I
18
I
e9
I
19
I
f4
I
0
I
f6
I
1e
I
106
I
1f
I
116
I
20
I
126
I
21
I
136
I
22
I
146
I
23
I
156
I
24
I
166
I
25
I
176
I
26
I
186
I
27
I
196
I
28
I
1a6
I
29
I
1b6
I
2a
I
1c6
I
2b
I
1d6
I
2c
I
1e6
I
2d
I
1f6
I
2e
I
206
I
2f
I
216
I
30
I
226
I
31
I
236
I
32
I
246
I
33
I
256
I
4d
I
264
I
62
I
26f
I
66
I
28b
I
6b
I
299
I
6f
I
2a4
I
98
I
2b2
I
9c
I
2c0
I
ab
I
2ce
I
b9
I
2dc
I
c7
I
2ea
I
da
I
2f8
I
de
I
306
I
f0
I
310
I
f2
I
31e
I
fc
I
32c
I
106
I
33a
I
110
I
348
I
11b
I
356
I
120
I
371
I
1fe
I
37f
I
202
I
38d
I
20a
I
39b
I
223
I
3a9
I
23e
I
3b7
x
23
kernel/common/regexp.rb
p
1
x
1
i
x
13
attach_method
x
9
MatchData
M
1
n
n
x
9
MatchData
i
340
5
66
99
7
0
7
1
65
67
49
2
0
49
3
4
15
99
7
4
7
5
65
67
49
2
0
49
3
4
15
99
7
6
7
7
65
67
49
2
0
49
3
4
15
99
7
8
7
9
65
67
49
2
0
49
3
4
15
99
7
10
7
11
65
67
49
2
0
49
3
4
15
99
7
12
7
13
65
67
49
2
0
49
3
4
15
99
7
14
7
15
65
67
49
2
0
49
3
4
15
99
7
16
7
17
65
67
49
2
0
49
3
4
15
99
7
18
7
19
65
67
49
2
0
49
3
4
15
99
7
20
7
21
65
67
49
2
0
49
3
4
15
99
7
22
7
23
65
67
49
2
0
49
3
4
15
99
7
24
7
25
65
67
49
2
0
49
3
4
15
99
7
26
7
27
65
67
49
2
0
49
3
4
15
99
7
28
7
29
65
67
49
2
0
49
3
4
15
99
7
30
7
31
65
67
49
2
0
49
3
4
15
99
7
32
7
33
65
67
49
2
0
49
3
4
15
5
7
34
7
14
47
49
35
2
15
99
7
36
7
37
65
67
49
2
0
49
3
4
15
99
7
38
7
39
65
67
49
2
0
49
3
4
15
99
7
40
7
41
65
67
49
2
0
49
3
4
15
5
7
42
7
40
47
49
35
2
15
5
7
40
47
49
43
1
15
99
7
44
7
45
65
67
49
2
0
49
3
4
15
5
7
44
47
49
43
1
15
99
7
46
7
47
65
67
49
2
0
49
3
4
15
5
7
46
47
49
43
1
11
I
5
I
0
I
0
I
0
I
0
n
p
48
x
6
string
M
1
n
n
x
6
string
i
9
39
0
49
1
0
49
2
0
11
I
1
I
0
I
0
I
0
I
0
n
p
3
x
7
@source
x
3
dup
x
6
freeze
p
5
I
-1
I
24e
I
0
I
24f
I
9
x
23
kernel/common/regexp.rb
p
0
x
17
method_visibility
x
15
add_defn_method
x
6
source
M
1
n
n
x
6
source
i
3
39
0
11
I
1
I
0
I
0
I
0
I
0
n
p
1
x
7
@source
p
5
I
-1
I
252
I
0
I
253
I
3
x
23
kernel/common/regexp.rb
p
0
x
4
full
M
1
n
n
x
4
full
i
3
39
0
11
I
1
I
0
I
0
I
0
I
0
n
p
1
x
5
@full
p
5
I
-1
I
256
I
0
I
257
I
3
x
23
kernel/common/regexp.rb
p
0
x
5
begin
M
1
n
n
x
5
begin
i
34
20
0
78
83
0
9
16
39
1
78
49
2
1
11
8
17
1
15
39
3
20
0
79
82
4
49
2
1
78
49
2
1
11
11
I
4
I
1
I
1
I
0
I
1
n
p
5
x
2
==
x
5
@full
x
2
at
x
7
@region
x
1
-
p
9
I
-1
I
25a
I
0
I
25b
I
11
I
0
I
12
I
25c
I
22
x
23
kernel/common/regexp.rb
p
1
x
3
idx
x
3
end
M
1
n
n
x
3
end
i
33
20
0
78
83
0
9
16
39
1
79
49
2
1
11
8
17
1
15
39
3
20
0
79
82
4
49
2
1
79
49
2
1
11
I
4
I
1
I
1
I
0
I
1
n
p
5
x
2
==
x
5
@full
x
2
at
x
7
@region
x
1
-
p
9
I
-1
I
25f
I
0
I
260
I
11
I
0
I
12
I
261
I
21
x
23
kernel/common/regexp.rb
p
1
x
3
idx
x
6
offset
M
1
n
n
x
6
offset
i
33
35
0
19
1
15
20
1
5
20
0
49
0
1
49
1
1
15
20
1
5
20
0
49
2
1
49
1
1
15
20
1
11
11
I
5
I
2
I
1
I
0
I
1
n
p
3
x
5
begin
x
2
<<
x
3
end
p
11
I
-1
I
264
I
0
I
265
I
5
I
266
I
11
I
267
I
1d
I
268
I
21
x
23
kernel/common/regexp.rb
p
2
x
3
idx
x
3
out
x
6
length
M
1
n
n
x
6
length
i
9
39
0
49
1
0
79
81
2
11
I
2
I
0
I
0
I
0
I
0
n
p
3
x
7
@region
x
6
fields
x
1
+
p
5
I
-1
I
26b
I
0
I
26c
I
9
x
23
kernel/common/regexp.rb
p
0
x
8
captures
M
1
n
n
x
8
captures
i
53
45
0
1
13
71
2
47
9
26
47
49
3
0
13
39
4
49
5
0
47
49
6
1
15
8
34
39
4
49
5
0
49
2
1
19
0
15
78
19
1
15
39
4
56
7
50
8
0
15
20
0
11
11
I
5
I
2
I
0
I
0
I
0
n
p
9
x
5
Array
n
x
3
new
x
8
allocate
x
7
@region
x
6
fields
x
10
initialize
M
1
p
2
x
9
for_block
t
n
x
8
captures
i
76
57
19
0
15
20
0
78
49
0
1
19
1
15
20
1
77
83
1
9
25
1
19
2
8
49
20
0
79
49
0
1
19
3
15
39
2
20
1
20
3
20
1
82
3
49
4
2
19
2
15
21
1
0
21
1
1
20
2
13
18
3
49
5
2
15
15
21
1
1
79
81
6
22
1
1
11
I
9
I
4
I
1
I
0
I
1
n
p
7
x
2
at
x
2
==
x
7
@source
x
1
-
x
9
substring
x
3
[]=
x
1
+
p
19
I
0
I
273
I
4
I
274
I
d
I
276
I
14
I
277
I
19
I
279
I
22
I
27a
I
31
I
0
I
32
I
27d
I
42
I
27e
I
4c
x
23
kernel/common/regexp.rb
p
4
x
3
tup
x
1
x
x
3
val
x
1
y
x
4
each
p
11
I
-1
I
26f
I
0
I
270
I
25
I
272
I
29
I
273
I
31
I
281
I
35
x
23
kernel/common/regexp.rb
p
2
x
3
out
x
3
idx
x
5
names
M
1
n
n
x
5
names
i
6
39
0
49
1
0
11
I
1
I
0
I
0
I
0
I
0
n
p
2
x
7
@regexp
x
5
names
p
5
I
-1
I
284
I
0
I
285
I
6
x
23
kernel/common/regexp.rb
p
0
x
9
pre_match
M
1
n
n
x
9
pre_match
i
47
39
0
78
49
1
1
78
83
2
9
21
39
3
78
78
49
4
2
11
8
22
1
15
39
0
78
49
1
1
79
82
5
19
0
15
39
3
78
20
0
79
81
6
49
4
2
11
I
5
I
1
I
0
I
0
I
0
n
p
7
x
5
@full
x
2
at
x
2
==
x
7
@source
x
9
substring
x
1
-
x
1
+
p
11
I
-1
I
288
I
0
I
289
I
16
I
0
I
17
I
28a
I
23
I
28b
I
2f
x
23
kernel/common/regexp.rb
p
1
x
2
nd
x
14
pre_match_from
M
1
n
n
x
14
pre_match_from
i
52
39
0
78
49
1
1
78
83
2
9
21
39
3
78
78
49
4
2
11
8
22
1
15
39
0
78
49
1
1
79
82
5
19
1
15
39
3
20
0
20
1
20
0
82
5
79
81
6
49
4
2
11
I
6
I
2
I
1
I
0
I
1
n
p
7
x
5
@full
x
2
at
x
2
==
x
7
@source
x
9
substring
x
1
-
x
1
+
p
11
I
-1
I
28e
I
0
I
28f
I
16
I
0
I
17
I
290
I
23
I
291
I
34
x
23
kernel/common/regexp.rb
p
2
x
3
idx
x
2
nd
x
11
collapsing?
M
1
n
n
x
11
collapsing?
i
15
39
0
78
49
1
1
39
0
79
49
1
1
83
2
11
I
3
I
0
I
0
I
0
I
0
n
p
3
x
5
@full
x
2
[]
x
2
==
p
5
I
-1
I
294
I
0
I
295
I
f
x
23
kernel/common/regexp.rb
p
0
x
10
post_match
M
1
n
n
x
10
post_match
i
37
39
0
49
1
0
79
82
2
19
0
15
39
3
79
49
4
1
19
1
15
39
0
20
1
20
0
20
1
82
2
79
81
5
49
6
2
11
I
6
I
2
I
0
I
0
I
0
n
p
7
x
7
@source
x
4
size
x
1
-
x
5
@full
x
2
at
x
1
+
x
9
substring
p
9
I
-1
I
298
I
0
I
299
I
b
I
29a
I
14
I
29b
I
25
x
23
kernel/common/regexp.rb
p
2
x
2
nd
x
2
st
x
2
[]
M
1
n
n
x
2
[]
i
295
23
1
10
8
1
19
1
15
20
1
9
25
5
48
0
20
0
20
1
49
1
2
11
8
26
1
15
20
0
13
45
2
3
12
49
4
1
9
151
15
20
0
78
49
5
1
9
76
20
0
78
83
6
9
63
5
47
49
7
0
11
8
64
1
15
5
48
0
20
0
49
1
1
11
8
149
20
0
39
8
49
9
0
49
5
1
9
148
39
8
20
0
79
82
10
49
1
1
19
2
15
20
2
78
49
11
1
19
3
15
20
3
77
83
6
9
121
1
11
8
122
1
15
20
2
79
49
11
1
19
4
15
39
12
20
3
20
4
20
3
82
10
49
13
2
11
8
149
1
8
284
13
45
14
15
12
49
4
1
9
215
15
39
16
49
17
0
20
0
49
1
1
19
5
15
20
5
9
182
1
8
201
5
45
18
19
7
20
20
0
47
101
21
7
22
63
3
47
49
23
2
15
5
20
5
79
81
24
47
49
1
1
11
8
284
13
45
25
26
12
49
4
1
9
282
15
39
16
49
17
0
20
0
49
27
0
49
1
1
19
5
15
20
5
9
249
1
8
268
5
45
18
28
7
20
20
0
47
101
21
7
22
63
3
47
49
23
2
15
5
20
5
79
81
24
47
49
1
1
11
8
284
15
1
15
5
48
0
20
0
49
1
1
11
11
I
b
I
6
I
1
I
0
I
2
n
p
29
x
4
to_a
x
2
[]
x
6
Fixnum
n
x
3
===
x
2
<=
x
2
==
x
12
matched_area
x
7
@region
x
4
size
x
1
-
x
2
at
x
7
@source
x
9
substring
x
6
Symbol
n
x
7
@regexp
x
10
name_table
x
13
ArgumentError
n
s
21
Unknown named group '
x
4
to_s
s
1
'
x
5
raise
x
1
+
x
6
String
n
x
6
to_sym
n
p
63
I
-1
I
29e
I
8
I
29f
I
1a
I
0
I
1b
I
2a1
I
1d
I
2a2
I
28
I
2a3
I
30
I
2a4
I
40
I
0
I
41
I
2a5
I
4c
I
2a6
I
58
I
2a7
I
65
I
2a9
I
6e
I
2aa
I
7a
I
0
I
7b
I
2ac
I
84
I
2ad
I
94
I
2a6
I
95
I
0
I
97
I
2af
I
a2
I
2b0
I
af
I
2b1
I
c9
I
0
I
ca
I
2b2
I
d7
I
2b3
I
e2
I
2b4
I
f2
I
2b5
I
10c
I
0
I
10d
I
2b6
I
11b
I
2a1
I
11c
I
0
I
11d
I
2b9
I
127
x
23
kernel/common/regexp.rb
p
6
x
3
idx
x
3
len
x
3
tup
x
1
x
x
1
y
x
3
num
x
7
inspect
M
1
n
n
x
7
inspect
i
65
5
48
0
19
0
15
20
0
49
1
0
9
27
7
2
5
48
3
47
101
4
7
5
63
3
8
64
78
19
1
15
20
0
56
6
50
7
0
15
7
2
5
48
3
47
101
4
7
8
20
0
7
9
64
49
10
1
47
101
4
7
11
63
5
11
I
7
I
2
I
0
I
0
I
0
n
p
12
x
8
captures
x
6
empty?
s
13
#<MatchData "
x
12
matched_area
x
4
to_s
s
2
">
M
1
p
2
x
9
for_block
t
n
x
7
inspect
i
29
57
19
0
15
21
1
1
79
81
0
22
1
1
47
101
1
7
2
20
0
49
3
0
47
101
1
63
3
11
I
5
I
1
I
1
I
0
I
1
n
p
4
x
1
+
x
4
to_s
s
1
:
x
7
inspect
p
3
I
0
I
2c2
I
1d
x
23
kernel/common/regexp.rb
p
1
x
7
capture
x
4
map!
s
2
" 
s
1
 
x
4
join
s
1
>
p
17
I
-1
I
2bc
I
0
I
2bd
I
6
I
2be
I
d
I
2bf
I
1b
I
2c1
I
1f
I
2c2
I
27
I
2c3
I
40
I
0
I
41
x
23
kernel/common/regexp.rb
p
2
x
5
capts
x
3
idx
x
6
select
M
1
n
n
x
6
select
i
60
94
9
6
1
8
17
5
45
0
1
7
2
64
47
49
3
2
15
35
0
19
0
15
5
47
49
4
0
19
1
15
20
1
60
1
9
46
20
0
20
1
49
5
1
8
47
1
15
5
56
6
47
50
7
0
15
20
0
11
11
I
5
I
2
I
0
I
0
I
0
n
p
8
x
14
LocalJumpError
n
s
14
no block given
x
5
raise
x
12
matched_area
x
2
<<
M
1
p
2
x
9
for_block
t
n
x
6
select
i
22
57
19
0
15
20
0
60
1
9
20
21
1
0
20
0
49
0
1
8
21
1
11
I
4
I
1
I
1
I
0
I
1
n
p
1
x
2
<<
p
11
I
0
I
2d0
I
4
I
2d1
I
a
I
2d2
I
14
I
2d1
I
15
I
0
I
16
x
23
kernel/common/regexp.rb
p
1
x
3
str
x
12
each_capture
p
21
I
-1
I
2c7
I
0
I
2c8
I
6
I
2c9
I
11
I
0
I
12
I
2cc
I
17
I
2cd
I
1f
I
2ce
I
2f
I
0
I
30
I
2d0
I
38
I
2d5
I
3c
x
23
kernel/common/regexp.rb
p
2
x
3
out
x
2
ma
x
4
size
x
12
alias_method
x
4
to_a
M
1
n
n
x
4
to_a
i
23
5
47
49
0
0
19
0
15
20
0
5
47
49
1
0
49
2
1
15
20
0
11
11
I
3
I
1
I
0
I
0
I
0
n
p
3
x
8
captures
x
12
matched_area
x
7
unshift
p
9
I
-1
I
2da
I
0
I
2db
I
8
I
2dc
I
13
I
2dd
I
17
x
23
kernel/common/regexp.rb
p
1
x
3
ary
x
9
values_at
M
1
n
n
x
9
values_at
i
8
20
0
56
0
50
1
0
11
I
3
I
1
I
0
I
0
I
0
I
0
p
2
M
1
p
2
x
9
for_block
t
n
x
9
values_at
i
12
57
19
0
15
5
20
0
47
49
0
1
11
I
4
I
1
I
1
I
0
I
1
n
p
1
x
2
[]
p
3
I
0
I
2e1
I
c
x
23
kernel/common/regexp.rb
p
1
x
1
i
x
3
map
p
5
I
-1
I
2e0
I
0
I
2e1
I
8
x
23
kernel/common/regexp.rb
p
1
x
7
indexes
x
12
matched_area
M
1
n
n
x
12
matched_area
i
32
39
0
78
49
1
1
19
0
15
39
0
79
49
1
1
19
1
15
39
2
20
0
20
1
20
0
82
3
49
4
2
11
I
6
I
2
I
0
I
0
I
0
n
p
5
x
5
@full
x
2
at
x
7
@source
x
1
-
x
9
substring
p
9
I
-1
I
2e4
I
0
I
2e5
I
9
I
2e6
I
12
I
2e7
I
20
x
23
kernel/common/regexp.rb
p
2
x
1
x
x
1
y
x
4
to_s
x
7
private
x
11
get_capture
M
1
n
n
x
11
get_capture
i
59
39
0
20
0
49
1
1
97
37
19
1
15
37
19
2
15
15
2
15
20
2
10
26
2
8
27
3
13
10
36
15
20
1
77
83
2
9
42
1
11
8
43
1
15
39
3
20
1
20
2
20
1
82
4
49
5
2
11
11
I
7
I
3
I
1
I
0
I
1
n
p
6
x
7
@region
x
2
[]
x
2
==
x
7
@source
x
1
-
x
9
substring
p
11
I
-1
I
2ed
I
0
I
2ee
I
13
I
2ef
I
2b
I
0
I
2c
I
2f1
I
3b
x
23
kernel/common/regexp.rb
p
3
x
3
num
x
1
x
x
1
y
x
12
each_capture
M
1
n
n
x
12
each_capture
i
8
39
0
56
1
50
2
0
11
I
2
I
0
I
0
I
0
I
0
n
p
3
x
7
@region
M
1
p
2
x
9
for_block
t
n
x
12
each_capture
i
34
57
19
0
15
20
0
36
37
19
1
15
37
19
2
15
15
2
15
39
0
20
1
20
2
20
1
82
1
49
2
2
60
1
11
I
8
I
3
I
1
I
0
I
1
n
p
3
x
7
@source
x
1
-
x
9
substring
p
7
I
0
I
2f7
I
4
I
2f8
I
12
I
2f9
I
22
x
23
kernel/common/regexp.rb
p
3
x
3
tup
x
1
x
x
1
y
x
4
each
p
5
I
-1
I
2f6
I
0
I
2f7
I
8
x
23
kernel/common/regexp.rb
p
0
p
53
I
2
I
24e
I
10
I
252
I
1e
I
256
I
2c
I
25a
I
3a
I
25f
I
48
I
264
I
56
I
26b
I
64
I
26f
I
72
I
284
I
80
I
288
I
8e
I
28e
I
9c
I
294
I
aa
I
298
I
b8
I
29e
I
c6
I
2bc
I
d4
I
2c7
I
e2
I
2d8
I
ec
I
2da
I
fa
I
2e0
I
108
I
2e4
I
116
I
2ea
I
120
I
2eb
I
128
I
2ed
I
136
I
2f4
I
13e
I
2f6
I
14c
I
2fd
I
154
x
23
kernel/common/regexp.rb
p
0
p
5
I
0
I
1
I
1b
I
24c
I
38
x
23
kernel/common/regexp.rb
p
0
