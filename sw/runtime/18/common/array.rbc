!RBIX
4472690874163217065
18
M
1
n
n
x
10
__script__
i
29
99
7
0
1
65
49
1
3
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
15
2
11
I
6
I
0
I
0
I
0
I
0
n
p
5
x
5
Array
x
10
open_class
x
14
__class_init__
M
1
n
n
x
5
Array
i
1297
5
66
5
45
0
1
47
49
2
1
15
99
7
3
7
4
65
5
49
5
4
15
99
7
6
7
7
65
67
49
8
0
49
9
4
15
5
7
6
47
49
10
1
15
99
7
3
7
11
65
67
49
8
0
49
9
4
15
5
7
12
7
3
47
49
13
2
15
99
7
14
7
15
65
67
49
8
0
49
9
4
15
5
7
16
7
14
47
49
13
2
15
5
7
14
47
49
10
1
15
99
7
17
7
18
65
67
49
8
0
49
9
4
15
99
7
19
7
20
65
67
49
8
0
49
9
4
15
99
7
21
7
22
65
67
49
8
0
49
9
4
15
99
7
23
7
24
65
67
49
8
0
49
9
4
15
99
7
25
7
26
65
67
49
8
0
49
9
4
15
99
7
27
7
28
65
67
49
8
0
49
9
4
15
99
7
29
7
30
65
67
49
8
0
49
9
4
15
99
7
31
7
32
65
67
49
8
0
49
9
4
15
99
7
33
7
34
65
67
49
8
0
49
9
4
15
99
7
35
7
36
65
67
49
8
0
49
9
4
15
99
7
37
7
38
65
67
49
8
0
49
9
4
15
99
7
39
7
40
65
67
49
8
0
49
9
4
15
99
7
41
7
42
65
67
49
8
0
49
9
4
15
99
7
43
7
44
65
67
49
8
0
49
9
4
15
99
7
45
7
46
65
67
49
8
0
49
9
4
15
99
7
47
7
48
65
67
49
8
0
49
9
4
15
99
7
49
7
50
65
67
49
8
0
49
9
4
15
99
7
51
7
52
65
67
49
8
0
49
9
4
15
99
7
53
7
54
65
67
49
8
0
49
9
4
15
99
7
55
7
56
65
67
49
8
0
49
9
4
15
99
7
57
7
58
65
67
49
8
0
49
9
4
15
99
7
59
7
60
65
67
49
8
0
49
9
4
15
99
7
61
7
62
65
67
49
8
0
49
9
4
15
99
7
63
7
64
65
67
49
8
0
49
9
4
15
99
7
65
7
66
65
67
49
8
0
49
9
4
15
99
7
67
7
68
65
67
49
8
0
49
9
4
15
99
7
69
7
70
65
67
49
8
0
49
9
4
15
99
7
71
7
72
65
67
49
8
0
49
9
4
15
99
7
73
7
74
65
67
49
8
0
49
9
4
15
99
7
75
7
76
65
67
49
8
0
49
9
4
15
99
7
77
7
78
65
67
49
8
0
49
9
4
15
5
7
79
7
77
47
49
13
2
15
99
7
80
7
81
65
67
49
8
0
49
9
4
15
99
7
82
7
83
65
67
49
8
0
49
9
4
15
99
7
84
7
85
65
67
49
8
0
49
9
4
15
99
7
86
7
87
65
67
49
8
0
49
9
4
15
5
7
88
7
89
47
49
13
2
15
5
7
90
7
91
47
49
13
2
15
99
7
92
7
93
65
67
49
8
0
49
9
4
15
99
7
94
7
95
65
67
49
8
0
49
9
4
15
99
7
96
7
97
65
67
49
8
0
49
9
4
15
99
7
98
7
99
65
67
49
8
0
49
9
4
15
5
7
98
47
49
10
1
15
99
7
100
7
101
65
67
49
8
0
49
9
4
15
99
7
102
7
103
65
67
49
8
0
49
9
4
15
99
7
104
7
105
65
67
49
8
0
49
9
4
15
99
7
106
7
107
65
67
49
8
0
49
9
4
15
99
7
108
7
109
65
67
49
8
0
49
9
4
15
99
7
110
7
111
65
67
49
8
0
49
9
4
15
99
7
112
7
113
65
67
49
8
0
49
9
4
15
5
7
114
7
112
47
49
13
2
15
5
7
114
47
49
10
1
15
99
7
115
7
116
65
67
49
8
0
49
9
4
15
99
7
117
7
118
65
67
49
8
0
49
9
4
15
99
7
119
7
120
65
67
49
8
0
49
9
4
15
99
7
121
7
122
65
67
49
8
0
49
9
4
15
99
7
123
7
124
65
67
49
8
0
49
9
4
15
5
7
125
7
126
47
49
13
2
15
99
7
127
7
128
65
67
49
8
0
49
9
4
15
99
7
129
7
130
65
67
49
8
0
49
9
4
15
99
7
131
7
132
65
67
49
8
0
49
9
4
15
99
7
133
7
134
65
67
49
8
0
49
9
4
15
99
7
135
7
136
65
67
49
8
0
49
9
4
15
99
7
137
7
138
65
67
49
8
0
49
9
4
15
99
7
139
7
140
65
67
49
8
0
49
9
4
15
5
7
139
47
49
141
1
15
5
7
142
7
139
47
49
13
2
15
5
7
142
47
49
143
1
15
99
7
144
7
145
65
67
49
8
0
49
9
4
15
99
7
146
7
147
65
67
49
8
0
49
9
4
15
99
7
148
7
149
65
67
49
8
0
49
9
4
15
99
7
150
7
151
65
67
49
8
0
49
9
4
15
99
7
152
7
153
65
67
49
8
0
49
9
4
15
99
7
154
7
155
65
67
49
8
0
49
9
4
15
99
7
156
7
157
65
67
49
8
0
49
9
4
15
5
7
156
47
49
10
1
15
99
7
158
7
159
65
67
49
8
0
49
9
4
15
5
7
158
47
49
10
1
15
99
7
160
7
161
65
67
49
8
0
49
9
4
15
5
7
160
47
49
10
1
15
99
7
162
7
163
65
67
49
8
0
49
9
4
15
5
7
162
47
49
10
1
15
99
7
164
7
165
65
67
49
8
0
49
9
4
15
5
7
164
47
49
10
1
15
99
7
166
7
167
65
67
49
8
0
49
9
4
15
5
7
166
47
49
10
1
15
99
7
168
7
169
65
67
49
8
0
49
9
4
15
5
7
168
47
49
10
1
15
99
7
170
7
171
65
67
49
8
0
49
9
4
15
99
7
172
1
65
49
173
3
13
99
12
7
174
12
7
175
12
65
12
49
5
4
15
49
174
0
15
99
7
176
7
177
65
67
49
8
0
49
9
4
11
I
6
I
0
I
0
I
0
I
0
n
p
178
x
10
Enumerable
n
x
7
include
x
2
[]
M
1
n
n
x
2
[]
i
17
5
48
0
19
1
15
20
1
20
0
49
1
1
15
20
1
11
I
4
I
2
I
0
I
0
I
0
I
0
p
2
x
8
allocate
x
7
replace
p
9
I
-1
I
15
I
0
I
16
I
6
I
17
I
e
I
18
I
11
x
22
kernel/common/array.rb
p
2
x
4
args
x
3
ary
x
13
attach_method
x
10
initialize
M
1
n
n
x
10
initialize
i
332
23
0
10
8
91
19
0
15
23
1
10
16
91
19
1
15
5
96
15
20
0
91
49
0
1
9
80
39
1
78
83
2
9
37
1
8
75
78
38
3
38
1
15
45
4
5
43
6
13
71
7
47
9
68
47
49
8
0
13
4
8
47
49
9
1
15
8
73
4
8
49
7
1
38
10
15
5
11
8
81
1
15
20
1
91
49
0
1
9
155
1
19
1
15
20
0
7
11
49
12
1
9
152
45
4
13
43
14
20
0
45
15
16
7
11
49
17
3
19
2
15
20
2
49
18
0
49
19
0
38
10
15
20
2
49
20
0
38
3
15
20
2
49
21
0
38
1
15
5
11
8
153
1
8
156
1
15
45
4
22
43
14
20
0
45
23
24
7
25
49
17
3
19
3
15
20
3
78
84
26
9
195
5
45
27
28
7
29
64
47
49
30
2
8
196
1
15
20
3
45
31
32
43
33
85
34
9
230
5
45
27
35
7
36
45
31
37
43
33
47
101
38
63
2
47
49
30
2
8
231
1
15
94
9
310
45
4
39
43
6
13
71
7
47
9
260
47
49
8
0
13
20
3
47
49
9
1
15
8
265
20
3
49
7
1
38
10
15
78
19
4
38
1
15
20
4
20
3
84
26
9
307
39
10
20
4
20
4
60
1
49
40
2
15
20
4
79
81
41
19
4
38
1
15
68
8
274
1
8
329
20
3
38
1
15
45
4
42
43
6
20
3
20
1
49
43
2
38
10
15
5
11
I
9
I
5
I
0
I
0
I
2
n
p
44
x
6
equal?
x
6
@total
x
2
==
x
6
@start
x
8
Rubinius
n
x
5
Tuple
x
3
new
x
8
allocate
x
10
initialize
x
6
@tuple
x
6
to_ary
x
11
respond_to?
n
x
4
Type
x
5
Array
n
x
9
coerce_to
x
5
tuple
x
3
dup
x
5
start
x
4
size
n
x
7
Integer
n
x
6
to_int
x
1
<
x
13
ArgumentError
n
s
21
size must be positive
x
5
raise
x
6
Fixnum
n
x
3
MAX
x
1
>
n
s
16
size must be <= 
n
x
4
to_s
n
x
3
put
x
1
+
n
x
7
pattern
p
77
I
-1
I
26
I
10
I
27
I
13
I
29
I
1b
I
2a
I
25
I
2b
I
2b
I
2c
I
4b
I
0
I
4c
I
2f
I
50
I
29
I
51
I
0
I
52
I
32
I
5a
I
33
I
5e
I
35
I
67
I
36
I
79
I
38
I
84
I
39
I
8c
I
3a
I
94
I
3c
I
98
I
35
I
99
I
0
I
9b
I
32
I
9c
I
0
I
9d
I
40
I
af
I
41
I
c4
I
0
I
c5
I
42
I
e7
I
0
I
e8
I
44
I
eb
I
45
I
10c
I
46
I
112
I
47
I
11a
I
48
I
126
I
49
I
133
I
0
I
136
I
4c
I
13b
I
4d
I
149
I
0
I
14a
I
50
I
14c
x
22
kernel/common/array.rb
p
5
x
13
size_or_array
x
3
obj
x
3
ary
x
4
size
x
1
i
x
17
method_visibility
x
15
add_defn_method
x
7
private
M
1
n
n
x
2
[]
i
543
23
1
10
8
1
19
1
15
20
0
13
45
0
1
12
49
2
1
9
143
15
20
0
19
2
15
20
2
78
84
3
9
43
20
2
39
4
81
5
19
2
8
44
1
15
20
1
9
68
45
6
7
43
8
20
1
45
0
9
7
10
49
11
3
19
3
8
141
20
2
39
4
49
12
1
9
81
1
11
8
82
1
15
26
93
0
15
29
105
0
39
13
39
14
20
2
81
5
49
15
1
11
30
8
138
26
93
1
15
24
13
45
6
16
43
17
12
49
2
1
10
124
8
133
15
1
92
0
27
11
25
8
138
15
92
1
27
34
92
0
27
8
442
13
45
18
19
12
49
2
1
9
308
15
45
6
20
43
8
20
0
49
21
0
45
0
22
7
10
49
11
3
19
2
15
20
2
78
84
3
9
192
20
2
39
4
81
5
19
2
8
193
1
15
20
2
78
84
3
13
10
209
15
20
2
39
4
85
23
9
215
1
11
8
216
1
15
45
6
24
43
8
20
0
49
25
0
45
0
26
7
10
49
11
3
19
4
15
20
4
78
84
3
9
255
20
4
39
4
81
5
19
4
8
256
1
15
20
0
49
27
0
9
273
20
4
79
82
28
19
4
8
274
1
15
20
4
20
2
84
3
9
293
5
78
78
47
49
29
2
11
8
294
1
15
20
4
20
2
82
28
79
81
5
19
3
8
442
15
45
6
30
43
8
20
0
45
0
31
7
10
49
11
3
19
2
15
20
2
78
84
3
9
344
20
2
39
4
81
5
19
2
8
345
1
15
20
1
9
369
45
6
32
43
8
20
1
45
0
33
7
10
49
11
3
19
3
8
442
20
2
39
4
49
12
1
9
382
1
11
8
383
1
15
26
93
2
15
29
406
0
39
13
39
14
20
2
81
5
49
15
1
11
30
8
439
26
93
3
15
24
13
45
6
34
43
17
12
49
2
1
10
425
8
434
15
1
92
2
27
11
25
8
439
15
92
3
27
34
92
2
27
15
20
3
78
84
3
9
454
1
11
8
455
1
15
20
2
39
4
49
12
1
9
489
20
2
39
4
83
35
9
483
5
78
78
47
49
29
2
11
8
484
1
15
1
11
8
490
1
15
20
2
78
84
3
9
502
1
11
8
503
1
15
20
2
20
3
81
5
39
4
85
23
9
526
39
4
20
2
82
28
19
3
8
527
1
15
5
39
14
20
2
81
5
20
3
47
49
29
2
11
11
I
d
I
5
I
1
I
0
I
2
n
p
36
x
6
Fixnum
n
x
3
===
x
1
<
x
6
@total
x
1
+
x
8
Rubinius
n
x
4
Type
n
x
6
to_int
x
9
coerce_to
x
2
>=
x
6
@tuple
x
6
@start
x
2
at
n
x
25
ObjectBoundsExceededError
x
5
Range
n
n
x
5
begin
n
x
1
>
n
x
3
end
n
x
12
exclude_end?
x
1
-
x
9
new_range
n
n
n
n
n
x
2
==
p
113
I
-1
I
5b
I
8
I
5c
I
a
I
63
I
15
I
64
I
1a
I
67
I
2c
I
0
I
2d
I
69
I
31
I
6a
I
44
I
6c
I
52
I
0
I
53
I
6f
I
69
I
0
I
6e
I
74
I
7d
I
75
I
8a
I
0
I
8f
I
78
I
9a
I
79
I
af
I
7b
I
c1
I
0
I
c2
I
7f
I
d8
I
0
I
d9
I
81
I
ee
I
82
I
100
I
0
I
101
I
83
I
112
I
0
I
113
I
85
I
126
I
0
I
127
I
87
I
135
I
8b
I
147
I
8e
I
159
I
0
I
15a
I
90
I
15e
I
91
I
171
I
93
I
17f
I
0
I
180
I
96
I
196
I
0
I
19b
I
9b
I
1aa
I
9c
I
1b7
I
0
I
1bb
I
a2
I
1c7
I
0
I
1c8
I
a5
I
1d1
I
a7
I
1e4
I
0
I
1e5
I
a8
I
1e9
I
a5
I
1ea
I
0
I
1eb
I
ab
I
1f7
I
0
I
1f8
I
ae
I
204
I
af
I
20e
I
ae
I
20f
I
0
I
210
I
b3
I
21f
x
22
kernel/common/array.rb
p
5
x
4
arg1
x
4
arg2
x
9
start_idx
x
5
count
x
9
right_idx
x
5
slice
x
12
alias_method
x
9
set_index
M
1
n
x
10
array_aset
x
9
set_index
i
1083
23
2
10
8
91
19
2
15
5
96
15
1
19
3
15
20
2
91
49
0
1
9
26
1
8
48
45
1
2
43
3
20
1
45
4
5
7
6
49
7
3
19
3
15
20
2
19
1
15
20
0
45
8
9
49
10
1
9
236
20
3
9
76
5
45
11
12
7
13
64
47
49
14
2
8
77
1
15
45
1
15
43
3
20
0
49
16
0
45
4
17
7
6
49
7
3
19
4
15
20
4
78
84
18
9
116
20
4
39
19
81
20
19
4
8
117
1
15
20
0
49
21
0
9
128
1
8
135
20
4
79
81
20
19
4
15
45
1
22
43
3
20
0
49
23
0
45
4
24
7
6
49
7
3
19
0
15
20
0
78
84
18
9
208
20
0
39
19
81
20
19
0
15
20
0
78
84
18
9
205
5
45
25
26
7
27
20
0
39
19
82
28
47
101
29
7
30
63
3
47
49
14
2
8
206
1
8
209
1
15
20
0
20
4
85
31
9
224
20
0
19
4
8
225
1
15
20
4
20
0
82
28
19
3
8
306
45
1
32
43
3
20
0
45
4
33
7
6
49
7
3
19
0
15
20
0
78
84
18
9
305
20
0
39
19
81
20
19
0
15
20
0
78
84
18
9
302
5
45
34
35
7
36
20
0
39
19
82
28
47
101
29
7
30
63
3
47
49
14
2
8
303
1
8
306
1
15
20
3
9
1008
20
3
78
84
18
9
337
5
45
34
37
7
38
20
3
47
101
29
63
2
47
49
14
2
8
338
1
15
39
19
20
0
82
28
19
5
15
20
3
20
5
85
31
9
372
20
5
78
85
31
9
367
20
5
8
368
78
19
3
8
373
1
15
78
19
6
15
20
1
49
39
0
9
500
20
0
20
3
81
20
19
7
15
39
19
20
7
82
28
19
8
15
20
7
39
19
49
40
1
9
493
20
0
78
83
41
9
457
20
3
79
83
41
9
435
39
42
79
81
20
38
42
8
455
39
43
39
43
20
7
39
42
81
20
20
8
78
49
44
4
15
78
38
42
8
478
39
43
39
43
20
7
39
42
81
20
20
8
39
42
20
0
81
20
49
44
4
15
39
19
20
3
82
28
38
19
15
20
1
11
8
494
1
15
78
19
6
8
594
20
1
45
45
46
49
10
1
9
542
20
1
19
9
15
20
9
49
47
0
19
6
15
20
6
79
83
41
9
539
20
9
49
23
0
19
9
8
540
1
8
594
20
1
7
48
49
49
1
9
586
20
1
49
48
0
19
9
15
20
9
49
47
0
19
6
15
20
6
79
83
41
9
583
20
9
49
23
0
19
9
8
584
1
8
594
20
1
19
9
15
79
19
6
15
20
0
39
19
85
31
9
607
20
0
8
609
39
19
19
10
15
20
6
20
3
85
31
9
634
20
10
20
6
20
3
82
28
81
20
19
10
8
657
20
6
20
3
84
18
9
656
20
10
20
3
20
6
82
28
82
28
19
10
8
657
1
15
20
10
39
43
49
47
0
39
42
82
28
85
31
9
872
45
1
50
43
51
13
71
52
47
9
709
47
49
53
0
13
20
10
39
43
49
47
0
80
49
54
1
81
20
47
49
55
1
15
8
725
20
10
39
43
49
47
0
80
49
54
1
81
20
49
52
1
19
11
15
20
11
39
43
39
42
20
0
39
19
84
18
9
746
20
0
8
748
39
19
78
49
44
4
15
20
6
13
79
12
49
56
1
9
779
15
20
11
20
0
20
9
13
18
3
49
57
2
15
8
811
13
78
12
49
56
1
9
791
15
1
8
811
15
20
11
20
9
49
58
0
20
9
49
59
0
20
6
20
0
49
44
4
15
20
0
39
19
84
18
9
855
20
11
39
43
39
42
20
0
81
20
20
3
81
20
39
19
20
0
82
28
20
3
82
28
20
0
20
6
81
20
49
44
4
8
856
1
15
78
38
42
15
20
11
38
43
15
20
10
38
19
8
1002
20
0
39
19
84
18
9
929
39
42
20
0
81
20
20
3
81
20
19
12
15
39
19
20
0
82
28
20
3
82
28
19
13
15
39
43
39
43
20
12
20
13
39
42
20
0
81
20
20
6
81
20
49
44
4
8
930
1
15
20
6
13
79
12
49
56
1
9
961
15
39
43
39
42
20
0
81
20
20
9
13
18
3
49
57
2
15
8
997
13
78
12
49
56
1
9
973
15
1
8
997
15
39
43
20
9
49
58
0
20
9
49
59
0
20
6
39
42
20
0
81
20
49
44
4
15
20
10
38
19
15
20
1
11
8
1082
39
42
20
0
81
20
79
81
20
19
14
15
39
43
49
47
0
20
14
84
18
9
1040
5
20
14
47
49
60
1
8
1041
1
15
39
43
39
42
20
0
81
20
20
1
49
61
2
15
20
0
39
19
79
82
28
49
62
1
9
1077
20
0
79
81
20
38
19
8
1078
1
15
20
1
11
11
I
15
I
f
I
2
I
0
I
3
n
p
63
x
6
equal?
x
8
Rubinius
n
x
4
Type
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
5
Range
n
x
8
kind_of?
x
13
ArgumentError
n
s
36
Second argument invalid with a range
x
5
raise
n
x
4
last
n
x
1
<
x
6
@total
x
1
+
x
12
exclude_end?
n
x
5
first
n
x
10
RangeError
n
s
12
Range begin 
x
1
-
x
4
to_s
s
14
 out of bounds
x
1
>
n
n
x
10
IndexError
n
s
6
Index 
n
s
16
Negative length 
x
4
nil?
x
2
<=
x
2
==
x
6
@start
x
6
@tuple
x
9
copy_from
x
5
Array
n
x
4
size
x
6
to_ary
x
11
respond_to?
n
x
5
Tuple
x
3
new
x
8
allocate
x
6
divide
x
10
initialize
x
3
===
x
3
[]=
x
5
tuple
x
5
start
x
10
reallocate
x
3
put
x
2
>=
p
275
I
-1
I
b8
I
8
I
bb
I
b
I
bd
I
f
I
be
I
1a
I
bf
I
2c
I
c0
I
30
I
0
I
31
I
c4
I
3b
I
c5
I
3f
I
c6
I
4c
I
c5
I
4d
I
0
I
4e
I
c9
I
63
I
ca
I
75
I
0
I
76
I
cb
I
87
I
0
I
88
I
cd
I
9d
I
cf
I
a4
I
d0
I
ad
I
d1
I
ce
I
0
I
d0
I
cf
I
d1
I
0
I
d2
I
d5
I
e1
I
0
I
e2
I
d7
I
ec
I
d9
I
fe
I
db
I
105
I
dc
I
10e
I
dd
I
12f
I
0
I
131
I
db
I
132
I
0
I
133
I
e1
I
137
I
e3
I
152
I
0
I
153
I
e6
I
15c
I
e7
I
164
I
e8
I
170
I
e8
I
174
I
e7
I
175
I
0
I
176
I
eb
I
17a
I
ed
I
181
I
ef
I
18a
I
f0
I
193
I
f2
I
19c
I
f5
I
1a3
I
f8
I
1aa
I
f9
I
1b3
I
fb
I
1c4
I
fc
I
1c7
I
0
I
1c9
I
ff
I
1d5
I
100
I
1db
I
ff
I
1de
I
0
I
1df
I
106
I
1e8
I
108
I
1ed
I
f2
I
1ee
I
0
I
1ef
I
10c
I
1f4
I
10d
I
1fe
I
10e
I
203
I
10f
I
20b
I
110
I
21c
I
0
I
21e
I
111
I
227
I
112
I
22f
I
113
I
237
I
114
I
248
I
0
I
24a
I
116
I
24f
I
117
I
252
I
0
I
253
I
11a
I
261
I
11a
I
264
I
11b
I
26c
I
11c
I
27a
I
11d
I
282
I
11e
I
290
I
11d
I
291
I
0
I
292
I
121
I
2a1
I
127
I
2d8
I
129
I
2ec
I
129
I
2f1
I
12b
I
2f3
I
12c
I
2fc
I
12d
I
30b
I
12e
I
314
I
133
I
318
I
131
I
324
I
132
I
328
I
131
I
32b
I
0
I
32c
I
135
I
334
I
136
I
342
I
137
I
34c
I
138
I
352
I
136
I
357
I
135
I
358
I
0
I
359
I
13a
I
35d
I
13b
I
362
I
13c
I
368
I
13f
I
370
I
140
I
37d
I
141
I
38a
I
143
I
392
I
144
I
39c
I
143
I
3a1
I
13f
I
3a2
I
0
I
3a3
I
147
I
3a5
I
148
I
3ae
I
149
I
3c1
I
14a
I
3ca
I
14f
I
3ce
I
14d
I
3da
I
14e
I
3e2
I
14d
I
3e5
I
0
I
3e6
I
151
I
3ea
I
0
I
3eb
I
154
I
3f0
I
156
I
3fc
I
157
I
411
I
0
I
412
I
159
I
420
I
15a
I
42c
I
15b
I
435
I
15a
I
436
I
0
I
437
I
15d
I
43a
I
0
I
43b
x
22
kernel/common/array.rb
p
15
x
5
index
x
3
ent
x
3
fin
x
10
ins_length
x
4
last
x
5
space
x
13
replace_count
x
9
reg_start
x
10
reg_length
x
11
replacement
x
9
new_total
x
9
new_tuple
x
11
right_start
x
9
right_len
x
2
nt
x
3
[]=
x
2
<<
M
1
n
n
x
2
<<
i
15
5
96
15
5
39
0
20
0
47
49
1
2
15
5
11
I
4
I
1
I
1
I
0
I
1
n
p
2
x
6
@total
x
9
set_index
p
9
I
-1
I
167
I
0
I
168
I
3
I
16a
I
d
I
16b
I
f
x
22
kernel/common/array.rb
p
1
x
3
obj
x
1
&
M
1
n
n
x
1
&
i
47
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
19
0
15
35
0
19
1
15
45
0
7
43
8
20
0
49
9
1
19
2
15
5
56
10
47
50
11
0
15
20
1
11
I
7
I
3
I
1
I
0
I
1
n
p
12
x
8
Rubinius
n
x
4
Type
x
5
Array
n
x
6
to_ary
x
9
coerce_to
n
x
11
IdentityMap
x
4
from
M
1
p
2
x
9
for_block
t
n
x
1
&
i
26
57
19
0
15
21
1
2
20
0
49
0
1
9
24
21
1
1
20
0
49
1
1
8
25
1
11
I
4
I
1
I
1
I
0
I
1
n
p
2
x
6
delete
x
2
<<
p
5
I
0
I
177
I
19
I
0
I
1a
x
22
kernel/common/array.rb
p
1
x
1
x
x
4
each
p
13
I
-1
I
171
I
0
I
172
I
12
I
174
I
17
I
175
I
24
I
177
I
2c
I
179
I
2f
x
22
kernel/common/array.rb
p
3
x
5
other
x
5
array
x
2
im
x
1
|
M
1
n
n
x
1
|
i
38
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
19
0
15
45
0
7
43
8
5
20
0
49
9
2
19
1
15
20
1
49
10
0
11
I
6
I
2
I
1
I
0
I
1
n
p
11
x
8
Rubinius
n
x
4
Type
x
5
Array
n
x
6
to_ary
x
9
coerce_to
n
x
11
IdentityMap
x
4
from
x
8
to_array
p
9
I
-1
I
17e
I
0
I
17f
I
12
I
181
I
20
I
182
I
26
x
22
kernel/common/array.rb
p
2
x
5
other
x
2
im
x
1
*
M
1
n
n
x
1
*
i
323
20
0
7
0
49
1
1
9
19
5
20
0
47
49
2
1
11
8
322
45
3
4
43
5
20
0
45
6
7
7
8
49
9
3
19
0
15
20
0
78
84
10
9
57
5
45
11
12
7
13
64
47
49
14
2
8
58
1
15
39
15
13
78
12
49
16
1
9
101
15
5
49
17
0
49
18
0
19
1
15
5
47
49
19
0
9
94
20
1
49
20
0
8
95
1
15
20
1
11
8
186
13
79
12
49
16
1
9
184
15
45
3
21
43
22
20
0
5
78
47
49
23
1
49
24
2
19
2
15
5
49
17
0
49
18
0
19
1
15
20
1
20
2
13
18
2
49
25
1
15
15
20
1
20
0
13
18
2
49
26
1
15
15
5
47
49
19
0
9
177
20
1
49
20
0
8
178
1
15
20
1
11
8
186
15
1
15
20
0
39
15
49
27
1
19
3
15
45
3
28
43
22
13
71
29
47
9
222
47
49
18
0
13
20
3
47
49
30
1
15
8
227
20
3
49
29
1
19
4
15
5
49
17
0
49
18
0
19
1
15
20
1
20
4
13
18
2
49
25
1
15
15
20
1
20
3
13
18
2
49
26
1
15
15
5
47
49
19
0
9
278
20
1
49
20
0
8
279
1
15
78
19
5
15
20
5
20
3
84
10
9
318
20
4
39
31
39
32
39
15
20
5
49
33
4
15
20
5
39
15
81
34
19
5
15
68
8
284
1
15
20
1
11
I
b
I
6
I
1
I
0
I
1
n
p
35
x
6
to_str
x
11
respond_to?
x
4
join
x
8
Rubinius
n
x
4
Type
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
1
<
x
13
ArgumentError
n
s
24
Count cannot be negative
x
5
raise
x
6
@total
x
3
===
x
9
__class__
x
8
allocate
x
8
tainted?
x
5
taint
n
x
5
Tuple
x
2
at
x
7
pattern
x
6
tuple=
x
6
total=
x
1
*
n
x
3
new
x
10
initialize
x
6
@tuple
x
6
@start
x
9
copy_from
x
1
+
p
73
I
-1
I
189
I
0
I
18a
I
9
I
18b
I
13
I
18f
I
25
I
191
I
3a
I
0
I
3b
I
193
I
3d
I
194
I
46
I
196
I
50
I
197
I
5f
I
0
I
60
I
198
I
65
I
199
I
6e
I
19b
I
81
I
19c
I
8b
I
19d
I
97
I
19e
I
a3
I
19f
I
b2
I
0
I
b3
I
1a0
I
b9
I
193
I
ba
I
0
I
bb
I
1a3
I
c5
I
1a4
I
e6
I
1a6
I
f0
I
1a7
I
fc
I
1a8
I
108
I
1a9
I
117
I
0
I
118
I
1ab
I
11c
I
1ac
I
124
I
1ad
I
132
I
1ae
I
13e
I
0
I
140
I
1b1
I
142
I
0
I
143
x
22
kernel/common/array.rb
p
6
x
10
multiplier
x
3
out
x
5
tuple
x
9
new_total
x
9
new_tuple
x
6
offset
x
1
+
M
1
n
n
x
1
+
i
50
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
19
0
15
45
3
7
13
71
8
47
9
40
47
49
9
0
13
5
47
49
10
1
15
8
44
5
49
8
1
20
0
49
11
1
11
I
5
I
1
I
1
I
0
I
1
n
p
12
x
8
Rubinius
n
x
4
Type
x
5
Array
n
x
6
to_ary
x
9
coerce_to
n
x
3
new
x
8
allocate
x
10
initialize
x
6
concat
p
7
I
-1
I
1b6
I
0
I
1b7
I
12
I
1b8
I
32
x
22
kernel/common/array.rb
p
1
x
5
other
x
1
-
M
1
n
n
x
1
-
i
47
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
19
0
15
35
0
19
1
15
45
0
7
43
8
20
0
49
9
1
19
2
15
5
56
10
47
50
11
0
15
20
1
11
I
7
I
3
I
1
I
0
I
1
n
p
12
x
8
Rubinius
n
x
4
Type
x
5
Array
n
x
6
to_ary
x
9
coerce_to
n
x
11
IdentityMap
x
4
from
M
1
p
2
x
9
for_block
t
n
x
1
-
i
26
57
19
0
15
21
1
2
20
0
49
0
1
9
17
1
8
25
21
1
1
20
0
49
1
1
11
I
4
I
1
I
1
I
0
I
1
n
p
2
x
8
include?
x
2
<<
p
5
I
0
I
1c4
I
19
I
0
I
1a
x
22
kernel/common/array.rb
p
1
x
1
x
x
4
each
p
13
I
-1
I
1be
I
0
I
1bf
I
12
I
1c1
I
17
I
1c2
I
24
I
1c4
I
2c
I
1c6
I
2f
x
22
kernel/common/array.rb
p
3
x
5
other
x
5
array
x
2
im
x
3
<=>
M
1
n
n
x
3
<=>
i
74
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
19
0
15
5
20
0
47
49
7
1
9
31
78
11
8
32
1
15
20
0
49
8
0
9
44
1
11
8
45
1
15
20
0
49
9
0
19
1
15
45
10
11
5
20
0
56
12
50
13
2
15
39
14
20
1
49
15
1
11
I
6
I
2
I
1
I
0
I
1
n
p
16
x
8
Rubinius
n
x
4
Type
x
5
Array
n
x
6
to_ary
x
11
try_convert
x
6
equal?
x
4
nil?
x
5
total
x
6
Thread
n
M
1
p
2
x
9
for_block
t
n
x
3
<=>
i
79
78
19
0
15
21
1
1
39
0
84
1
9
18
21
1
1
8
20
39
0
19
1
15
20
0
20
1
84
1
9
77
5
20
0
47
49
2
1
21
1
0
20
0
49
2
1
49
3
1
19
2
15
20
2
78
83
4
9
62
1
8
65
20
2
31
15
20
0
79
81
5
19
0
15
68
8
23
1
11
I
7
I
3
I
0
I
0
I
0
I
-2
p
6
x
6
@total
x
1
<
x
2
[]
x
3
<=>
x
2
==
x
1
+
p
19
I
0
I
1d6
I
4
I
1d7
I
14
I
1d7
I
17
I
1d9
I
1f
I
1da
I
34
I
1db
I
41
I
0
I
42
I
1dd
I
4d
I
0
I
4f
x
22
kernel/common/array.rb
p
3
x
1
i
x
5
total
x
4
diff
x
16
detect_recursion
x
6
@total
x
3
<=>
p
19
I
-1
I
1cf
I
0
I
1d0
I
12
I
1d1
I
20
I
0
I
21
I
1d2
I
2d
I
0
I
2e
I
1d4
I
36
I
1d5
I
42
I
1e4
I
4a
x
22
kernel/common/array.rb
p
2
x
5
other
x
11
other_total
x
2
==
M
1
n
n
x
2
==
i
82
5
20
0
47
49
0
1
9
13
2
11
8
14
1
15
20
0
45
1
2
49
3
1
9
28
1
8
49
20
0
7
4
49
5
1
9
40
1
8
42
3
11
15
20
0
5
83
6
11
15
5
48
7
20
0
49
7
0
83
6
9
65
1
8
67
3
11
15
45
8
9
5
20
0
56
10
50
11
2
15
2
11
I
5
I
1
I
1
I
0
I
1
n
p
12
x
6
equal?
x
5
Array
n
x
8
kind_of?
x
6
to_ary
x
11
respond_to?
x
2
==
x
4
size
x
6
Thread
n
M
1
p
2
x
9
for_block
t
n
x
2
==
i
90
39
0
19
0
15
21
1
0
49
1
0
19
1
15
39
2
19
2
15
21
1
0
49
3
0
19
3
15
20
2
39
4
81
5
19
4
15
20
2
20
4
84
6
9
88
20
0
20
2
49
7
1
20
1
20
3
49
7
1
83
8
9
66
1
8
68
3
31
15
20
2
79
81
5
19
2
15
20
3
79
81
5
19
3
15
68
8
37
1
11
I
9
I
5
I
0
I
0
I
0
I
-2
p
9
x
6
@tuple
x
5
tuple
x
6
@start
x
5
start
x
6
@total
x
1
+
x
1
<
x
2
[]
x
2
==
p
23
I
0
I
1f5
I
5
I
1f6
I
e
I
1f8
I
13
I
1f9
I
1c
I
1fb
I
25
I
1fd
I
2d
I
1fe
I
44
I
0
I
45
I
1ff
I
4d
I
200
I
58
I
0
I
5a
x
22
kernel/common/array.rb
p
5
x
2
md
x
2
od
x
1
i
x
1
j
x
5
total
x
16
detect_recursion
p
25
I
-1
I
1eb
I
0
I
1ec
I
e
I
0
I
f
I
1ed
I
1c
I
1ee
I
2a
I
0
I
2b
I
1ef
I
31
I
0
I
32
I
1f2
I
43
I
0
I
44
I
1f4
I
50
I
204
I
52
x
22
kernel/common/array.rb
p
1
x
5
other
x
5
assoc
M
1
n
n
x
5
assoc
i
10
5
56
0
47
50
1
0
15
1
11
I
3
I
1
I
1
I
0
I
1
n
p
2
M
1
p
2
x
9
for_block
t
n
x
5
assoc
i
35
57
19
0
15
20
0
45
0
1
49
2
1
13
9
26
15
20
0
49
3
0
21
1
0
83
4
9
33
20
0
31
8
34
1
11
I
4
I
1
I
1
I
0
I
1
n
p
5
x
5
Array
n
x
8
kind_of?
x
5
first
x
2
==
p
11
I
0
I
20c
I
4
I
20d
I
1c
I
20e
I
21
I
20d
I
22
I
0
I
23
x
22
kernel/common/array.rb
p
1
x
1
x
x
4
each
p
7
I
-1
I
20b
I
0
I
20c
I
8
I
212
I
a
x
22
kernel/common/array.rb
p
1
x
3
obj
x
2
at
M
1
n
x
10
array_aref
x
2
at
i
87
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
19
0
15
39
7
39
8
81
9
19
1
15
20
0
78
84
10
9
44
20
0
20
1
81
9
19
0
8
52
20
0
39
7
81
9
19
0
15
20
0
20
1
49
11
1
13
10
70
15
20
0
39
7
84
10
9
76
1
11
8
77
1
15
39
12
20
0
49
13
1
11
11
I
6
I
2
I
1
I
0
I
1
n
p
14
x
8
Rubinius
n
x
4
Type
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
6
@start
x
6
@total
x
1
+
x
1
<
x
2
>=
x
6
@tuple
x
2
at
p
21
I
-1
I
219
I
0
I
21b
I
12
I
21d
I
1b
I
21f
I
22
I
220
I
2c
I
222
I
34
I
0
I
35
I
225
I
4d
I
0
I
4e
I
226
I
57
x
22
kernel/common/array.rb
p
2
x
3
idx
x
5
total
x
5
clear
M
1
n
n
x
5
clear
i
44
5
96
15
45
0
1
43
2
13
71
3
47
9
27
47
49
4
0
13
79
47
49
5
1
15
8
31
79
49
3
1
38
6
15
78
38
7
15
78
38
8
15
5
11
I
3
I
0
I
0
I
0
I
0
n
p
9
x
8
Rubinius
n
x
5
Tuple
x
3
new
x
8
allocate
x
10
initialize
x
6
@tuple
x
6
@total
x
6
@start
p
13
I
-1
I
22a
I
0
I
22b
I
3
I
22d
I
22
I
22e
I
26
I
22f
I
2a
I
230
I
2c
x
22
kernel/common/array.rb
p
0
x
11
combination
M
1
n
n
x
11
combination
i
220
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
19
0
15
94
9
24
1
8
34
5
7
7
20
0
47
49
8
2
11
15
44
43
9
78
5
48
10
49
11
2
20
0
49
12
1
9
55
1
8
57
5
11
15
44
43
9
78
20
0
2
49
11
3
49
13
0
19
1
15
44
43
9
5
48
10
20
0
82
14
5
48
10
2
49
11
3
49
13
0
19
2
15
20
1
20
2
49
15
1
49
16
0
19
3
15
45
17
18
56
19
50
11
0
19
4
15
20
3
20
4
49
20
1
19
5
15
2
9
218
5
20
1
36
1
47
51
21
0
60
1
15
20
5
56
22
50
23
0
49
24
0
19
6
15
20
1
20
6
49
25
1
79
81
26
19
7
15
20
1
44
43
9
20
6
20
0
2
49
11
3
44
43
9
20
7
20
7
20
0
81
26
20
6
82
14
2
49
11
3
49
13
0
13
18
3
49
27
2
15
15
68
8
131
1
11
I
e
I
8
I
1
I
0
I
1
n
p
28
x
8
Rubinius
n
x
4
Type
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
11
combination
x
7
to_enum
x
5
Range
x
4
size
x
3
new
x
8
include?
x
4
to_a
x
1
-
x
3
zip
x
7
reverse
x
4
Proc
n
M
1
p
2
x
9
for_block
t
n
x
11
combination
i
3
5
31
11
I
2
I
0
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
241
I
3
x
22
kernel/common/array.rb
p
0
x
4
find
x
9
values_at
M
1
p
2
x
9
for_block
t
n
x
11
combination
i
25
58
37
19
0
15
37
22
1
2
15
15
21
1
1
20
0
49
0
1
21
1
2
84
1
11
I
4
I
1
I
2
I
0
I
2
n
p
2
x
2
[]
x
1
<
p
3
I
0
I
246
I
19
x
22
kernel/common/array.rb
p
1
x
4
pick
x
4
each
x
5
first
x
2
[]
x
1
+
x
3
[]=
p
35
I
-1
I
237
I
0
I
238
I
12
I
239
I
22
I
0
I
23
I
23a
I
39
I
0
I
3a
I
23d
I
4a
I
23e
I
61
I
23f
I
6e
I
241
I
79
I
242
I
83
I
244
I
86
I
245
I
92
I
246
I
9f
I
247
I
ac
I
248
I
da
I
0
I
dc
x
22
kernel/common/array.rb
p
8
x
3
num
x
5
picks
x
3
max
x
14
pick_max_pairs
x
11
return_proc
x
6
lookup
x
4
move
x
9
new_index
x
7
compact
M
1
n
n
x
7
compact
i
18
5
48
0
19
0
15
20
0
49
1
0
13
10
17
15
20
0
11
I
3
I
1
I
0
I
0
I
0
n
p
2
x
3
dup
x
8
compact!
p
7
I
-1
I
24d
I
0
I
24e
I
6
I
24f
I
12
x
22
kernel/common/array.rb
p
1
x
3
out
x
8
compact!
M
1
n
n
x
8
compact!
i
42
5
96
15
39
0
39
1
39
2
1
49
3
3
19
0
78
85
4
9
39
39
2
20
0
82
5
38
2
15
5
47
49
6
0
15
5
11
8
41
1
11
11
I
5
I
1
I
0
I
0
I
0
n
p
7
x
6
@tuple
x
6
@start
x
6
@total
x
6
delete
x
1
>
x
1
-
x
17
reallocate_shrink
p
17
I
-1
I
253
I
0
I
254
I
3
I
256
I
14
I
257
I
1d
I
258
I
23
I
259
I
27
I
25b
I
29
I
0
I
2a
x
22
kernel/common/array.rb
p
1
x
7
deleted
x
6
concat
M
1
n
x
12
array_concat
x
6
concat
i
42
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
19
0
15
20
0
49
7
0
9
29
5
11
8
30
1
15
5
96
15
5
20
0
47
49
8
1
11
I
5
I
1
I
1
I
0
I
1
n
p
9
x
8
Rubinius
n
x
4
Type
x
5
Array
n
x
6
to_ary
x
9
coerce_to
x
6
empty?
x
6
concat
p
13
I
-1
I
260
I
0
I
263
I
12
I
264
I
1e
I
0
I
1f
I
266
I
22
I
268
I
2a
x
22
kernel/common/array.rb
p
1
x
5
other
x
5
cycle
M
1
n
n
x
5
cycle
i
82
23
0
10
8
1
19
0
15
95
19
1
15
94
9
18
1
8
28
5
7
0
20
0
47
49
1
2
11
15
20
0
1
49
2
1
9
54
2
9
51
5
56
3
47
50
4
0
15
68
8
37
1
8
79
45
5
6
43
7
20
0
45
8
9
7
10
49
11
3
19
0
15
20
0
56
12
50
13
0
15
1
11
I
6
I
2
I
0
I
0
I
1
n
p
14
x
5
cycle
x
7
to_enum
x
6
equal?
M
1
p
2
x
9
for_block
t
n
x
5
cycle
i
9
57
19
0
15
20
0
60
1
11
I
3
I
1
I
1
I
0
I
1
n
p
0
p
3
I
0
I
274
I
9
x
22
kernel/common/array.rb
p
1
x
1
x
x
4
each
x
8
Rubinius
n
x
4
Type
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
M
1
p
2
x
9
for_block
t
n
x
5
cycle
i
8
5
56
0
47
50
1
0
11
I
3
I
0
I
0
I
0
I
0
I
-2
p
2
M
1
p
2
x
9
for_block
t
n
x
5
cycle
i
9
57
19
0
15
20
0
60
1
11
I
3
I
1
I
1
I
0
I
1
n
p
0
p
3
I
0
I
279
I
9
x
22
kernel/common/array.rb
p
1
x
1
x
x
4
each
p
3
I
0
I
279
I
8
x
22
kernel/common/array.rb
p
0
x
5
times
p
23
I
-1
I
26e
I
c
I
26f
I
1c
I
0
I
1d
I
272
I
25
I
273
I
28
I
274
I
33
I
0
I
36
I
277
I
48
I
278
I
4f
I
0
I
50
I
27c
I
52
x
22
kernel/common/array.rb
p
2
x
1
n
x
5
block
x
6
delete
M
1
n
n
x
6
delete
i
125
91
19
1
15
39
0
19
2
15
20
2
39
1
81
2
19
3
15
39
3
19
4
15
20
2
20
3
84
4
9
71
20
4
20
2
49
5
1
20
0
83
6
9
58
5
96
15
20
4
20
2
20
1
49
7
2
8
59
1
15
20
2
79
81
2
19
2
15
68
8
23
1
15
39
3
39
0
39
1
20
1
49
8
3
19
5
15
20
5
78
85
9
9
114
39
1
20
5
82
10
38
1
15
5
47
49
11
0
15
20
0
11
8
115
1
15
94
9
123
60
0
8
124
1
11
I
a
I
6
I
1
I
0
I
1
n
p
12
x
6
@start
x
6
@total
x
1
+
x
6
@tuple
x
1
<
x
2
at
x
2
==
x
3
put
x
6
delete
x
1
>
x
1
-
x
17
reallocate_shrink
p
49
I
-1
I
283
I
0
I
284
I
4
I
285
I
9
I
286
I
12
I
287
I
17
I
289
I
1f
I
28a
I
2c
I
28e
I
2f
I
28f
I
3a
I
28a
I
3b
I
0
I
3c
I
291
I
47
I
0
I
49
I
294
I
57
I
295
I
5e
I
296
I
67
I
297
I
6d
I
298
I
72
I
295
I
73
I
0
I
74
I
29b
I
77
I
29c
I
7b
I
29e
I
7c
I
0
I
7d
x
22
kernel/common/array.rb
p
6
x
3
obj
x
3
key
x
1
i
x
5
total
x
5
tuple
x
7
deleted
x
9
delete_at
M
1
n
n
x
9
delete_at
i
162
5
96
15
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
19
0
15
20
0
78
84
7
9
38
20
0
39
8
81
9
19
0
8
39
1
15
20
0
78
84
7
13
10
56
15
20
0
39
8
49
10
1
9
62
1
11
8
63
1
15
39
11
39
12
20
0
81
9
49
13
1
19
1
15
20
0
78
83
14
9
103
39
11
39
12
1
49
15
2
15
39
12
79
81
9
38
12
8
150
39
11
39
11
39
12
20
0
81
9
79
81
9
39
8
20
0
82
16
79
82
16
39
12
20
0
81
9
49
17
4
15
39
11
39
12
39
8
81
9
79
82
16
1
49
15
2
15
39
8
79
82
16
38
8
15
20
1
11
I
8
I
2
I
1
I
0
I
1
n
p
18
x
8
Rubinius
n
x
4
Type
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
1
<
x
6
@total
x
1
+
x
2
>=
x
6
@tuple
x
6
@start
x
2
at
x
2
==
x
3
put
x
1
-
x
9
copy_from
p
33
I
-1
I
2a5
I
0
I
2a6
I
3
I
2a8
I
15
I
2ab
I
27
I
0
I
28
I
2ac
I
3f
I
0
I
40
I
2af
I
4e
I
2b2
I
55
I
2b3
I
5e
I
2b4
I
67
I
2b6
I
87
I
2b7
I
96
I
0
I
97
I
2ba
I
9f
I
2bb
I
a2
x
22
kernel/common/array.rb
p
2
x
3
idx
x
3
obj
x
9
delete_if
M
1
n
n
x
9
delete_if
i
126
95
19
0
15
5
96
15
94
9
13
1
8
21
5
7
0
47
49
1
1
11
15
5
47
49
2
0
9
33
5
11
8
34
1
15
39
3
19
2
19
1
15
20
1
39
4
81
5
19
3
15
39
6
19
4
15
20
1
20
3
84
7
9
112
20
4
20
1
49
8
1
19
5
15
20
5
60
1
9
83
1
8
100
20
4
20
2
20
5
49
9
2
15
20
2
79
81
5
19
2
15
20
1
79
81
5
19
1
15
68
8
56
1
15
20
2
39
3
82
10
38
4
15
5
11
11
I
9
I
6
I
0
I
0
I
0
n
p
11
x
9
delete_if
x
7
to_enum
x
6
empty?
x
6
@start
x
6
@total
x
1
+
x
6
@tuple
x
1
<
x
2
at
x
3
put
x
1
-
p
39
I
-1
I
2bf
I
4
I
2c0
I
7
I
2c2
I
15
I
0
I
16
I
2c4
I
22
I
0
I
23
I
2c6
I
2a
I
2c7
I
33
I
2c8
I
38
I
2ca
I
40
I
2cb
I
4a
I
2cc
I
53
I
2cf
I
5d
I
2d0
I
64
I
0
I
65
I
2d3
I
70
I
0
I
72
I
2d6
I
7b
I
2d8
I
7e
x
22
kernel/common/array.rb
p
6
x
5
block
x
1
i
x
3
pos
x
5
total
x
5
tuple
x
1
x
x
10
each_index
M
1
n
n
x
10
each_index
i
52
94
9
6
1
8
14
5
7
0
47
49
1
1
11
15
78
19
0
15
39
2
19
1
15
20
0
20
1
84
3
9
48
20
0
60
1
15
20
0
79
81
4
19
0
15
68
8
24
1
15
5
11
I
4
I
2
I
0
I
0
I
0
n
p
5
x
10
each_index
x
7
to_enum
x
6
@total
x
1
<
x
1
+
p
21
I
-1
I
2dd
I
0
I
2de
I
e
I
0
I
f
I
2e0
I
13
I
2e1
I
18
I
2e3
I
20
I
2e4
I
25
I
2e5
I
30
I
0
I
32
I
2e8
I
34
x
22
kernel/common/array.rb
p
2
x
1
i
x
5
total
x
4
eql?
M
1
n
n
x
4
eql?
i
62
5
20
0
47
49
0
1
9
13
2
11
8
14
1
15
20
0
45
1
2
49
3
1
9
28
1
8
30
3
11
15
39
4
20
0
49
5
0
83
6
9
45
1
8
47
3
11
15
45
7
8
5
20
0
56
9
50
10
2
15
2
11
I
5
I
1
I
1
I
0
I
1
n
p
11
x
6
equal?
x
5
Array
n
x
8
kind_of?
x
6
@total
x
4
size
x
2
==
x
6
Thread
n
M
1
p
2
x
9
for_block
t
n
x
4
eql?
i
12
78
19
0
15
5
56
0
47
50
1
0
11
I
4
I
1
I
0
I
0
I
0
I
-2
p
2
M
1
p
2
x
9
for_block
t
n
x
4
eql?
i
36
57
19
0
15
20
0
21
2
0
21
1
0
49
0
1
49
1
1
9
23
1
8
25
3
31
15
21
1
0
79
81
2
22
1
0
11
I
5
I
1
I
1
I
0
I
1
n
p
3
x
2
[]
x
4
eql?
x
1
+
p
9
I
0
I
2f4
I
4
I
2f5
I
19
I
0
I
1a
I
2f6
I
24
x
22
kernel/common/array.rb
p
1
x
1
x
x
4
each
p
5
I
0
I
2f3
I
4
I
2f4
I
c
x
22
kernel/common/array.rb
p
1
x
1
i
x
16
detect_recursion
p
19
I
-1
I
2ed
I
0
I
2ee
I
e
I
0
I
f
I
2ef
I
1e
I
0
I
1f
I
2f0
I
2f
I
0
I
30
I
2f2
I
3c
I
2fa
I
3e
x
22
kernel/common/array.rb
p
1
x
5
other
x
6
empty?
M
1
n
n
x
6
empty?
i
6
39
0
78
83
1
11
I
2
I
0
I
0
I
0
I
0
n
p
2
x
6
@total
x
2
==
p
5
I
-1
I
2fe
I
0
I
2ff
I
6
x
22
kernel/common/array.rb
p
0
x
5
fetch
M
1
n
n
x
5
fetch
i
126
23
1
10
8
91
19
1
15
20
0
19
2
15
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
19
0
15
20
0
78
84
7
9
48
20
0
39
8
81
9
19
0
8
49
1
15
20
0
78
84
7
13
10
66
15
20
0
39
8
49
10
1
9
116
94
9
78
20
2
60
1
11
8
79
1
15
20
1
91
49
11
1
9
91
1
8
94
20
1
11
15
5
45
12
13
7
14
20
0
47
101
15
7
16
63
3
47
49
17
2
8
117
1
15
5
20
0
47
49
18
1
11
I
8
I
3
I
1
I
0
I
2
n
p
19
x
8
Rubinius
n
x
4
Type
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
1
<
x
6
@total
x
1
+
x
2
>=
x
6
equal?
x
10
IndexError
n
s
6
index 
x
4
to_s
s
14
 out of bounds
x
5
raise
x
2
at
p
33
I
-1
I
306
I
8
I
307
I
d
I
308
I
1f
I
30a
I
31
I
0
I
32
I
30c
I
44
I
30d
I
47
I
30e
I
4e
I
30d
I
4f
I
0
I
50
I
311
I
5e
I
0
I
5f
I
313
I
74
I
30c
I
75
I
0
I
76
I
316
I
7e
x
22
kernel/common/array.rb
p
3
x
3
idx
x
7
default
x
4
orig
x
4
fill
M
1
n
n
x
4
fill
i
608
23
0
10
8
91
19
0
15
23
1
10
16
91
19
1
15
23
2
10
24
91
19
2
15
5
96
15
94
9
67
91
20
2
83
0
9
40
1
8
51
5
45
1
2
7
3
64
47
49
4
2
15
20
0
20
1
17
2
19
3
15
19
4
15
2
8
108
20
0
91
49
5
1
9
88
5
45
1
6
7
3
64
47
49
4
2
8
89
1
15
20
0
20
1
20
2
17
3
19
5
15
19
3
15
19
4
15
2
15
20
3
45
7
8
49
9
1
9
289
20
4
91
49
5
1
9
130
1
8
141
5
45
10
11
7
12
64
47
49
4
2
15
45
13
14
43
15
20
3
49
16
0
45
17
18
7
19
49
20
3
19
6
15
20
6
78
84
21
9
181
20
6
5
48
22
81
23
19
6
8
182
1
15
20
6
78
84
21
9
212
5
45
24
25
20
3
49
26
0
47
101
27
7
28
63
2
47
49
4
2
8
213
1
15
45
13
29
43
15
20
3
49
30
0
45
17
31
7
19
49
20
3
19
7
15
20
7
78
84
21
9
253
20
7
5
48
22
81
23
19
7
8
254
1
15
20
3
49
32
0
9
265
1
8
272
20
7
79
81
23
19
7
15
20
7
20
6
49
33
1
9
286
5
11
8
287
1
8
486
20
3
13
9
306
15
20
3
91
83
0
10
305
2
8
306
3
9
477
45
13
34
43
15
20
3
45
17
35
7
19
49
20
3
19
6
15
20
6
78
84
21
9
344
20
6
5
48
22
81
23
19
6
8
345
1
15
20
6
78
84
21
9
358
78
19
6
8
359
1
15
20
4
13
9
377
15
20
4
91
83
0
10
376
2
8
377
3
9
470
26
93
0
15
29
406
0
45
13
36
43
15
20
4
45
17
37
7
19
49
20
3
19
7
30
8
443
26
93
1
15
24
13
45
10
38
12
49
39
1
10
423
8
438
15
5
45
1
40
7
41
64
47
49
4
2
25
8
443
15
92
1
27
34
92
0
27
15
20
7
78
83
0
9
458
5
11
8
459
1
15
20
7
20
6
81
23
19
7
8
475
5
48
22
19
7
8
486
78
19
6
15
5
48
22
19
7
15
39
42
20
7
81
23
19
8
15
20
7
39
43
85
44
9
518
5
20
8
47
49
45
1
15
20
7
38
43
8
519
1
15
39
46
19
9
15
39
42
20
6
81
23
19
10
15
94
9
575
20
10
20
8
84
21
9
572
20
9
20
10
20
10
39
42
82
47
60
1
49
48
2
15
20
10
79
81
23
19
10
15
68
8
537
1
8
605
20
10
20
8
84
21
9
604
20
9
20
10
20
5
49
48
2
15
20
10
79
81
23
19
10
15
68
8
575
1
15
5
11
I
11
I
b
I
0
I
0
I
3
n
p
49
x
2
==
x
13
ArgumentError
n
s
25
wrong number of arguments
x
5
raise
x
6
equal?
n
x
5
Range
n
x
8
kind_of?
x
9
TypeError
n
s
25
length invalid with range
x
8
Rubinius
n
x
4
Type
x
5
begin
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
1
<
x
4
size
x
1
+
x
10
RangeError
n
x
7
inspect
x
4
to_s
s
13
 out of range
n
x
3
end
n
x
12
exclude_end?
x
2
<=
n
n
n
n
n
x
3
===
n
s
32
second argument must be a Fixnum
x
6
@start
x
6
@total
x
1
>
x
10
reallocate
x
6
@tuple
x
1
-
x
3
put
p
133
I
-1
I
32a
I
18
I
32b
I
1b
I
32d
I
1e
I
32e
I
28
I
32f
I
33
I
0
I
34
I
331
I
43
I
333
I
4b
I
334
I
58
I
333
I
59
I
0
I
5a
I
336
I
6c
I
0
I
6d
I
339
I
77
I
33a
I
8d
I
0
I
8e
I
33c
I
a3
I
33d
I
b6
I
0
I
b7
I
33e
I
d5
I
0
I
d6
I
340
I
eb
I
341
I
fe
I
0
I
ff
I
342
I
110
I
0
I
111
I
343
I
11f
I
0
I
121
I
345
I
134
I
346
I
146
I
347
I
159
I
0
I
15a
I
348
I
167
I
0
I
168
I
34a
I
17b
I
34c
I
196
I
0
I
19b
I
34d
I
1a8
I
34e
I
1bb
I
0
I
1bf
I
351
I
1cb
I
0
I
1cc
I
352
I
1d6
I
354
I
1db
I
0
I
1dd
I
357
I
1e1
I
358
I
1e6
I
0
I
1e7
I
35b
I
1f0
I
35d
I
1f8
I
35e
I
200
I
35f
I
206
I
35d
I
207
I
0
I
208
I
364
I
20d
I
366
I
216
I
368
I
219
I
369
I
221
I
36a
I
231
I
36b
I
23c
I
0
I
23f
I
36e
I
247
I
36f
I
251
I
370
I
25c
I
0
I
25e
I
374
I
260
x
22
kernel/common/array.rb
p
11
x
1
a
x
1
b
x
1
c
x
3
one
x
3
two
x
3
obj
x
4
left
x
5
right
x
5
total
x
5
tuple
x
1
i
x
5
first
M
1
n
n
x
5
first
i
76
23
0
10
8
91
19
0
15
20
0
91
49
0
1
9
25
5
78
47
49
1
1
11
8
26
1
15
45
2
3
43
4
20
0
45
5
6
7
7
49
8
3
19
0
15
20
0
78
84
9
9
65
5
45
10
11
7
12
64
47
49
13
2
8
66
1
15
5
78
20
0
47
49
14
2
11
I
5
I
1
I
0
I
0
I
1
n
p
15
x
6
equal?
x
2
at
x
8
Rubinius
n
x
4
Type
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
1
<
x
13
ArgumentError
n
s
21
Size must be positive
x
5
raise
x
2
[]
p
15
I
-1
I
37b
I
8
I
37c
I
1a
I
0
I
1b
I
37e
I
2d
I
37f
I
42
I
0
I
43
I
381
I
4c
x
22
kernel/common/array.rb
p
1
x
1
n
x
7
flatten
M
1
n
n
x
7
flatten
i
64
23
0
10
8
77
19
0
15
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
19
0
15
20
0
78
83
7
9
37
5
11
8
38
1
15
5
5
48
8
47
49
9
1
19
1
15
5
5
20
1
20
0
47
49
10
3
15
20
1
11
I
6
I
2
I
0
I
0
I
1
n
p
11
x
8
Rubinius
n
x
4
Type
x
7
Integer
n
x
6
to_int
x
9
coerce_to
x
2
==
x
4
size
x
12
new_reserved
x
19
recursively_flatten
p
15
I
-1
I
386
I
8
I
387
I
1a
I
388
I
26
I
0
I
27
I
38a
I
32
I
38b
I
3d
I
38c
I
40
x
22
kernel/common/array.rb
p
2
x
5
level
x
3
out
x
8
flatten!
M
1
n
n
x
8
flatten!
i
78
23
0
10
8
77
19
0
15
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
19
0
15
20
0
78
83
7
9
37
1
11
8
38
1
15
5
5
48
8
47
49
9
1
19
1
15
5
5
20
1
20
0
47
49
10
3
9
74
5
20
1
47
49
11
1
15
5
11
8
75
1
15
1
11
I
6
I
2
I
0
I
0
I
1
n
p
12
x
8
Rubinius
n
x
4
Type
x
7
Integer
n
x
6
to_int
x
9
coerce_to
x
2
==
x
4
size
x
12
new_reserved
x
19
recursively_flatten
x
7
replace
p
23
I
-1
I
392
I
8
I
393
I
1a
I
394
I
26
I
0
I
27
I
396
I
32
I
397
I
3e
I
398
I
46
I
399
I
4a
I
397
I
4b
I
0
I
4c
I
39c
I
4e
x
22
kernel/common/array.rb
p
2
x
5
level
x
3
out
x
4
hash
M
1
n
n
x
4
hash
i
254
5
48
0
19
0
15
45
1
2
43
3
79
49
4
1
19
1
15
5
48
5
19
2
15
45
6
7
49
8
0
49
9
0
19
3
15
20
3
7
10
49
11
1
9
123
20
3
20
2
49
11
1
9
66
5
45
6
12
43
13
47
49
14
1
8
67
1
15
29
98
1
26
93
0
15
20
3
20
2
2
13
18
3
49
15
2
15
15
5
56
16
47
50
17
0
30
8
109
26
20
3
20
2
49
18
1
15
27
34
20
3
20
2
49
18
1
15
15
20
0
11
8
249
29
214
1
26
93
1
15
26
93
2
15
29
173
0
20
3
7
10
2
13
18
3
49
15
2
15
15
20
3
20
2
2
13
18
3
49
15
2
15
15
5
56
19
47
50
17
0
30
8
208
26
93
3
15
24
13
45
6
20
43
13
12
49
21
1
10
192
8
203
15
5
48
0
92
2
27
32
25
8
208
15
92
3
27
34
92
2
27
30
8
233
26
20
3
7
10
49
18
1
15
20
3
20
2
49
18
1
15
27
34
20
3
7
10
49
18
1
15
20
3
20
2
49
18
1
15
15
20
0
11
11
I
c
I
4
I
0
I
0
I
0
n
p
22
x
4
size
x
6
Fixnum
n
x
3
MAX
x
2
>>
x
9
object_id
x
6
Thread
n
x
7
current
x
17
recursive_objects
x
30
__detect_outermost_recursion__
x
4
key?
n
x
22
InnerRecursionDetected
x
5
raise
x
3
[]=
M
1
p
2
x
9
for_block
t
n
x
4
hash
i
29
57
19
0
15
21
1
0
21
1
1
49
0
1
79
49
1
1
20
0
49
2
0
49
3
1
22
1
0
11
I
4
I
1
I
1
I
0
I
1
n
p
4
x
1
&
x
2
<<
x
4
hash
x
1
^
p
3
I
0
I
3b9
I
1d
x
22
kernel/common/array.rb
p
1
x
1
x
x
4
each
x
6
delete
M
1
p
2
x
9
for_block
t
n
x
4
hash
i
29
57
19
0
15
21
1
0
21
1
1
49
0
1
79
49
1
1
20
0
49
2
0
49
3
1
22
1
0
11
I
4
I
1
I
1
I
0
I
1
n
p
4
x
1
&
x
2
<<
x
4
hash
x
1
^
p
3
I
0
I
3c5
I
1d
x
22
kernel/common/array.rb
p
1
x
1
x
n
x
3
===
p
61
I
-1
I
3a2
I
0
I
3a3
I
6
I
3a4
I
12
I
3aa
I
18
I
3ab
I
24
I
3ae
I
2d
I
3b1
I
36
I
3b2
I
42
I
3b1
I
43
I
0
I
44
I
3b7
I
58
I
3b9
I
63
I
3bb
I
6d
I
3bb
I
76
I
3be
I
7b
I
3c2
I
82
I
3cf
I
89
I
3c2
I
96
I
3c3
I
a3
I
3c5
I
ad
I
0
I
b2
I
3ca
I
c1
I
3cb
I
d0
I
0
I
d7
I
3cd
I
df
I
3ce
I
e9
I
3cd
I
f1
I
3ce
I
f9
I
0
I
fa
I
3d2
I
fe
x
22
kernel/common/array.rb
p
4
x
8
hash_val
x
4
mask
x
2
id
x
7
objects
x
8
include?
M
1
n
n
x
8
include?
i
61
39
0
19
1
15
20
1
39
1
81
2
19
2
15
39
3
19
3
15
20
1
20
2
84
4
9
57
20
3
20
1
49
5
1
20
0
83
6
9
44
2
11
8
45
1
15
20
1
79
81
2
19
1
15
68
8
19
1
15
3
11
I
6
I
4
I
1
I
0
I
1
n
p
7
x
6
@start
x
6
@total
x
1
+
x
6
@tuple
x
1
<
x
2
at
x
2
==
p
21
I
-1
I
3d7
I
0
I
3e5
I
5
I
3e6
I
e
I
3e7
I
13
I
3e9
I
1b
I
3ea
I
2d
I
0
I
2e
I
3eb
I
39
I
0
I
3b
I
3ee
I
3d
x
22
kernel/common/array.rb
p
4
x
3
obj
x
1
i
x
5
total
x
5
tuple
x
5
index
M
1
n
n
x
5
index
i
39
23
0
10
8
91
19
0
15
78
19
1
15
20
0
91
49
0
1
9
29
5
56
1
47
50
2
0
8
36
5
56
3
47
50
2
0
15
1
11
I
4
I
2
I
0
I
0
I
1
n
p
4
x
6
equal?
M
1
p
2
x
9
for_block
t
n
x
5
index
i
28
57
19
0
15
20
0
60
1
9
16
21
1
1
31
8
17
1
15
21
1
1
79
81
0
22
1
1
11
I
4
I
1
I
1
I
0
I
1
n
p
1
x
1
+
p
9
I
0
I
3f8
I
4
I
3f9
I
11
I
0
I
12
I
3fa
I
1c
x
22
kernel/common/array.rb
p
1
x
1
x
x
4
each
M
1
p
2
x
9
for_block
t
n
x
5
index
i
31
57
19
0
15
20
0
21
1
0
83
0
9
19
21
1
1
31
8
20
1
15
21
1
1
79
81
1
22
1
1
11
I
4
I
1
I
1
I
0
I
1
n
p
2
x
2
==
x
1
+
p
9
I
0
I
3fd
I
4
I
3fe
I
14
I
0
I
15
I
3ff
I
1f
x
22
kernel/common/array.rb
p
1
x
1
x
p
15
I
-1
I
3f5
I
8
I
3f6
I
c
I
3f7
I
14
I
3f8
I
1d
I
3fd
I
24
I
0
I
25
I
402
I
27
x
22
kernel/common/array.rb
p
2
x
3
obj
x
1
i
x
7
indexes
M
1
n
n
x
7
indexes
i
25
5
7
0
64
47
49
1
1
15
35
0
19
1
15
20
0
56
2
50
3
0
15
20
1
11
I
4
I
2
I
0
I
0
I
0
I
0
p
4
s
56
Array#indexes is deprecated, use Array#values_at instead
x
4
warn
M
1
p
2
x
9
for_block
t
n
x
7
indexes
i
61
57
19
0
15
20
0
45
0
1
49
2
1
9
29
21
1
1
5
20
0
47
49
3
1
49
4
1
8
60
45
5
6
43
7
20
0
45
8
9
7
10
49
11
3
19
1
15
21
1
1
5
20
1
47
49
12
1
49
4
1
11
I
7
I
2
I
1
I
0
I
1
n
p
13
x
5
Range
n
x
8
kind_of?
x
2
[]
x
2
<<
x
8
Rubinius
n
x
4
Type
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
2
at
p
13
I
0
I
40c
I
4
I
40d
I
e
I
40e
I
1d
I
410
I
2f
I
411
I
3c
I
0
I
3d
x
22
kernel/common/array.rb
p
2
x
1
a
x
3
idx
x
4
each
p
11
I
-1
I
407
I
0
I
408
I
9
I
40a
I
e
I
40c
I
16
I
415
I
19
x
22
kernel/common/array.rb
p
2
x
4
args
x
3
out
x
7
indices
x
6
insert
M
1
n
n
x
6
insert
i
104
20
1
49
0
0
78
83
1
9
14
5
11
8
15
1
15
5
96
15
45
2
3
43
4
20
0
45
5
6
7
7
49
8
3
19
0
15
20
0
78
84
9
9
57
20
0
39
10
79
81
11
81
11
19
0
8
58
1
15
20
0
78
84
9
9
85
5
45
12
13
20
0
47
101
14
7
15
63
2
47
49
16
2
8
86
1
15
5
20
0
78
20
1
13
18
4
47
49
17
3
15
15
5
11
I
7
I
2
I
1
I
0
I
1
I
1
p
18
x
6
length
x
2
==
x
8
Rubinius
n
x
4
Type
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
1
<
x
6
@total
x
1
+
x
10
IndexError
n
x
4
to_s
s
14
 out of bounds
x
5
raise
x
3
[]=
p
25
I
-1
I
41e
I
0
I
41f
I
f
I
0
I
10
I
421
I
13
I
424
I
25
I
425
I
3a
I
0
I
3b
I
426
I
56
I
0
I
57
I
822
I
58
I
428
I
66
I
429
I
68
x
22
kernel/common/array.rb
p
2
x
3
idx
x
5
items
x
7
inspect
M
1
n
n
x
7
inspect
i
78
39
0
78
83
1
9
13
7
2
64
11
8
14
1
15
7
3
64
19
0
15
7
4
64
19
1
15
45
5
6
5
56
7
50
8
1
9
44
7
9
64
11
8
45
1
15
5
47
49
10
0
9
60
20
1
49
11
0
8
61
1
15
20
1
80
49
12
1
15
20
1
7
13
64
49
14
1
11
I
5
I
2
I
0
I
0
I
0
n
p
15
x
6
@total
x
2
==
s
2
[]
s
2
, 
s
1
[
x
6
Thread
n
M
1
p
2
x
9
for_block
t
n
x
7
inspect
i
8
5
56
0
47
50
1
0
11
I
3
I
0
I
0
I
0
I
0
I
-2
p
2
M
1
p
2
x
9
for_block
t
n
x
7
inspect
i
22
57
19
0
15
21
2
1
20
0
49
0
0
49
1
1
21
2
0
49
1
1
11
I
4
I
1
I
1
I
0
I
1
n
p
2
x
7
inspect
x
2
<<
p
3
I
0
I
437
I
16
x
22
kernel/common/array.rb
p
1
x
1
o
x
4
each
p
3
I
0
I
437
I
8
x
22
kernel/common/array.rb
p
0
x
16
detect_recursion
s
5
[...]
x
8
tainted?
x
5
taint
x
8
shorten!
s
1
]
x
2
<<
p
23
I
-1
I
430
I
0
I
431
I
e
I
0
I
f
I
433
I
15
I
434
I
1b
I
436
I
2d
I
0
I
2e
I
43a
I
3d
I
0
I
3e
I
43b
I
45
I
43c
I
4e
x
22
kernel/common/array.rb
p
2
x
5
comma
x
6
result
x
4
join
M
1
n
n
x
4
join
i
51
23
0
10
8
1
19
0
15
39
0
78
83
1
9
21
7
2
64
11
8
22
1
15
7
2
64
19
1
15
45
3
4
5
56
5
50
6
1
9
46
7
7
64
11
8
47
1
15
20
1
11
I
5
I
2
I
0
I
0
I
1
n
p
8
x
6
@total
x
2
==
s
0

x
6
Thread
n
M
1
p
2
x
9
for_block
t
n
x
4
join
i
284
21
1
0
9
15
5
21
1
0
47
49
0
1
8
23
99
43
1
7
2
49
3
1
22
1
0
15
21
1
0
49
4
0
13
10
41
15
5
49
4
0
9
51
21
1
1
49
5
0
8
52
1
15
39
6
39
7
49
3
1
19
0
15
20
0
13
45
8
9
12
49
10
1
9
86
15
21
1
1
20
0
49
11
1
8
125
13
45
12
13
12
49
10
1
9
113
15
21
1
1
20
0
21
1
0
49
14
1
49
11
1
8
125
15
21
1
1
20
0
49
15
0
49
11
1
15
20
0
49
4
0
9
141
21
1
1
49
5
0
8
142
1
15
39
7
5
47
49
16
0
81
17
19
1
15
39
7
79
81
17
19
2
15
20
2
20
1
84
18
9
282
21
1
1
21
1
0
49
11
1
15
39
6
20
2
49
3
1
19
0
15
20
0
13
45
8
19
12
49
10
1
9
214
15
21
1
1
20
0
49
11
1
8
253
13
45
12
20
12
49
10
1
9
241
15
21
1
1
20
0
21
1
0
49
14
1
49
11
1
8
253
15
21
1
1
20
0
49
15
0
49
11
1
15
20
0
49
4
0
9
269
21
1
1
49
5
0
8
270
1
15
20
2
79
81
17
19
2
15
68
8
163
1
11
I
7
I
3
I
0
I
0
I
0
I
-2
p
21
x
11
StringValue
x
7
Globals
x
2
$,
x
2
[]
x
8
tainted?
x
5
taint
x
6
@tuple
x
6
@start
x
6
String
n
x
3
===
x
6
append
x
5
Array
n
x
4
join
x
4
to_s
x
4
size
x
1
+
x
1
<
n
n
p
61
I
0
I
448
I
17
I
448
I
1b
I
449
I
34
I
0
I
35
I
44d
I
3f
I
44e
I
41
I
44f
I
4c
I
450
I
56
I
451
I
61
I
452
I
72
I
454
I
7d
I
0
I
7e
I
457
I
8e
I
0
I
8f
I
459
I
9b
I
45a
I
a3
I
45c
I
ab
I
45d
I
b5
I
45f
I
bf
I
461
I
c1
I
462
I
cc
I
463
I
d6
I
464
I
e1
I
465
I
f2
I
467
I
fd
I
0
I
fe
I
46a
I
10e
I
0
I
10f
I
46c
I
11a
I
0
I
11c
x
22
kernel/common/array.rb
p
3
x
1
x
x
5
total
x
1
i
x
16
detect_recursion
s
5
[...]
p
15
I
-1
I
443
I
8
I
444
I
16
I
0
I
17
I
446
I
1d
I
447
I
2f
I
0
I
30
I
470
I
33
x
22
kernel/common/array.rb
p
2
x
3
sep
x
3
out
x
4
last
M
1
n
n
x
4
last
i
146
23
0
10
8
91
19
0
15
5
48
0
79
84
1
9
35
20
0
91
49
2
1
9
28
1
11
8
29
1
15
35
0
11
8
36
1
15
20
0
91
49
2
1
9
54
5
77
47
49
3
1
11
8
55
1
15
45
4
5
43
6
20
0
45
7
8
7
9
49
10
3
19
0
15
20
0
78
83
11
9
86
35
0
11
8
87
1
15
20
0
78
84
1
9
108
5
45
12
13
7
14
64
47
49
15
2
8
109
1
15
20
0
5
48
0
85
16
9
126
5
48
0
19
0
8
127
1
15
5
44
43
17
20
0
49
18
0
77
49
19
2
47
49
20
1
11
I
5
I
1
I
0
I
0
I
1
n
p
21
x
4
size
x
1
<
x
6
equal?
x
2
at
x
8
Rubinius
n
x
4
Type
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
2
==
x
13
ArgumentError
n
s
22
count must be positive
x
5
raise
x
1
>
x
5
Range
x
2
-@
x
3
new
x
2
[]
p
35
I
-1
I
476
I
8
I
477
I
10
I
478
I
1d
I
0
I
1e
I
479
I
23
I
477
I
24
I
0
I
25
I
47c
I
37
I
0
I
38
I
47e
I
4a
I
47f
I
57
I
0
I
58
I
481
I
6d
I
0
I
6e
I
483
I
7f
I
0
I
80
I
484
I
92
x
22
kernel/common/array.rb
p
1
x
1
n
x
7
collect
x
3
map
x
8
collect!
x
4
map!
x
6
nitems
M
1
n
n
x
6
nitems
i
15
78
19
0
15
5
56
0
47
50
1
0
15
20
0
11
I
3
I
1
I
0
I
0
I
0
n
p
2
M
1
p
2
x
9
for_block
t
n
x
6
nitems
i
25
57
19
0
15
20
0
1
49
0
1
9
15
1
8
24
21
1
0
79
81
1
22
1
0
11
I
4
I
1
I
1
I
0
I
1
n
p
2
x
6
equal?
x
1
+
p
5
I
0
I
48e
I
18
I
0
I
19
x
22
kernel/common/array.rb
p
1
x
4
elem
x
4
each
p
9
I
-1
I
48c
I
0
I
48d
I
4
I
48e
I
c
I
48f
I
f
x
22
kernel/common/array.rb
p
1
x
3
sum
x
4
pack
M
1
n
x
10
array_pack
x
4
pack
i
45
20
0
45
0
1
49
2
1
9
13
1
8
26
5
5
20
0
47
49
3
1
47
49
4
1
11
15
5
45
5
6
7
7
20
0
47
101
8
63
2
47
49
9
2
11
I
5
I
1
I
1
I
0
I
1
n
p
10
x
6
String
n
x
8
kind_of?
x
11
StringValue
x
4
pack
x
13
ArgumentError
n
s
27
invalid directives string: 
x
4
to_s
x
5
raise
p
11
I
-1
I
4d2
I
0
I
4d5
I
d
I
4d6
I
1a
I
0
I
1b
I
4d9
I
2d
x
22
kernel/common/array.rb
p
1
x
10
directives
x
11
permutation
M
1
n
n
x
11
permutation
i
240
23
0
10
8
91
19
0
15
95
19
1
15
94
9
18
1
8
28
5
7
0
20
0
47
49
1
2
11
15
20
0
91
49
2
1
9
43
39
3
19
0
8
60
45
4
5
43
6
20
0
45
7
8
7
9
49
10
3
19
0
15
20
0
78
84
11
13
10
76
15
39
3
20
0
84
11
9
81
1
8
237
20
0
78
83
12
9
94
35
0
60
1
8
237
20
0
79
83
12
9
110
5
56
13
47
50
14
0
8
237
45
15
16
13
71
17
47
9
133
47
49
18
0
13
20
0
47
49
19
1
15
8
138
20
0
49
17
1
19
2
15
45
15
20
13
71
17
47
9
165
47
49
18
0
13
39
3
3
47
49
19
2
15
8
171
39
3
3
49
17
2
19
3
15
20
1
9
212
5
48
21
19
4
15
20
4
20
0
20
2
78
20
3
20
1
13
70
10
206
44
43
22
12
49
23
1
47
50
24
4
8
237
5
20
0
20
2
78
20
3
20
1
13
70
10
233
44
43
22
12
49
23
1
47
50
24
4
15
5
11
I
c
I
5
I
0
I
0
I
1
n
p
25
x
11
permutation
x
7
to_enum
x
6
equal?
x
6
@total
x
8
Rubinius
n
x
4
Type
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
1
<
x
2
==
M
1
p
2
x
9
for_block
t
n
x
11
permutation
i
11
57
19
0
15
20
0
35
1
60
1
11
I
3
I
1
I
1
I
0
I
1
n
p
0
p
3
I
0
I
505
I
b
x
22
kernel/common/array.rb
p
1
x
3
val
x
4
each
x
5
Array
n
x
3
new
x
8
allocate
x
10
initialize
n
x
3
dup
x
4
Proc
x
14
__from_block__
x
11
__permute__
p
41
I
-1
I
4f5
I
c
I
4f6
I
1c
I
0
I
1d
I
4f8
I
25
I
4f9
I
2b
I
4fb
I
3c
I
0
I
3d
I
4fe
I
51
I
500
I
58
I
502
I
5e
I
503
I
65
I
505
I
6e
I
508
I
8d
I
509
I
ae
I
50b
I
b2
I
50d
I
b8
I
50f
I
d4
I
512
I
ed
I
0
I
ee
I
516
I
f0
x
22
kernel/common/array.rb
p
5
x
3
num
x
5
block
x
4
perm
x
4
used
x
9
offensive
x
11
__permute__
M
1
n
n
x
11
__permute__
i
12
95
19
4
15
39
0
56
1
50
2
0
11
I
7
I
5
I
4
I
0
I
4
n
p
3
x
6
@total
M
1
p
2
x
9
for_block
t
n
x
11
__permute__
i
123
57
19
0
15
21
1
3
20
0
49
0
1
9
17
1
8
122
21
1
1
21
1
2
20
0
13
18
3
49
1
2
15
15
21
1
2
21
1
0
79
82
2
84
3
9
110
21
1
3
20
0
2
13
18
3
49
1
2
15
15
5
21
1
0
21
1
1
21
1
2
79
81
4
21
1
3
21
1
4
13
70
10
90
44
43
5
12
49
6
1
47
50
7
4
15
21
1
3
20
0
3
13
18
3
49
1
2
15
8
122
5
21
1
1
36
1
47
51
8
0
60
1
11
I
9
I
1
I
1
I
0
I
1
n
p
9
x
2
[]
x
3
[]=
x
1
-
x
1
<
x
1
+
x
4
Proc
x
14
__from_block__
x
11
__permute__
x
9
values_at
p
19
I
0
I
524
I
4
I
525
I
11
I
526
I
21
I
527
I
2e
I
528
I
3c
I
529
I
5f
I
52a
I
6e
I
52c
I
7a
I
0
I
7b
x
22
kernel/common/array.rb
p
1
x
1
i
x
5
times
p
5
I
-1
I
519
I
4
I
524
I
c
x
22
kernel/common/array.rb
p
5
x
3
num
x
4
perm
x
5
index
x
4
used
x
5
block
x
3
pop
M
1
n
n
x
3
pop
i
173
23
0
10
8
91
19
0
15
5
96
15
20
0
91
49
0
1
9
72
39
1
78
83
2
9
30
1
11
8
31
1
15
39
1
79
82
3
38
1
15
39
4
39
1
81
5
19
1
15
39
6
20
1
49
7
1
19
2
15
39
6
20
1
1
49
8
2
15
20
2
8
172
45
9
10
43
11
20
0
45
12
13
7
14
49
15
3
19
0
15
20
0
78
84
16
9
110
5
45
17
18
7
19
64
47
49
20
2
8
111
1
15
39
1
20
0
82
3
19
3
15
20
3
78
84
16
9
133
78
19
3
8
134
1
15
5
20
3
20
0
47
49
21
2
19
4
15
20
0
39
1
85
22
9
160
78
38
1
8
168
39
1
20
0
82
3
38
1
15
20
4
11
11
I
9
I
5
I
0
I
0
I
1
n
p
23
x
6
equal?
x
6
@total
x
2
==
x
1
-
x
6
@start
x
1
+
x
6
@tuple
x
2
at
x
3
put
x
8
Rubinius
n
x
4
Type
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
1
<
x
13
ArgumentError
n
s
19
negative array size
x
5
raise
x
2
[]
x
1
>
p
47
I
-1
I
534
I
8
I
535
I
b
I
537
I
13
I
538
I
1f
I
0
I
20
I
53a
I
28
I
53b
I
31
I
53d
I
3b
I
53e
I
44
I
540
I
48
I
542
I
5a
I
543
I
6f
I
0
I
70
I
545
I
79
I
546
I
86
I
0
I
87
I
548
I
93
I
54a
I
9b
I
54b
I
a0
I
54d
I
a8
I
0
I
a9
I
550
I
ac
I
0
I
ad
x
22
kernel/common/array.rb
p
5
x
4
many
x
5
index
x
4
elem
x
5
first
x
3
out
x
7
product
M
1
n
n
x
7
product
i
93
20
0
56
0
50
1
0
15
20
0
5
48
2
56
3
50
4
1
19
1
15
20
1
45
5
6
43
7
85
8
9
45
5
45
9
10
7
11
64
47
49
12
2
8
46
1
15
20
0
49
13
0
15
35
0
19
2
15
20
0
5
49
14
1
15
20
0
20
2
7
14
49
15
1
56
16
50
4
1
19
3
15
20
3
35
0
49
17
1
15
20
2
11
I
7
I
4
I
0
I
0
I
0
I
0
p
18
M
1
p
2
x
9
for_block
t
n
x
7
product
i
20
57
19
0
15
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
11
I
6
I
1
I
1
I
0
I
1
n
p
7
x
8
Rubinius
n
x
4
Type
x
5
Array
n
x
6
to_ary
x
9
coerce_to
p
3
I
0
I
55e
I
14
x
22
kernel/common/array.rb
p
1
x
1
x
x
4
map!
x
4
size
M
1
p
2
x
9
for_block
t
n
x
7
product
i
21
58
37
19
0
15
37
19
1
15
15
20
0
20
1
49
0
0
49
1
1
11
I
5
I
2
I
2
I
0
I
2
n
p
2
x
4
size
x
1
*
p
3
I
0
I
561
I
15
x
22
kernel/common/array.rb
p
2
x
1
n
x
1
x
x
6
inject
x
6
Fixnum
n
x
3
MAX
x
1
>
x
10
RangeError
n
s
27
product result is too large
x
5
raise
x
8
reverse!
x
4
push
x
6
method
M
1
p
2
x
9
for_block
t
n
x
7
product
i
18
58
37
19
0
15
37
19
1
15
15
5
56
0
47
50
1
0
11
I
5
I
2
I
2
I
0
I
2
n
p
2
M
1
p
2
x
9
for_block
t
n
x
7
product
i
13
57
19
0
15
21
1
1
56
0
50
1
0
11
I
4
I
1
I
1
I
0
I
1
n
p
2
M
1
p
2
x
9
for_block
t
n
x
7
product
i
22
57
19
0
15
21
2
0
21
1
0
49
0
0
20
0
49
1
1
49
2
1
11
I
5
I
1
I
1
I
0
I
1
n
p
3
x
3
dup
x
2
<<
x
4
call
p
5
I
0
I
571
I
4
I
572
I
16
x
22
kernel/common/array.rb
p
1
x
3
val
x
4
each
p
5
I
0
I
570
I
4
I
571
I
d
x
22
kernel/common/array.rb
p
1
x
7
partial
x
6
lambda
p
5
I
0
I
56f
I
a
I
570
I
12
x
22
kernel/common/array.rb
p
2
x
7
trigger
x
6
values
x
4
call
p
27
I
-1
I
55d
I
0
I
55e
I
8
I
561
I
15
I
563
I
20
I
564
I
2d
I
563
I
2e
I
0
I
2f
I
56a
I
35
I
56c
I
3a
I
56d
I
41
I
56f
I
52
I
577
I
5a
I
579
I
5d
x
22
kernel/common/array.rb
p
4
x
4
args
x
3
sum
x
6
result
x
12
outer_lambda
x
4
push
M
1
n
n
x
4
push
i
21
20
0
49
0
0
9
11
5
11
8
12
1
15
5
20
0
47
49
1
1
11
I
3
I
1
I
0
I
0
I
0
I
0
p
2
x
6
empty?
x
6
concat
p
9
I
-1
I
57e
I
0
I
57f
I
c
I
0
I
d
I
581
I
15
x
22
kernel/common/array.rb
p
1
x
4
args
x
6
rassoc
M
1
n
n
x
6
rassoc
i
10
5
56
0
47
50
1
0
15
1
11
I
3
I
1
I
1
I
0
I
1
n
p
2
M
1
p
2
x
9
for_block
t
n
x
6
rassoc
i
36
57
19
0
15
20
0
45
0
1
49
2
1
13
9
27
15
20
0
79
49
3
1
21
1
0
83
4
9
34
20
0
31
8
35
1
11
I
4
I
1
I
1
I
0
I
1
n
p
5
x
5
Array
n
x
8
kind_of?
x
2
at
x
2
==
p
11
I
0
I
589
I
4
I
58a
I
1d
I
58b
I
22
I
58a
I
23
I
0
I
24
x
22
kernel/common/array.rb
p
1
x
4
elem
x
4
each
p
7
I
-1
I
588
I
0
I
589
I
8
I
58f
I
a
x
22
kernel/common/array.rb
p
1
x
3
obj
x
6
reject
M
1
n
n
x
6
reject
i
44
95
19
0
15
94
9
10
1
8
18
5
7
0
47
49
1
1
11
15
5
48
2
20
0
13
70
10
35
44
43
3
12
49
4
1
50
5
0
13
10
43
15
5
11
I
4
I
1
I
0
I
0
I
0
n
p
6
x
6
reject
x
7
to_enum
x
3
dup
x
4
Proc
x
14
__from_block__
x
7
reject!
p
9
I
-1
I
595
I
4
I
596
I
12
I
0
I
13
I
597
I
2c
x
22
kernel/common/array.rb
p
1
x
5
block
x
7
reject!
M
1
n
n
x
7
reject!
i
68
95
19
0
15
5
96
15
94
9
13
1
8
21
5
7
0
47
49
1
1
11
15
5
47
49
2
0
19
1
15
5
20
0
13
70
10
44
44
43
3
12
49
4
1
47
50
5
0
15
20
1
5
47
49
2
0
83
6
9
64
1
11
8
65
1
15
5
11
I
5
I
2
I
0
I
0
I
0
n
p
7
x
7
reject!
x
7
to_enum
x
4
size
x
4
Proc
x
14
__from_block__
x
9
delete_if
x
2
==
p
19
I
-1
I
59c
I
4
I
59d
I
7
I
59f
I
15
I
0
I
16
I
5a1
I
1e
I
5a2
I
31
I
5a4
I
41
I
0
I
42
I
5a5
I
44
x
22
kernel/common/array.rb
p
2
x
5
block
x
3
was
x
7
replace
M
1
n
n
x
7
replace
i
50
5
96
15
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
19
0
15
20
0
49
7
0
49
8
0
38
9
15
20
0
49
10
0
38
11
15
20
0
49
12
0
38
13
15
5
11
I
5
I
1
I
1
I
0
I
1
n
p
14
x
8
Rubinius
n
x
4
Type
x
5
Array
n
x
6
to_ary
x
9
coerce_to
x
5
tuple
x
3
dup
x
6
@tuple
x
5
total
x
6
@total
x
5
start
x
6
@start
p
15
I
-1
I
5aa
I
0
I
5ab
I
3
I
5ad
I
15
I
5af
I
20
I
5b0
I
28
I
5b1
I
30
I
5b2
I
32
x
22
kernel/common/array.rb
p
1
x
5
other
x
15
initialize_copy
x
7
reverse
M
1
n
n
x
7
reverse
i
7
5
48
0
49
1
0
11
I
1
I
0
I
0
I
0
I
0
n
p
2
x
3
dup
x
8
reverse!
p
5
I
-1
I
5ba
I
0
I
5bb
I
7
x
22
kernel/common/array.rb
p
0
x
8
reverse!
M
1
n
n
x
8
reverse!
i
29
5
96
15
39
0
79
85
1
9
13
1
8
15
5
11
15
39
2
39
3
39
0
49
4
2
15
5
11
11
I
3
I
0
I
0
I
0
I
0
n
p
5
x
6
@total
x
1
>
x
6
@tuple
x
6
@start
x
8
reverse!
p
13
I
-1
I
5c0
I
0
I
5c1
I
3
I
5c3
I
f
I
0
I
10
I
5c5
I
1a
I
5c7
I
1d
x
22
kernel/common/array.rb
p
0
x
12
reverse_each
M
1
n
n
x
12
reverse_each
i
70
94
9
6
1
8
14
5
7
0
47
49
1
1
11
15
39
2
79
82
3
19
0
15
20
0
39
4
81
5
19
1
15
39
6
19
2
15
20
1
20
0
85
7
9
66
20
2
20
1
49
8
1
60
1
15
20
1
79
82
3
19
1
15
68
8
37
1
15
5
11
I
5
I
3
I
0
I
0
I
0
n
p
9
x
12
reverse_each
x
7
to_enum
x
6
@start
x
1
-
x
6
@total
x
1
+
x
6
@tuple
x
1
>
x
2
at
p
23
I
-1
I
5cc
I
0
I
5cd
I
e
I
0
I
f
I
5cf
I
17
I
5d0
I
20
I
5d1
I
25
I
5d3
I
2d
I
5d4
I
37
I
5d5
I
42
I
0
I
44
I
5d8
I
46
x
22
kernel/common/array.rb
p
3
x
4
stop
x
1
i
x
5
tuple
x
6
rindex
M
1
n
n
x
6
rindex
i
166
23
0
10
8
91
19
0
15
20
0
91
49
0
1
9
101
94
9
22
1
8
32
5
7
1
20
0
47
49
2
2
11
15
39
3
79
82
4
19
1
15
20
1
78
49
5
1
9
98
39
6
39
7
20
1
81
8
49
9
1
60
1
9
69
20
1
11
8
70
1
15
20
1
39
3
85
10
9
85
39
3
19
1
8
86
1
15
20
1
79
82
4
19
1
15
68
8
41
1
8
163
39
7
79
82
4
19
2
15
20
2
39
3
81
8
19
1
15
39
6
19
3
15
20
1
20
2
85
10
9
162
20
3
20
1
49
9
1
20
0
83
11
9
149
20
1
11
8
150
1
15
20
1
79
82
4
19
1
15
68
8
123
1
15
1
11
I
7
I
4
I
0
I
0
I
1
n
p
12
x
6
equal?
x
6
rindex
x
7
to_enum
x
6
@total
x
1
-
x
2
>=
x
6
@tuple
x
6
@start
x
1
+
x
2
at
x
1
>
x
2
==
p
43
I
-1
I
5df
I
8
I
5e0
I
10
I
5e1
I
20
I
0
I
21
I
5e3
I
29
I
5e4
I
31
I
5e5
I
46
I
0
I
47
I
5e8
I
56
I
0
I
57
I
5ea
I
62
I
0
I
65
I
5ed
I
6d
I
5ee
I
76
I
5ef
I
7b
I
5f1
I
83
I
5f2
I
96
I
0
I
97
I
5f3
I
a2
I
0
I
a4
I
5f6
I
a6
x
22
kernel/common/array.rb
p
4
x
3
obj
x
1
i
x
4
stop
x
5
tuple
x
6
choice
M
1
n
n
x
6
choice
i
15
5
45
0
1
5
48
2
49
3
1
47
49
4
1
11
I
3
I
0
I
0
I
0
I
0
n
p
5
x
6
Kernel
n
x
4
size
x
4
rand
x
2
at
p
5
I
-1
I
5fa
I
0
I
5fb
I
f
x
22
kernel/common/array.rb
p
0
x
6
select
x
8
find_all
x
5
shift
M
1
n
n
x
5
shift
i
120
23
0
10
8
91
19
0
15
5
96
15
20
0
91
49
0
1
9
71
39
1
78
83
2
9
30
1
11
8
31
1
15
39
3
39
4
49
5
1
19
1
15
39
3
39
4
1
49
6
2
15
39
4
79
81
7
38
4
15
39
1
79
82
8
38
1
15
20
1
8
119
45
9
10
43
11
20
0
45
12
13
7
14
49
15
3
19
0
15
20
0
78
84
16
9
109
5
45
17
18
7
19
64
47
49
20
2
8
110
1
15
5
78
20
0
47
49
21
2
11
I
6
I
2
I
0
I
0
I
1
n
p
22
x
6
equal?
x
6
@total
x
2
==
x
6
@tuple
x
6
@start
x
2
at
x
3
put
x
1
+
x
1
-
x
8
Rubinius
n
x
4
Type
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
1
<
x
13
ArgumentError
n
s
19
negative array size
x
5
raise
x
6
slice!
p
31
I
-1
I
605
I
8
I
606
I
b
I
608
I
13
I
609
I
1f
I
0
I
20
I
60a
I
2a
I
60b
I
33
I
60c
I
3b
I
60d
I
43
I
60f
I
47
I
611
I
59
I
612
I
6e
I
0
I
6f
I
614
I
77
I
0
I
78
x
22
kernel/common/array.rb
p
2
x
1
n
x
3
obj
x
4
drop
M
1
n
n
x
4
drop
i
88
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
19
0
15
20
0
78
84
7
9
38
5
45
8
9
7
10
64
47
49
11
2
8
39
1
15
39
12
78
83
13
9
52
35
0
11
8
53
1
15
39
12
20
0
82
14
19
1
15
20
1
78
49
15
1
9
76
35
0
11
8
77
1
15
5
20
0
20
1
47
49
16
2
11
I
6
I
2
I
1
I
0
I
1
n
p
17
x
8
Rubinius
n
x
4
Type
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
1
<
x
13
ArgumentError
n
s
29
attempt to drop negative size
x
5
raise
x
6
@total
x
2
==
x
1
-
x
2
<=
x
9
new_range
p
21
I
-1
I
625
I
0
I
626
I
12
I
627
I
27
I
0
I
28
I
629
I
35
I
0
I
36
I
62b
I
3f
I
62c
I
4d
I
0
I
4e
I
62e
I
58
x
22
kernel/common/array.rb
p
2
x
1
n
x
8
new_size
x
6
slice!
M
1
n
n
x
6
slice!
i
314
23
1
10
8
91
19
1
15
5
96
15
20
1
91
49
0
1
9
223
20
0
45
1
2
49
3
1
9
99
5
20
0
47
49
4
1
19
2
15
45
5
6
43
7
20
0
49
8
0
45
9
10
7
11
49
12
3
19
3
15
20
3
39
13
49
14
1
13
10
80
15
20
3
49
15
0
39
13
85
16
9
85
1
8
97
5
20
0
1
13
18
3
47
49
17
2
15
8
221
45
5
18
43
7
20
0
45
19
20
7
11
49
12
3
19
0
15
20
0
78
84
21
9
134
20
0
39
13
81
22
19
0
8
135
1
15
20
0
78
49
14
1
13
9
152
15
20
0
39
13
84
21
9
157
1
8
160
20
2
11
15
39
23
20
0
39
24
81
22
49
25
1
19
2
15
20
0
78
83
26
9
208
39
23
39
24
1
49
27
2
15
39
13
79
82
28
38
13
15
39
24
79
81
22
38
24
8
221
5
20
0
79
1
13
18
4
47
49
17
3
15
8
310
45
5
29
43
7
20
0
45
9
30
7
11
49
12
3
19
0
15
45
5
31
43
7
20
1
45
9
32
7
11
49
12
3
19
1
15
5
20
0
20
1
47
49
4
2
19
2
15
20
0
39
13
49
14
1
13
10
291
15
20
0
49
15
0
39
13
85
16
9
296
1
8
310
5
20
0
20
1
1
13
18
4
47
49
17
3
15
15
20
2
11
I
9
I
4
I
1
I
0
I
2
n
p
33
x
6
equal?
x
5
Range
n
x
8
kind_of?
x
2
[]
x
8
Rubinius
n
x
4
Type
x
5
begin
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
x
6
@total
x
2
>=
x
2
-@
x
1
>
x
3
[]=
n
x
7
Integer
n
x
1
<
x
1
+
x
6
@tuple
x
6
@start
x
2
at
x
2
==
x
3
put
x
1
-
n
n
n
n
p
63
I
-1
I
634
I
8
I
635
I
b
I
637
I
13
I
638
I
1d
I
639
I
27
I
63b
I
3c
I
63c
I
55
I
822
I
56
I
63d
I
61
I
0
I
63
I
642
I
75
I
643
I
87
I
0
I
88
I
648
I
a0
I
0
I
a1
I
64a
I
af
I
64d
I
b6
I
64e
I
bf
I
64f
I
c7
I
650
I
d0
I
822
I
d1
I
652
I
dd
I
0
I
df
I
656
I
f1
I
657
I
103
I
659
I
10f
I
65b
I
128
I
822
I
129
I
65c
I
136
I
0
I
137
I
660
I
13a
x
22
kernel/common/array.rb
p
4
x
5
start
x
6
length
x
3
out
x
1
s
x
7
shuffle
M
1
n
n
x
7
shuffle
i
7
5
48
0
49
1
0
11
I
1
I
0
I
0
I
0
I
0
n
p
2
x
3
dup
x
8
shuffle!
p
5
I
-1
I
664
I
0
I
665
I
7
x
22
kernel/common/array.rb
p
0
x
8
shuffle!
M
1
n
n
x
8
shuffle!
i
14
5
96
15
5
48
0
56
1
50
2
0
15
5
11
I
2
I
0
I
0
I
0
I
0
n
p
3
x
4
size
M
1
p
2
x
9
for_block
t
n
x
8
shuffle!
i
34
57
19
0
15
20
0
45
0
1
5
48
2
20
0
82
3
49
4
1
81
5
19
1
15
39
6
20
0
20
1
49
7
2
11
I
7
I
2
I
1
I
0
I
1
n
p
8
x
6
Kernel
n
x
4
size
x
1
-
x
4
rand
x
1
+
x
6
@tuple
x
4
swap
p
7
I
0
I
66c
I
4
I
66d
I
18
I
66e
I
22
x
22
kernel/common/array.rb
p
2
x
1
i
x
1
r
x
5
times
p
9
I
-1
I
669
I
0
I
66a
I
3
I
66c
I
c
I
670
I
e
x
22
kernel/common/array.rb
p
0
x
4
sort
M
1
n
n
x
4
sort
i
24
95
19
0
15
5
48
0
20
0
13
70
10
20
44
43
1
12
49
2
1
50
3
0
11
I
4
I
1
I
0
I
0
I
0
n
p
4
x
3
dup
x
4
Proc
x
14
__from_block__
x
12
sort_inplace
p
5
I
-1
I
678
I
4
I
679
I
18
x
22
kernel/common/array.rb
p
1
x
5
block
x
12
sort_inplace
M
1
n
n
x
12
sort_inplace
i
95
95
19
0
15
5
96
15
39
0
79
85
1
9
17
1
8
19
5
11
15
39
0
39
2
82
3
4
13
84
4
9
74
20
0
9
56
5
39
2
39
2
39
0
81
5
79
82
3
20
0
47
49
6
3
8
72
5
39
2
39
2
39
0
81
5
79
82
3
47
49
7
2
8
92
20
0
9
87
5
20
0
47
49
8
1
8
92
5
47
49
9
0
15
5
11
I
5
I
1
I
0
I
0
I
0
n
p
10
x
6
@total
x
1
>
x
6
@start
x
1
-
x
1
<
x
1
+
x
12
isort_block!
x
6
isort!
x
12
qsort_block!
x
6
qsort!
p
29
I
-1
I
685
I
4
I
686
I
7
I
688
I
13
I
0
I
14
I
68a
I
20
I
68b
I
24
I
68c
I
38
I
68e
I
48
I
0
I
4a
I
691
I
4e
I
692
I
57
I
694
I
5c
I
0
I
5d
I
698
I
5f
x
22
kernel/common/array.rb
p
1
x
5
block
x
9
protected
x
5
sort!
x
6
public
x
4
to_a
M
1
n
n
x
4
to_a
i
39
5
45
0
1
49
2
1
9
12
5
8
38
45
0
3
13
71
4
47
9
34
47
49
5
0
13
5
47
49
6
1
15
8
38
5
49
4
1
11
I
3
I
0
I
0
I
0
I
0
n
p
7
x
5
Array
n
x
12
instance_of?
n
x
3
new
x
8
allocate
x
10
initialize
p
11
I
-1
I
6a6
I
0
I
6a7
I
9
I
6a8
I
c
I
6aa
I
26
I
0
I
27
x
22
kernel/common/array.rb
p
0
x
6
to_ary
M
1
n
n
x
6
to_ary
i
2
5
11
I
1
I
0
I
0
I
0
I
0
n
p
0
p
5
I
-1
I
6af
I
0
I
6b0
I
2
x
22
kernel/common/array.rb
p
0
x
9
transpose
M
1
n
n
x
9
transpose
i
34
5
47
49
0
0
9
12
35
0
11
8
13
1
15
35
0
19
0
15
1
19
1
15
5
56
1
47
50
2
0
15
20
0
11
I
4
I
2
I
0
I
0
I
0
n
p
3
x
6
empty?
M
1
p
2
x
9
for_block
t
n
x
9
transpose
i
76
57
19
0
15
45
0
1
43
2
20
0
45
3
4
7
5
49
6
3
19
0
15
21
1
1
13
10
37
15
20
0
49
7
0
22
1
1
15
20
0
49
7
0
21
1
1
83
8
9
53
1
8
64
5
45
9
10
7
11
64
47
49
12
2
15
20
0
49
7
0
56
13
50
14
0
11
I
6
I
1
I
1
I
0
I
1
n
p
15
x
8
Rubinius
n
x
4
Type
x
5
Array
n
x
6
to_ary
x
9
coerce_to
x
4
size
x
2
==
x
10
IndexError
n
s
30
All arrays must be same length
x
5
raise
M
1
p
2
x
9
for_block
t
n
x
9
transpose
i
50
57
19
0
15
21
2
0
20
0
14
2
49
0
1
13
10
29
15
35
0
13
18
3
49
1
2
15
8
33
18
2
16
2
19
1
15
20
1
21
1
0
20
0
49
2
1
49
3
1
11
I
7
I
2
I
1
I
0
I
1
n
p
4
x
2
[]
x
3
[]=
x
2
at
x
2
<<
p
7
I
0
I
6c4
I
4
I
6c5
I
24
I
6c6
I
32
x
22
kernel/common/array.rb
p
2
x
1
i
x
5
entry
x
5
times
p
13
I
0
I
6bd
I
4
I
6be
I
16
I
6bf
I
26
I
6c2
I
40
I
0
I
41
I
6c4
I
4c
x
22
kernel/common/array.rb
p
1
x
3
ary
x
4
each
p
15
I
-1
I
6b7
I
0
I
6b8
I
d
I
0
I
e
I
6ba
I
13
I
6bb
I
17
I
6bd
I
1f
I
6ca
I
22
x
22
kernel/common/array.rb
p
2
x
3
out
x
3
max
x
9
values_at
M
1
n
n
x
9
values_at
i
16
35
0
19
1
15
20
0
56
0
50
1
0
15
20
1
11
I
4
I
2
I
0
I
0
I
0
I
0
p
2
M
1
p
2
x
9
for_block
t
n
x
9
values_at
i
198
57
19
0
15
20
0
45
0
1
49
2
1
9
166
45
3
4
43
5
20
0
49
6
0
45
7
8
7
9
49
10
3
19
1
15
45
3
11
43
5
20
0
49
12
0
45
7
13
7
9
49
10
3
19
2
15
20
2
78
84
14
9
73
20
2
39
15
81
16
19
2
8
74
1
15
20
2
78
84
14
9
86
1
11
8
87
1
15
20
1
78
84
14
9
105
20
1
39
15
81
16
19
1
8
106
1
15
20
0
49
17
0
9
123
20
1
79
82
18
19
1
8
124
1
15
20
1
39
15
84
14
9
136
1
8
140
39
15
19
1
15
20
1
20
2
84
14
9
153
1
11
8
154
1
15
20
2
20
1
56
19
50
20
1
8
197
45
3
21
43
5
20
0
45
7
22
7
9
49
10
3
19
3
15
21
1
1
5
20
3
47
49
23
1
49
24
1
11
I
9
I
4
I
1
I
0
I
1
n
p
25
x
5
Range
n
x
8
kind_of?
x
8
Rubinius
n
x
4
Type
x
4
last
x
6
Fixnum
n
x
6
to_int
x
9
coerce_to
n
x
5
first
n
x
1
<
x
6
@total
x
1
+
x
12
exclude_end?
x
1
-
M
1
p
2
x
9
for_block
t
n
x
9
values_at
i
18
57
19
0
15
21
2
1
5
20
0
47
49
0
1
49
1
1
11
I
5
I
1
I
1
I
0
I
1
n
p
2
x
2
at
x
2
<<
p
3
I
0
I
6e3
I
12
x
22
kernel/common/array.rb
p
1
x
1
i
x
4
upto
n
n
x
2
at
x
2
<<
p
41
I
0
I
6d4
I
4
I
6d6
I
e
I
6d7
I
23
I
6d8
I
38
I
6da
I
4a
I
0
I
4b
I
6db
I
57
I
0
I
58
I
6dd
I
6a
I
0
I
6b
I
6de
I
7c
I
0
I
7d
I
6df
I
8c
I
0
I
8d
I
6e1
I
9a
I
0
I
9b
I
6e3
I
a6
I
6e6
I
b8
I
6e7
I
c5
I
0
I
c6
x
22
kernel/common/array.rb
p
4
x
4
elem
x
6
finish
x
5
start
x
1
i
x
4
each
p
9
I
-1
I
6d1
I
0
I
6d2
I
5
I
6d4
I
d
I
6eb
I
10
x
22
kernel/common/array.rb
p
2
x
4
args
x
3
out
x
3
zip
M
1
n
n
x
3
zip
i
53
45
0
1
5
48
2
56
3
50
4
1
19
1
15
20
0
56
5
50
6
0
19
0
15
5
48
2
56
7
50
8
0
15
94
9
48
20
1
56
9
50
10
0
15
1
11
8
49
1
15
20
1
11
I
5
I
2
I
0
I
0
I
0
I
0
p
11
x
5
Array
n
x
4
size
M
1
p
2
x
9
for_block
t
n
x
3
zip
i
3
35
0
11
I
2
I
0
I
0
I
0
I
0
I
-2
p
0
p
3
I
0
I
702
I
3
x
22
kernel/common/array.rb
p
0
x
3
new
M
1
p
2
x
9
for_block
t
n
x
3
zip
i
10
57
19
0
15
20
0
49
0
0
11
I
3
I
1
I
1
I
0
I
1
n
p
1
x
6
to_ary
p
3
I
0
I
703
I
a
x
22
kernel/common/array.rb
p
1
x
3
ary
x
3
map
M
1
p
2
x
9
for_block
t
n
x
3
zip
i
41
57
19
0
15
21
1
1
20
0
49
0
1
19
1
15
20
1
39
1
39
2
20
0
81
3
49
0
1
49
4
1
15
21
1
0
56
5
50
6
0
11
I
7
I
2
I
1
I
0
I
1
n
p
7
x
2
at
x
6
@tuple
x
6
@start
x
1
+
x
2
<<
M
1
p
2
x
9
for_block
t
n
x
3
zip
i
19
57
19
0
15
21
1
1
20
0
21
1
0
49
0
1
49
1
1
11
I
5
I
1
I
1
I
0
I
1
n
p
2
x
2
at
x
2
<<
p
3
I
0
I
708
I
13
x
22
kernel/common/array.rb
p
1
x
3
ary
x
4
each
p
9
I
0
I
705
I
4
I
706
I
f
I
707
I
20
I
708
I
29
x
22
kernel/common/array.rb
p
2
x
1
i
x
4
slot
x
5
times
M
1
p
2
x
9
for_block
t
n
x
3
zip
i
9
57
19
0
15
20
0
60
1
11
I
3
I
1
I
1
I
0
I
1
n
p
0
p
3
I
0
I
70c
I
9
x
22
kernel/common/array.rb
p
1
x
3
ary
x
4
each
p
21
I
-1
I
701
I
0
I
702
I
e
I
703
I
18
I
705
I
21
I
70b
I
24
I
70c
I
2c
I
70d
I
30
I
70b
I
31
I
0
I
32
I
710
I
35
x
22
kernel/common/array.rb
p
2
x
6
others
x
3
out
x
7
unshift
M
1
n
n
x
7
unshift
i
164
20
0
49
0
0
9
11
5
11
8
12
1
15
5
96
15
39
1
20
0
49
2
0
85
3
9
59
39
1
20
0
49
2
0
82
4
38
1
15
39
5
20
0
49
6
0
78
20
0
49
2
0
39
1
49
7
4
8
149
45
8
9
43
10
13
71
11
47
9
91
47
49
12
0
13
39
13
20
0
49
2
0
81
14
47
49
15
1
15
8
103
39
13
20
0
49
2
0
81
14
49
11
1
19
1
15
20
1
20
0
49
6
0
78
20
0
49
2
0
78
49
7
4
15
20
1
39
5
39
1
39
13
20
0
49
2
0
49
7
4
15
78
38
1
15
20
1
38
5
15
39
13
20
0
49
2
0
81
14
38
13
15
5
11
I
7
I
2
I
0
I
0
I
0
I
0
p
16
x
6
empty?
x
6
@start
x
4
size
x
1
>
x
1
-
x
6
@tuple
x
5
tuple
x
9
copy_from
x
8
Rubinius
n
x
5
Tuple
x
3
new
x
8
allocate
x
6
@total
x
1
+
x
10
initialize
p
31
I
-1
I
713
I
0
I
714
I
c
I
0
I
d
I
716
I
10
I
718
I
1b
I
71a
I
27
I
71b
I
3b
I
71d
I
6a
I
71e
I
7c
I
71f
I
8d
I
720
I
91
I
721
I
95
I
0
I
96
I
724
I
a2
I
725
I
a4
x
22
kernel/common/array.rb
p
2
x
6
values
x
9
new_tuple
x
10
reallocate
M
1
n
n
x
10
reallocate
i
100
20
0
39
0
49
1
0
84
2
9
15
1
11
8
16
1
15
39
0
49
1
0
80
49
3
1
19
1
15
20
1
20
0
84
2
9
43
20
0
19
1
8
44
1
15
45
4
5
43
6
13
71
7
47
9
70
47
49
8
0
13
20
1
47
49
9
1
15
8
75
20
1
49
7
1
19
2
15
20
2
39
0
39
10
39
11
78
49
12
4
15
78
38
10
15
20
2
38
0
11
I
8
I
3
I
1
I
0
I
1
n
p
13
x
6
@tuple
x
4
size
x
1
<
x
1
*
x
8
Rubinius
n
x
5
Tuple
x
3
new
x
8
allocate
x
10
initialize
x
6
@start
x
6
@total
x
9
copy_from
p
25
I
-1
I
729
I
0
I
72a
I
10
I
0
I
11
I
72c
I
1d
I
72e
I
25
I
72f
I
2b
I
72e
I
2c
I
0
I
2d
I
732
I
4e
I
733
I
5b
I
735
I
5f
I
736
I
64
x
22
kernel/common/array.rb
p
3
x
8
at_least
x
9
new_total
x
9
new_tuple
x
17
reallocate_shrink
M
1
n
n
x
17
reallocate_shrink
i
124
39
0
49
1
0
19
0
15
39
2
20
0
4
3
49
3
1
85
4
9
25
1
11
8
26
1
15
20
0
80
49
3
1
19
0
15
68
39
2
20
0
4
6
49
3
1
84
5
9
52
8
27
1
15
45
6
7
43
8
13
71
9
47
9
79
47
49
10
0
13
20
0
47
49
11
1
15
8
84
20
0
49
9
1
19
1
15
20
0
39
2
82
12
80
49
3
1
19
2
15
20
1
39
0
39
13
39
2
20
2
49
14
4
15
20
2
38
13
15
20
1
38
0
11
I
8
I
3
I
0
I
0
I
0
n
p
15
x
6
@tuple
x
4
size
x
6
@total
x
6
divide
x
1
>
x
1
<
x
8
Rubinius
n
x
5
Tuple
x
3
new
x
8
allocate
x
10
initialize
x
1
-
x
6
@start
x
9
copy_from
p
25
I
-1
I
73b
I
0
I
73c
I
8
I
73d
I
1a
I
0
I
1b
I
741
I
25
I
742
I
34
I
0
I
36
I
744
I
57
I
746
I
64
I
747
I
72
I
749
I
77
I
74a
I
7c
x
22
kernel/common/array.rb
p
3
x
9
new_total
x
9
new_tuple
x
9
new_start
x
19
recursively_flatten
M
1
n
n
x
19
recursively_flatten
i
76
23
2
10
8
77
19
2
15
3
19
3
15
20
2
78
83
0
9
31
20
1
20
0
49
1
1
15
3
11
8
32
1
15
20
2
79
82
2
19
2
15
45
3
4
20
0
56
5
50
6
1
19
4
15
20
4
9
71
5
45
7
8
7
9
64
47
49
10
2
8
72
1
15
20
3
11
I
8
I
5
I
2
I
0
I
3
n
p
11
x
2
==
x
6
concat
x
1
-
x
6
Thread
n
M
1
p
2
x
9
for_block
t
n
x
19
recursively_flatten
i
110
21
1
0
49
0
0
19
0
15
20
0
21
1
0
49
1
0
81
2
19
1
15
21
1
0
49
3
0
19
2
15
20
0
20
1
84
4
9
108
20
2
20
0
49
5
1
19
3
15
45
6
7
43
8
20
3
45
9
10
7
11
49
12
3
19
4
9
88
2
22
1
3
15
5
20
4
21
1
1
21
1
2
47
49
13
3
8
96
21
1
1
20
3
49
14
1
15
20
0
79
81
2
19
0
15
68
8
31
1
11
I
a
I
5
I
0
I
0
I
0
I
-2
p
15
x
5
start
x
5
total
x
1
+
x
5
tuple
x
1
<
x
2
at
x
8
Rubinius
n
x
4
Type
x
5
Array
n
x
6
to_ary
x
11
try_convert
x
19
recursively_flatten
x
2
<<
p
25
I
0
I
75c
I
9
I
75d
I
16
I
75e
I
1f
I
760
I
27
I
761
I
31
I
763
I
44
I
764
I
49
I
765
I
58
I
767
I
60
I
0
I
61
I
76a
I
6c
I
0
I
6e
x
22
kernel/common/array.rb
p
5
x
1
i
x
5
total
x
5
tuple
x
1
o
x
3
ary
x
16
detect_recursion
x
13
ArgumentError
n
s
32
tried to flatten recursive array
x
5
raise
p
25
I
-1
I
751
I
8
I
752
I
c
I
755
I
13
I
756
I
1b
I
757
I
1f
I
755
I
20
I
0
I
21
I
75a
I
29
I
75b
I
36
I
76e
I
48
I
0
I
49
I
76f
I
4c
x
22
kernel/common/array.rb
p
5
x
5
array
x
3
out
x
10
max_levels
x
8
modified
x
9
recursion
x
6
qsort!
M
1
n
n
x
6
qsort!
i
216
39
0
39
0
39
1
81
2
79
82
3
35
2
35
1
19
0
15
20
0
49
4
0
10
212
20
0
49
5
0
97
37
19
1
15
37
19
2
15
15
2
15
20
2
20
1
85
6
9
207
20
1
20
2
20
1
82
3
80
49
7
1
81
2
19
3
15
39
8
20
3
49
9
1
19
4
15
39
8
20
3
20
2
49
10
2
15
20
1
19
5
15
20
1
19
6
15
20
6
20
2
84
11
9
159
39
8
20
6
49
9
1
20
4
49
12
1
19
7
15
20
7
78
84
11
9
146
39
8
20
6
20
5
49
10
2
15
20
5
79
81
2
19
5
8
147
1
15
20
6
79
81
2
19
6
15
68
8
97
1
15
39
8
20
5
20
2
49
10
2
15
20
5
19
8
15
20
0
20
1
20
8
79
82
3
35
2
49
13
1
15
20
0
20
8
79
81
2
20
2
35
2
49
13
1
8
208
1
15
68
8
18
1
15
5
11
I
d
I
9
I
0
I
0
I
0
n
p
14
x
6
@start
x
6
@total
x
1
+
x
1
-
x
6
empty?
x
3
pop
x
1
>
x
6
divide
x
6
@tuple
x
2
at
x
4
swap
x
1
<
x
3
<=>
x
4
push
p
53
I
-1
I
775
I
0
I
776
I
12
I
778
I
19
I
779
I
2a
I
77b
I
32
I
77c
I
43
I
77f
I
4d
I
781
I
57
I
782
I
5c
I
784
I
61
I
785
I
69
I
786
I
78
I
787
I
7f
I
788
I
89
I
789
I
92
I
787
I
93
I
0
I
94
I
78c
I
9f
I
0
I
a1
I
78f
I
ab
I
791
I
b0
I
794
I
bf
I
795
I
cf
I
77b
I
d0
I
0
I
d6
I
799
I
d8
x
22
kernel/common/array.rb
p
9
x
5
stack
x
4
left
x
5
right
x
10
pivotindex
x
5
pivot
x
5
store
x
1
i
x
3
cmp
x
6
pi_new
x
12
qsort_block!
M
1
n
n
x
12
qsort_block!
i
251
39
0
39
0
39
1
81
2
79
82
3
35
2
35
1
19
1
15
20
1
49
4
0
10
247
20
1
49
5
0
97
37
19
2
15
37
19
3
15
15
2
15
20
3
20
2
85
6
9
242
20
2
20
3
20
2
82
3
80
49
7
1
81
2
19
4
15
39
8
20
4
49
9
1
19
5
15
39
8
20
4
20
3
49
10
2
15
20
2
19
6
15
20
2
19
7
15
20
7
20
3
84
11
9
194
20
0
39
8
20
7
49
9
1
20
5
49
12
2
19
8
15
20
8
49
13
0
9
142
5
45
14
15
7
16
64
47
49
17
2
8
143
1
15
45
18
19
20
8
49
20
1
19
9
15
20
9
78
84
11
9
181
39
8
20
7
20
6
49
10
2
15
20
6
79
81
2
19
6
8
182
1
15
20
7
79
81
2
19
7
15
68
8
97
1
15
39
8
20
6
20
3
49
10
2
15
20
6
19
10
15
20
1
20
2
20
10
79
82
3
35
2
49
21
1
15
20
1
20
10
79
81
2
20
3
35
2
49
21
1
8
243
1
15
68
8
18
1
15
5
11
I
f
I
b
I
1
I
0
I
1
n
p
22
x
6
@start
x
6
@total
x
1
+
x
1
-
x
6
empty?
x
3
pop
x
1
>
x
6
divide
x
6
@tuple
x
2
at
x
4
swap
x
1
<
x
4
call
x
4
nil?
x
13
ArgumentError
n
s
18
block returned nil
x
5
raise
x
10
Comparable
n
x
11
compare_int
x
4
push
p
59
I
-1
I
79e
I
0
I
79f
I
12
I
7a1
I
19
I
7a2
I
2a
I
7a4
I
32
I
7a5
I
43
I
7a9
I
4d
I
7ab
I
57
I
7ac
I
5c
I
7ae
I
61
I
7af
I
69
I
7b0
I
7a
I
7b1
I
8f
I
0
I
90
I
7b2
I
9b
I
7b3
I
a2
I
7b4
I
ac
I
7b5
I
b5
I
7b3
I
b6
I
0
I
b7
I
7b8
I
c2
I
0
I
c4
I
7bb
I
ce
I
7bd
I
d3
I
7c0
I
e2
I
7c1
I
f2
I
7a4
I
f3
I
0
I
f9
I
7c5
I
fb
x
22
kernel/common/array.rb
p
11
x
5
block
x
5
stack
x
4
left
x
5
right
x
10
pivotindex
x
5
pivot
x
5
store
x
1
i
x
12
block_result
x
3
cmp
x
6
pi_new
x
6
isort!
M
1
n
n
x
6
isort!
i
174
20
0
79
81
0
19
2
15
39
1
19
3
15
20
2
20
1
49
2
1
9
172
20
2
19
4
15
20
4
39
3
85
4
9
159
20
4
79
82
5
19
5
15
20
3
20
5
49
6
1
19
6
15
20
3
20
4
49
6
1
19
7
15
20
6
20
7
49
7
1
19
8
9
77
1
8
116
5
45
8
9
7
10
20
6
49
11
0
47
101
12
7
13
20
7
49
11
0
47
101
12
7
14
20
4
47
101
12
7
15
63
7
47
49
16
2
15
20
8
78
85
4
9
127
1
8
130
1
8
160
15
20
3
20
4
20
6
49
17
2
15
20
3
20
5
20
7
49
17
2
15
20
5
19
4
15
68
8
27
1
15
20
2
79
81
0
19
2
15
68
8
13
1
11
I
12
I
9
I
2
I
0
I
2
n
p
18
x
1
+
x
6
@tuple
x
2
<=
x
6
@start
x
1
>
x
1
-
x
2
at
x
3
<=>
x
13
ArgumentError
n
s
14
comparison of 
x
7
inspect
x
4
to_s
s
6
 with 
s
9
 failed (
s
1
)
x
5
raise
x
3
put
p
41
I
-1
I
7ca
I
0
I
7cb
I
8
I
7cd
I
d
I
7cf
I
16
I
7d0
I
1b
I
7d2
I
23
I
7d3
I
2b
I
7d4
I
35
I
7d5
I
3f
I
7d7
I
4d
I
7d8
I
74
I
0
I
75
I
7db
I
82
I
0
I
83
I
7dd
I
8d
I
7de
I
97
I
7e0
I
9f
I
0
I
a1
I
7e3
I
ac
I
0
I
ae
x
22
kernel/common/array.rb
p
9
x
4
left
x
5
right
x
1
i
x
3
tup
x
1
j
x
2
jp
x
3
el1
x
3
el2
x
3
cmp
x
12
isort_block!
M
1
n
n
x
12
isort_block!
i
126
20
0
79
81
0
19
3
15
20
3
20
1
49
1
1
9
124
20
3
19
4
15
20
4
39
2
85
3
9
111
20
2
39
4
20
4
79
82
5
49
6
1
39
4
20
4
49
6
1
49
7
2
19
5
15
20
5
49
8
0
9
75
5
45
9
10
7
11
64
47
49
12
2
8
107
20
5
78
85
3
9
104
39
4
20
4
20
4
79
82
5
49
13
2
15
20
4
79
82
5
19
4
8
107
1
8
112
15
68
8
22
1
15
20
3
79
81
0
19
3
15
68
8
8
1
11
I
a
I
6
I
3
I
0
I
3
n
p
14
x
1
+
x
2
<=
x
6
@start
x
1
>
x
6
@tuple
x
1
-
x
2
at
x
4
call
x
4
nil?
x
13
ArgumentError
n
s
17
block returnd nil
x
5
raise
x
4
swap
p
31
I
-1
I
7e9
I
0
I
7ea
I
8
I
7ec
I
11
I
7ed
I
16
I
7ef
I
1e
I
7f0
I
37
I
7f2
I
3e
I
7f3
I
4b
I
7f4
I
52
I
7f5
I
5f
I
7f6
I
68
I
7f8
I
6b
I
0
I
71
I
7fc
I
7c
I
0
I
7e
x
22
kernel/common/array.rb
p
6
x
4
left
x
5
right
x
5
block
x
1
i
x
1
j
x
12
block_result
x
16
__rescue_match__
M
1
n
n
x
16
__rescue_match__
i
10
5
56
0
47
50
1
0
15
3
11
I
3
I
1
I
1
I
0
I
1
n
p
2
M
1
p
2
x
9
for_block
t
n
x
16
__rescue_match__
i
19
57
19
0
15
20
0
21
1
0
86
0
9
17
2
31
8
18
1
11
I
4
I
1
I
1
I
0
I
1
n
p
1
x
3
===
p
5
I
0
I
803
I
12
I
0
I
13
x
22
kernel/common/array.rb
p
1
x
1
x
x
4
each
p
7
I
-1
I
802
I
0
I
803
I
8
I
804
I
a
x
22
kernel/common/array.rb
p
1
x
9
exception
x
14
ValueGenerator
x
10
open_class
x
14
__class_init__
M
1
n
n
x
14
ValueGenerator
i
58
5
66
99
7
0
7
1
65
67
49
2
0
49
3
4
15
99
7
4
7
5
65
67
49
2
0
49
3
4
15
99
7
6
7
7
65
67
49
2
0
49
3
4
15
99
7
8
7
9
65
67
49
2
0
49
3
4
11
I
5
I
0
I
0
I
0
I
0
n
p
10
x
10
initialize
M
1
n
n
x
10
initialize
i
9
20
0
38
0
15
78
38
1
11
I
2
I
1
I
1
I
0
I
1
n
p
2
x
6
@array
x
6
@index
p
7
I
-1
I
809
I
0
I
80a
I
5
I
80b
I
9
x
22
kernel/common/array.rb
p
1
x
5
array
x
17
method_visibility
x
15
add_defn_method
x
5
next?
M
1
n
n
x
5
next?
i
10
39
0
39
1
49
2
0
84
3
11
I
2
I
0
I
0
I
0
I
0
n
p
4
x
6
@index
x
6
@array
x
4
size
x
1
<
p
5
I
-1
I
80e
I
0
I
80f
I
a
x
22
kernel/common/array.rb
p
0
x
4
next
M
1
n
n
x
4
next
i
22
39
0
39
1
49
2
1
19
0
15
39
1
79
81
3
38
1
15
20
0
11
11
I
3
I
1
I
0
I
0
I
0
n
p
4
x
6
@array
x
6
@index
x
2
at
x
1
+
p
9
I
-1
I
812
I
0
I
813
I
a
I
814
I
12
I
815
I
16
x
22
kernel/common/array.rb
p
1
x
3
val
x
6
rewind
M
1
n
n
x
6
rewind
i
4
78
38
0
11
I
1
I
0
I
0
I
0
I
0
n
p
1
x
6
@index
p
5
I
-1
I
818
I
0
I
819
I
4
x
22
kernel/common/array.rb
p
0
p
9
I
2
I
809
I
10
I
80e
I
1e
I
812
I
2c
I
818
I
3a
x
22
kernel/common/array.rb
p
0
x
12
to_generator
M
1
n
n
x
12
to_generator
i
38
20
0
7
0
83
1
9
36
45
2
3
13
71
4
47
9
30
47
49
5
0
13
5
47
49
6
1
15
8
34
5
49
4
1
8
37
1
11
I
4
I
1
I
1
I
0
I
1
n
p
7
x
4
each
x
2
==
x
14
ValueGenerator
n
x
3
new
x
8
allocate
x
10
initialize
p
11
I
-1
I
81d
I
0
I
81e
I
8
I
81f
I
24
I
81e
I
25
I
0
I
26
x
22
kernel/common/array.rb
p
1
x
6
method
p
201
I
2
I
b
I
b
I
15
I
16
I
26
I
24
I
53
I
2c
I
5b
I
3a
I
b6
I
44
I
b8
I
52
I
161
I
5c
I
163
I
64
I
167
I
72
I
171
I
80
I
17e
I
8e
I
189
I
9c
I
1b6
I
aa
I
1be
I
b8
I
1cf
I
c6
I
1eb
I
d4
I
20b
I
e2
I
219
I
f0
I
22a
I
fe
I
237
I
10c
I
24d
I
11a
I
253
I
128
I
260
I
136
I
26e
I
144
I
283
I
152
I
2a5
I
160
I
2bf
I
16e
I
2dd
I
17c
I
2ed
I
18a
I
2fe
I
198
I
306
I
1a6
I
32a
I
1b4
I
37b
I
1c2
I
386
I
1d0
I
392
I
1de
I
3a2
I
1ec
I
3d7
I
1fa
I
3f5
I
208
I
407
I
216
I
418
I
220
I
41e
I
22e
I
430
I
23c
I
443
I
24a
I
476
I
258
I
487
I
262
I
489
I
26c
I
48c
I
27a
I
4d2
I
288
I
4f5
I
296
I
519
I
2a4
I
531
I
2ac
I
534
I
2ba
I
55d
I
2c8
I
57e
I
2d6
I
588
I
2e4
I
595
I
2f2
I
59c
I
300
I
5aa
I
30e
I
5b5
I
318
I
5b6
I
320
I
5ba
I
32e
I
5c0
I
33c
I
5cc
I
34a
I
5df
I
358
I
5fa
I
366
I
600
I
370
I
605
I
37e
I
625
I
38c
I
634
I
39a
I
664
I
3a8
I
669
I
3b6
I
678
I
3c4
I
685
I
3d2
I
69b
I
3da
I
6a1
I
3e4
I
6a2
I
3ec
I
6a6
I
3fa
I
6af
I
408
I
6b7
I
416
I
6d1
I
424
I
701
I
432
I
713
I
440
I
729
I
44e
I
739
I
456
I
73b
I
464
I
74d
I
46c
I
751
I
47a
I
772
I
482
I
775
I
490
I
79b
I
498
I
79e
I
4a6
I
7c7
I
4ae
I
7ca
I
4bc
I
7e6
I
4c4
I
7e9
I
4d2
I
7ff
I
4da
I
802
I
4e8
I
808
I
503
I
81d
I
511
x
22
kernel/common/array.rb
p
0
x
13
attach_method
p
3
I
0
I
a
I
1d
x
22
kernel/common/array.rb
p
0
